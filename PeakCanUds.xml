<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PeakCanUds</name>
    </assembly>
    <members>
        <member name="T:PeakCanUds.MsgConfiguration">
            <summary>
            Contains the parameters that are needed for the configuration of the msgConfig.
            It has 2 Constructors. One for CAN-Basic and one for CAN-FD.
            </summary>
        </member>
        <member name="M:PeakCanUds.MsgConfiguration.#ctor(System.UInt32,System.UInt32,Peak.Can.Uds.uds_msgprotocol,Peak.Can.IsoTp.cantp_can_msgtype,Peak.Can.Uds.uds_msgtype,Peak.Can.IsoTp.cantp_isotp_addressing,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:PeakCanUds.MsgConfiguration"/> struct.
            Use for CAN-Basic.
            </summary>
            <param name="canIdTestEquipment">CAN ID of external test equipment (Peak). Bsp. 0x7E1. </param>
            <param name="canIdDut">CAN ID of DUT.Bsp. 0x7E9. </param>
            <param name="protocol">The addressing protocol.</param>
            <param name="canMsgType">The CAN message type.</param>
            <param name="udsMsgType">The UDS message type.</param>
            <param name="targetType">The target type (usually Physical).</param>
            <param name="canTxDlc">The number of bytes per telegram (usually 8).</param>
        </member>
        <member name="M:PeakCanUds.MsgConfiguration.#ctor(System.UInt32,System.UInt32,Peak.Can.Uds.uds_msgprotocol,Peak.Can.IsoTp.cantp_can_msgtype,Peak.Can.Uds.uds_msgtype,Peak.Can.IsoTp.cantp_isotp_addressing,System.UInt16,System.UInt16,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:PeakCanUds.MsgConfiguration"/> struct.
            USe for CAN-FD.
            </summary>
            <param name="canIdTestEquipment">CAN ID of external test equipment (Peak). Bsp. 0x7E1. </param>
            <param name="canIdDut">CAN ID of DUT.Bsp. 0x7E9. </param>
            <param name="protocol">The addressing protocol.</param>
            <param name="canMsgType">The CAN message type.</param>
            <param name="udsMsgType">The UDS message type.</param>
            <param name="targetType">The target type (usually Physical).</param>
            <param name="extendedSourceAddress">The extended test equipment address.</param>
            <param name="extendedTargetAddress">The extended DUT address.</param>
            <param name="canTxDlc">The number of bytes per telegram (usually 8).</param>
        </member>
        <member name="P:PeakCanUds.MsgConfiguration.CanIdTestEquipment">
            <summary>
            Gets or sets the CAN ID of the test equipment (PEAK).
            </summary>
        </member>
        <member name="P:PeakCanUds.MsgConfiguration.CanIdDut">
            <summary>
            Gets or sets the CAN ID of the DUT.
            </summary>
        </member>
        <member name="P:PeakCanUds.MsgConfiguration.Protocol">
            <summary>
            Gets or sets the addressing protocol.
            </summary>
        </member>
        <member name="P:PeakCanUds.MsgConfiguration.CanMsgType">
            <summary>
             Gets or sets the CAN message type.
            </summary>
        </member>
        <member name="P:PeakCanUds.MsgConfiguration.UdsMsgType">
            <summary>
             Gets or sets the UDS message type.
            </summary>
        </member>
        <member name="P:PeakCanUds.MsgConfiguration.TargetType">
            <summary>
             Gets or sets the target type (usually Physical).
            </summary>
        </member>
        <member name="P:PeakCanUds.MsgConfiguration.CanTxDlc">
            <summary>
             Gets or sets the number of bytes per telegram (usually 8).
            </summary>
        </member>
        <member name="P:PeakCanUds.MsgConfiguration.ExtendedSourceAddress">
            <summary>
             Gets or sets extended test equipment address.
            </summary>
        </member>
        <member name="P:PeakCanUds.MsgConfiguration.ExtendedTargetAddress">
            <summary>
             Gets or sets extended DUT address.
            </summary>
        </member>
        <member name="T:PeakCanUds.PeakCanBusInterfaceChannels">
            <summary>
            Availble interfaces and channels for a PCAN bus.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.NONEBUS">
            <summary>
            Undefined/default value for a PCAN bus.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.ISABUS1">
            <summary>
            PCAN-ISA interface, channel 1.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.ISABUS2">
            <summary>
            PCAN-ISA interface, channel 2.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.ISABUS3">
            <summary>
            PCAN-ISA interface, channel 3.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.ISABUS4">
            <summary>
            PCAN-ISA interface, channel 4.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.ISABUS5">
            <summary>
            PCAN-ISA interface, channel 5.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.ISABUS6">
            <summary>
            PCAN-ISA interface, channel 6.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.ISABUS7">
            <summary>
            PCAN-ISA interface, channel 7.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.ISABUS8">
            <summary>
            PCAN-ISA interface, channel 8.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.DNGBUS1">
            <summary>
            PPCAN-Dongle/LPT interface, channel 1.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.PCIBUS1">
            <summary>
            PCAN-PCI interface, channel 1.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.PCIBUS2">
            <summary>
            PCAN-PCI interface, channel 2.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.PCIBUS3">
            <summary>
            PCAN-PCI interface, channel 3.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.PCIBUS4">
            <summary>
            PCAN-PCI interface, channel 4.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.PCIBUS5">
            <summary>
            PCAN-PCI interface, channel 5.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.PCIBUS6">
            <summary>
            PCAN-PCI interface, channel 6.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.PCIBUS7">
            <summary>
            PCAN-PCI interface, channel 7.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.PCIBUS8">
            <summary>
            PCAN-PCI interface, channel 8.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.PCIBUS9">
            <summary>
            PCAN-PCI interface, channel 9.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.PCIBUS10">
            <summary>
            PCAN-PCI interface, channel 10.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.PCIBUS11">
            <summary>
            PCAN-PCI interface, channel 11.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.PCIBUS12">
            <summary>
            PCAN-PCI interface, channel 12.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.PCIBUS13">
            <summary>
            PCAN-PCI interface, channel 13.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.PCIBUS14">
            <summary>
            PCAN-PCI interface, channel 14.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.PCIBUS15">
            <summary>
            PCAN-PCI interface, channel 15.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.PCIBUS16">
            <summary>
            PCAN-PCI interface, channel 16.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.USBBUS1">
            <summary>
            PCAN-USB interface, channel 1.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.USBBUS2">
            <summary>
            PCAN-USB interface, channel 2.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.USBBUS3">
            <summary>
            PCAN-USB interface, channel 3.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.USBBUS4">
            <summary>
            PCAN-USB interface, channel 4.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.USBBUS5">
            <summary>
            PCAN-USB interface, channel 5.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.USBBUS6">
            <summary>
            PCAN-USB interface, channel 6.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.USBBUS7">
            <summary>
            PCAN-USB interface, channel 7.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.USBBUS8">
            <summary>
            PCAN-USB interface, channel 8.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.USBBUS9">
            <summary>
            PCAN-USB interface, channel 9.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.USBBUS10">
            <summary>
            PCAN-USB interface, channel 10.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.USBBUS11">
            <summary>
            PCAN-USB interface, channel 11.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.USBBUS12">
            <summary>
            PCAN-USB interface, channel 12.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.USBBUS13">
            <summary>
            PCAN-USB interface, channel 13.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.USBBUS14">
            <summary>
            PCAN-USB interface, channel 14.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.USBBUS15">
            <summary>
            PCAN-USB interface, channel 15.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.USBBUS16">
            <summary>
            PCAN-USB interface, channel 16.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.PCCBUS1">
            <summary>
            PCAN-PC Card interface, channel 1.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.PCCBUS2">
            <summary>
            PCAN-PC Card interface, channel 2.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.LANBUS1">
            <summary>
            PCAN-LAN interface, channel 1.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.LANBUS2">
            <summary>
            PCAN-LAN interface, channel 2.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.LANBUS3">
            <summary>
            PCAN-LAN interface, channel 3.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.LANBUS4">
            <summary>
            PCAN-LAN interface, channel 4.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.LANBUS5">
            <summary>
            PCAN-LAN interface, channel 5.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.LANBUS6">
            <summary>
            PCAN-LAN interface, channel 6.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.LANBUS7">
            <summary>
            PCAN-LAN interface, channel 7.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.LANBUS8">
            <summary>
            PCAN-LAN interface, channel 8.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.LANBUS9">
            <summary>
            PCAN-LAN interface, channel 9.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.LANBUS10">
            <summary>
            PCAN-LAN interface, channel 10.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.LANBUS11">
            <summary>
            PCAN-LAN interface, channel 11.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.LANBUS12">
            <summary>
            PCAN-LAN interface, channel 12.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.LANBUS13">
            <summary>
            PCAN-LAN interface, channel 13.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.LANBUS14">
            <summary>
            PCAN-LAN interface, channel 14.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.LANBUS15">
            <summary>
            PCAN-LAN interface, channel 15.
            </summary>
        </member>
        <member name="F:PeakCanUds.PeakCanBusInterfaceChannels.LANBUS16">
            <summary>
            PCAN-LAN interface, channel 16.
            </summary>
        </member>
        <member name="T:PeakCanUds.Uds">
            <summary>
            Class containing the main methodes used for the can communication using Peak-Interfaces.
            </summary>
        </member>
        <member name="M:PeakCanUds.Uds.#ctor(Peak.Can.IsoTp.cantp_handle,PeakCanUds.Uds.PrintHandlerDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:PeakCanUds.Uds"/> class for a given handle.
            </summary>
            <param name="handle">Represents currently defined and supported PCANTP handle (a.k.a. channels).</param>
            <param name="printHandler">Methode for printing Can activity. type void. parameters: string with text, and bool for deciding if text gets printed in logWindow or reportWindow.  </param>
        </member>
        <member name="M:PeakCanUds.Uds.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:PeakCanUds.Uds"/> class.
            </summary>
        </member>
        <member name="T:PeakCanUds.Uds.PrintHandlerDelegate">
            <summary>
            Delegate for a print method.
            </summary>
            <param name="message">The message to be printed.</param>
            <param name="isErrorMessage">A value indicating whether the message represents an error.</param>
        </member>
        <member name="P:PeakCanUds.Uds.LogFileName">
            <summary>
            Gets or sets Name for the Log File (without ".txt").
            </summary>
        </member>
        <member name="P:PeakCanUds.Uds.LogFileDirectory">
            <summary>
            Gets or sets the directory for the log file.
            </summary>
        </member>
        <member name="P:PeakCanUds.Uds.LogToFileEnable">
            <summary>
            Gets or sets a value indicating whether a log file containing the can bus activity is created.
            </summary>
        </member>
        <member name="P:PeakCanUds.Uds.PrintOnScreenEnable">
            <summary>
            Gets or sets a value indicating whetherthe can bus activity gets printed on screen.
            </summary>
        </member>
        <member name="M:PeakCanUds.Uds.FindPeakDeviceUsbChannel(System.UInt32)">
            <summary>
            [DEPRECATED: Use <see cref="M:PeakCanUds.Uds.GetCanChannelByDeviceId(System.UInt32,System.UInt32)"/> instead] <br/>
            Finds the usbChannel for a given device Id. Only useful for single channel interfaces.
            </summary>
            <param name="deviceId"> Id can be configured using PCanView software.</param>
            <returns>deviceUsbChannel if found, else 0. </returns>
        </member>
        <member name="M:PeakCanUds.Uds.GetCanChannelByDeviceId(System.UInt32,System.UInt32)">
            <summary>
            Gets the interface channel to which a PEAK-CAN device is connected, given the device id.
            </summary>
            <param name="deviceId">Device Id set with the software PEAK-Hardware.</param>
            <param name="deviceChannel">The channel of the device. This is useful for multichannel devices like PCI-Boards (First channel: 1).</param>
            <returns>The interface channel as an enum.</returns>
        </member>
        <member name="M:PeakCanUds.Uds.InitializeCanFd(System.String,PeakCanUds.MsgConfiguration)">
            <summary>
            Initializes a PUDS channel based on a PCANTP handle (including CAN FD support).
            </summary>
            <param name="bitrateCanFd">The speed for the communication.</param>
            <param name="msgConfig">The message configuration that should be used to initialize this UDS instance.</param>
            <returns>uds_status.</returns>
        </member>
        <member name="M:PeakCanUds.Uds.InitializeCan(Peak.Can.IsoTp.cantp_baudrate,PeakCanUds.MsgConfiguration)">
            <summary>
            Initializes a PUDS channel based on a PCANTP handle (without CAN FD support).
            </summary>
            <param name="baudrate">The speed for the communication.</param>
            <param name="msgConfig"> Struct with configuration for the messages.  Must be defined and initialized before instantiating a <see cref="T:PeakCanUds.Uds"/> object. </param>
            <returns>uds_status.</returns>
        </member>
        <member name="M:PeakCanUds.Uds.Write(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Transmits a message using a connected PUDS channel.
            </summary>
            <param name="message">list or array with message bytes.</param>
            <returns>Returns TRUE if an error occurred.</returns>
        </member>
        <member name="M:PeakCanUds.Uds.Read(System.Byte[]@,System.UInt32)">
            <summary>
            Tries to read a Can message from the buffer. In case the response is not found in the buffer it will retry util timeout is reached.
            </summary>
            <param name="responseMessage"> ByteArray containing the can response.</param>
            <param name="timeoutMilliSeconds"> Time to retry to get the response from the buffer.</param>
            <returns>Returns TRUE if an error occurred.</returns>
        </member>
        <member name="M:PeakCanUds.Uds.WriteAndGetResponse(System.Collections.Generic.IEnumerable{System.Byte},System.Byte[]@,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Writes a message then waits and gets the response.
            </summary>
            <param name="message">List or Array containing the bytes to send.</param>
            <param name="response">byte array for saving the response.</param>
            <param name="timeOut">time to wait for the answer.</param>
            <param name="retryTimeOut">time to wait for the answer in case a retry is needed.</param>
            <param name="enhancedTimeOut">extra time to wait for the answer in case the ECU asks for more time.</param>
            <returns>Returns TRUE if an error occurred.</returns>
        </member>
        <member name="M:PeakCanUds.Uds.Uninitialize">
            <summary>
            Uninitializes the PUD Channel of the present instance of <see cref="T:PeakCanUds.Uds"/> class.
            </summary>
            <returns>The return value is a uds_status code. PUDS_STATUS_OK is returned on success.</returns>
        </member>
        <member name="M:PeakCanUds.Uds.MsgConfig(System.UInt32,Peak.Can.Uds.uds_msgprotocol,Peak.Can.IsoTp.cantp_can_msgtype,Peak.Can.Uds.uds_msgtype,Peak.Can.IsoTp.cantp_isotp_addressing)">
            <summary>
            Helps configure the msgConfig struct with the needed values for the session.
            </summary>
            <param name="canId">CAN identifier.</param>
            <param name="protocol">Represents the protocol being used for communication.</param>
            <param name="canMsgType">Optional flags for the CAN layer.</param>
            <param name="udsMsgType">Message specific flags.</param>
            <param name="targetType">Represents the target address type.</param>
        </member>
        <member name="M:PeakCanUds.Uds.GetUdsStatusErrorText(Peak.Can.Uds.uds_status)">
            <summary>
            Gives back a text message that represents the UDs-Status.
            </summary>
            <param name="status">uds_status.</param>
            <returns>status as string.</returns>
        </member>
        <member name="M:PeakCanUds.Uds.GetNrcDescription(Peak.Can.Uds.uds_nrc)">
            <summary>
            Gets the text description for a given nrc (negative response code).
            </summary>
            <param name="nrc">Negative response enum. </param>
            <returns>Text description of the nrc. </returns>
        </member>
        <member name="M:PeakCanUds.Uds.GetFormattedError(Peak.Can.Basic.TPCANStatus)">
            <summary>
            Gives the text description for a given TPCANStatus error.
            </summary>
            <param name="error">TPCANStatus. </param>
            <returns>string. </returns>
        </member>
        <member name="M:PeakCanUds.Uds.GetAnswer(Peak.Can.Uds.uds_msg)">
            <summary>
            Gets the data from the Buffer.
            </summary>
            <param name="rxMsg">The received message.</param>
            <returns>ByteArray containing answer.</returns>
        </member>
        <member name="M:PeakCanUds.Uds.LogToTextFile(System.String)">
            <summary>
            If LogToFileEnable is true, this method writes the bus activity on a text file.
            </summary>
            <param name="logText">The logged bus activity.</param>
        </member>
        <member name="M:PeakCanUds.Uds.PrintOnScreen(System.String,System.Boolean)">
            <summary>
            If PrintOnScreenEnable = true, this method prints the bus activity on screen.
            </summary>
            <param name="message">The message to be printed.</param>
            <param name="isErrorMessage">A value indicating whether the message is an error message.</param>
        </member>
        <member name="M:PeakCanUds.Uds.PrintAndLog(System.String,System.Boolean)">
            <summary>
            This method calls two other methods: LogToTextFile() and PrintOnScreen().
            </summary>
            <param name="txt"> string to be printed or logged.</param>
            <param name="isErrorMessage"> Depending on this parameter, the message will be printed on the report or the log Window. </param>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_handle">
            <summary>
            Represents currently defined and supported PCANTP handle (a.k.a. channels)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_NONEBUS">
            <summary>
            Undefined/default value for a PCAN bus
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_ISABUS1">
            <summary>
            PCAN-ISA interface, channel 1
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_ISABUS2">
            <summary>
            PCAN-ISA interface, channel 2
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_ISABUS3">
            <summary>
            PCAN-ISA interface, channel 3
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_ISABUS4">
            <summary>
            PCAN-ISA interface, channel 4
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_ISABUS5">
            <summary>
            PCAN-ISA interface, channel 5
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_ISABUS6">
            <summary>
            PCAN-ISA interface, channel 6
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_ISABUS7">
            <summary>
            PCAN-ISA interface, channel 7
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_ISABUS8">
            <summary>
            PCAN-ISA interface, channel 8
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_DNGBUS1">
            <summary>
            PCAN-Dongle/LPT interface, channel 1
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_PCIBUS1">
            <summary>
            PCAN-PCI interface, channel 1
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_PCIBUS2">
            <summary>
            PCAN-PCI interface, channel 2
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_PCIBUS3">
            <summary>
            PCAN-PCI interface, channel 3
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_PCIBUS4">
            <summary>
            PCAN-PCI interface, channel 4
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_PCIBUS5">
            <summary>
            PCAN-PCI interface, channel 5
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_PCIBUS6">
            <summary>
            PCAN-PCI interface, channel 6
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_PCIBUS7">
            <summary>
            PCAN-PCI interface, channel 7
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_PCIBUS8">
            <summary>
            PCAN-PCI interface, channel 8
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_PCIBUS9">
            <summary>
            PCAN-PCI interface, channel 9
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_PCIBUS10">
            <summary>
            PCAN-PCI interface, channel 10
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_PCIBUS11">
            <summary>
            PCAN-PCI interface, channel 11
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_PCIBUS12">
            <summary>
            PCAN-PCI interface, channel 12
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_PCIBUS13">
            <summary>
            PCAN-PCI interface, channel 13
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_PCIBUS14">
            <summary>
            PCAN-PCI interface, channel 14
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_PCIBUS15">
            <summary>
            PCAN-PCI interface, channel 15
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_PCIBUS16">
            <summary>
            PCAN-PCI interface, channel 16
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_USBBUS1">
            <summary>
            PCAN-USB interface, channel 1
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_USBBUS2">
            <summary>
            PCAN-USB interface, channel 2
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_USBBUS3">
            <summary>
            PCAN-USB interface, channel 3
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_USBBUS4">
            <summary>
            PCAN-USB interface, channel 4
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_USBBUS5">
            <summary>
            PCAN-USB interface, channel 5
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_USBBUS6">
            <summary>
            PCAN-USB interface, channel 6
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_USBBUS7">
            <summary>
            PCAN-USB interface, channel 7
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_USBBUS8">
            <summary>
            PCAN-USB interface, channel 8
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_USBBUS9">
            <summary>
            PCAN-USB interface, channel 9
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_USBBUS10">
            <summary>
            PCAN-USB interface, channel 10
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_USBBUS11">
            <summary>
            PCAN-USB interface, channel 11
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_USBBUS12">
            <summary>
            PCAN-USB interface, channel 12
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_USBBUS13">
            <summary>
            PCAN-USB interface, channel 13
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_USBBUS14">
            <summary>
            PCAN-USB interface, channel 14
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_USBBUS15">
            <summary>
            PCAN-USB interface, channel 15
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_USBBUS16">
            <summary>
            PCAN-USB interface, channel 16
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_PCCBUS1">
            <summary>
            PCAN-PC Card interface, channel 1
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_PCCBUS2">
            <summary>
            PCAN-PC Card interface, channel 2
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_LANBUS1">
            <summary>
            PCAN-LAN interface, channel 1
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_LANBUS2">
            <summary>
            PCAN-LAN interface, channel 2
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_LANBUS3">
            <summary>
            PCAN-LAN interface, channel 3
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_LANBUS4">
            <summary>
            PCAN-LAN interface, channel 4
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_LANBUS5">
            <summary>
            PCAN-LAN interface, channel 5
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_LANBUS6">
            <summary>
            PCAN-LAN interface, channel 6
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_LANBUS7">
            <summary>
            PCAN-LAN interface, channel 7
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_LANBUS8">
            <summary>
            PCAN-LAN interface, channel 8
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_LANBUS9">
            <summary>
            PCAN-LAN interface, channel 9
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_LANBUS10">
            <summary>
            PCAN-LAN interface, channel 10
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_LANBUS11">
            <summary>
            PCAN-LAN interface, channel 11
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_LANBUS12">
            <summary>
            PCAN-LAN interface, channel 12
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_LANBUS13">
            <summary>
            PCAN-LAN interface, channel 13
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_LANBUS14">
            <summary>
            PCAN-LAN interface, channel 14
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_LANBUS15">
            <summary>
            PCAN-LAN interface, channel 15
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_handle.PCANTP_HANDLE_LANBUS16">
            <summary>
            PCAN-LAN interface, channel 16
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_baudrate">
            <summary>
            Represents the baudrate register for the PCANTP channel 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_baudrate.PCANTP_BAUDRATE_1M">
            <summary>
             Channel Baudrate 1 MBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_baudrate.PCANTP_BAUDRATE_800K">
            <summary>
             Channel Baudrate 800 kBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_baudrate.PCANTP_BAUDRATE_500K">
            <summary>
             Channel Baudrate 500 kBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_baudrate.PCANTP_BAUDRATE_250K">
            <summary>
             Channel Baudrate 250 kBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_baudrate.PCANTP_BAUDRATE_125K">
            <summary>
             Channel Baudrate 125 kBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_baudrate.PCANTP_BAUDRATE_100K">
            <summary>
             Channel Baudrate 100 kBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_baudrate.PCANTP_BAUDRATE_95K">
            <summary>
             Channel Baudrate 95,238 kBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_baudrate.PCANTP_BAUDRATE_83K">
            <summary>
             Channel Baudrate 83,333 kBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_baudrate.PCANTP_BAUDRATE_50K">
            <summary>
             Channel Baudrate 50 kBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_baudrate.PCANTP_BAUDRATE_47K">
            <summary>
             Channel Baudrate 47,619 kBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_baudrate.PCANTP_BAUDRATE_33K">
            <summary>
             Channel Baudrate 33,333 kBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_baudrate.PCANTP_BAUDRATE_20K">
            <summary>
             Channel Baudrate 20 kBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_baudrate.PCANTP_BAUDRATE_10K">
            <summary>
             Channel Baudrate 10 kBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_baudrate.PCANTP_BAUDRATE_5K">
            <summary>
             Channel Baudrate 5 kBit/s
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_hwtype">
            <summary>
            Type of PCAN (non plug-n-play) hardware
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_hwtype.PCANTP_HWTYPE_ISA">
            <summary>
            PCAN-ISA 82C200
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_hwtype.PCANTP_HWTYPE_ISA_SJA">
            <summary>
            PCAN-ISA SJA1000
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_hwtype.PCANTP_HWTYPE_ISA_PHYTEC">
            <summary>
            PHYTEC ISA 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_hwtype.PCANTP_HWTYPE_DNG">
            <summary>
            PCAN-Dongle 82C200
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_hwtype.PCANTP_HWTYPE_DNG_EPP">
            <summary>
            PCAN-Dongle EPP 82C200
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_hwtype.PCANTP_HWTYPE_DNG_SJA">
            <summary>
            PCAN-Dongle SJA1000
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_hwtype.PCANTP_HWTYPE_DNG_SJA_EPP">
            <summary>
            PCAN-Dongle EPP SJA1000
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_device">
            <summary>
            PCAN devices
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_device.PCANTP_DEVICE_NONE">
            <summary>
            Undefined, unknown or not selected PCAN device value
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_device.PCANTP_DEVICE_PEAKCAN">
            <summary>
            PCAN Non-Plug&amp;Play devices. NOT USED WITHIN PCAN-Basic API
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_device.PCANTP_DEVICE_ISA">
            <summary>
            PCAN-ISA, PCAN-PC/104, and PCAN-PC/104-Plus
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_device.PCANTP_DEVICE_DNG">
            <summary>
            PCAN-Dongle
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_device.PCANTP_DEVICE_PCI">
            <summary>
            PCAN-PCI, PCAN-cPCI, PCAN-miniPCI, and PCAN-PCI Express
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_device.PCANTP_DEVICE_USB">
            <summary>
            PCAN-USB and PCAN-USB Pro
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_device.PCANTP_DEVICE_PCC">
            <summary>
            PCAN-PC Card
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_device.PCANTP_DEVICE_VIRTUAL">
            <summary>
            PCAN Virtual hardware. NOT USED WITHIN PCAN-Basic API
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_device.PCANTP_DEVICE_LAN">
            <summary>
            PCAN Gateway devices
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_statustype">
            <summary>
            Represents each group of errors a status can hold
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_statustype.PCANTP_STATUSTYPE_OK">
            <summary>
            no error
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_statustype.PCANTP_STATUSTYPE_ERR">
            <summary>
            general error
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_statustype.PCANTP_STATUSTYPE_BUS">
            <summary>
            bus status
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_statustype.PCANTP_STATUSTYPE_NET">
            <summary>
            network status
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_statustype.PCANTP_STATUSTYPE_INFO">
            <summary>
            extra information
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_statustype.PCANTP_STATUSTYPE_PCAN">
            <summary>
            encapsulated PCAN-Basic status
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_netstatus">
            <summary>
            Represents the network result of the communication of an ISO-TP message (used in cantp_status).
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netstatus.PCANTP_NETSTATUS_OK">
            <summary>
            No network error
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netstatus.PCANTP_NETSTATUS_TIMEOUT_A">
            <summary>
            timeout occured between 2 frames transmission (sender and receiver side)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netstatus.PCANTP_NETSTATUS_TIMEOUT_Bs">
            <summary>
            sender side timeout while waiting for flow control frame
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netstatus.PCANTP_NETSTATUS_TIMEOUT_Cr">
            <summary>
            receiver side timeout while waiting for consecutive frame
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netstatus.PCANTP_NETSTATUS_WRONG_SN">
            <summary>
            unexpected sequence number
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netstatus.PCANTP_NETSTATUS_INVALID_FS">
            <summary>
            invalid or unknown FlowStatus
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netstatus.PCANTP_NETSTATUS_UNEXP_PDU">
            <summary>
            unexpected protocol data unit
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netstatus.PCANTP_NETSTATUS_WFT_OVRN">
            <summary>
            reception of flow control WAIT frame that exceeds the maximum counter defined by PCANTP_PARAMETER_WFT_MAX
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netstatus.PCANTP_NETSTATUS_BUFFER_OVFLW">
            <summary>
            buffer on the receiver side cannot store the data length (server side only)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netstatus.PCANTP_NETSTATUS_ERROR">
            <summary>
            general error
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netstatus.PCANTP_NETSTATUS_IGNORED">
            <summary>
            message was invalid and ignored
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netstatus.PCANTP_NETSTATUS_TIMEOUT_As">
            <summary>
            sender side timeout while transmitting
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netstatus.PCANTP_NETSTATUS_TIMEOUT_Ar">
            <summary>
            receiver side timeout while transmitting
            </summary>     
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netstatus.PCANTP_NETSTATUS_XMT_FULL">
            <summary>
            transmit queue is full (failed too many times)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netstatus.PCANTP_NETSTATUS_BUS_ERROR">
            <summary>
            CAN bus error
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netstatus.PCANTP_NETSTATUS_NO_MEMORY">
            <summary>
            memory allocation error
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_busstatus">
            <summary>
            Represents the status of a CAN bus (used in cantp_status).
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_busstatus.PCANTP_BUSSTATUS_OK">
            <summary>
            Bus is in active state
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_busstatus.PCANTP_BUSSTATUS_LIGHT">
            <summary>
            Bus error: an error counter reached the 'light' limit
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_busstatus.PCANTP_BUSSTATUS_HEAVY">
            <summary>
            Bus error: an error counter reached the 'heavy' limit
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_busstatus.PCANTP_BUSSTATUS_WARNING">
            <summary>
            Bus error: an error counter reached the 'warning/heavy' limit
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_busstatus.PCANTP_BUSSTATUS_PASSIVE">
            <summary>
            Bus error: the CAN controller is error passive
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_busstatus.PCANTP_BUSSTATUS_OFF">
            <summary>
            Bus error: the CAN controller is in bus-off state
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_busstatus.PCANTP_BUSSTATUS_ANY">
            <summary>
            Mask for all bus errors 
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_errstatus">
            <summary>
            Represents an general error (used in cantp_status).
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_errstatus.PCANTP_ERRSTATUS_OK">
            <summary>
            No error 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_errstatus.PCANTP_ERRSTATUS_NOT_INITIALIZED">
            <summary>
            Not Initialized
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_errstatus.PCANTP_ERRSTATUS_ALREADY_INITIALIZED">
            <summary>
            Already Initialized
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_errstatus.PCANTP_ERRSTATUS_NO_MEMORY">
            <summary>
            Could not obtain memory
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_errstatus.PCANTP_ERRSTATUS_OVERFLOW">
            <summary>
            Input buffer overflow
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_errstatus.PCANTP_ERRSTATUS_NO_MESSAGE">
            <summary>
            No Message available
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_errstatus.PCANTP_ERRSTATUS_PARAM_INVALID_TYPE">
            <summary>
            Parameter has an invalid or unexpected type
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_errstatus.PCANTP_ERRSTATUS_PARAM_INVALID_VALUE">
            <summary>
            Parameter has an invalid value
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_errstatus.PCANTP_ERRSTATUS_MAPPING_NOT_INITIALIZED">
            <summary>
            PCANTP mapping not initialized
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_errstatus.PCANTP_ERRSTATUS_MAPPING_INVALID">
            <summary>
            PCANTP mapping parameters are invalid
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_errstatus.PCANTP_ERRSTATUS_MAPPING_ALREADY_INITIALIZED">
            <summary>
            PCANTP mapping already defined
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_errstatus.PCANTP_ERRSTATUS_PARAM_BUFFER_TOO_SMALL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_errstatus.PCANTP_ERRSTATUS_QUEUE_TX_FULL">
            <summary>
            Tx queue is full
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_errstatus.PCANTP_ERRSTATUS_LOCK_TIMEOUT">
            <summary>
            Failed to get an access to the internal lock
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_errstatus.PCANTP_ERRSTATUS_INVALID_HANDLE">
            <summary>
            Invalid cantp_handle
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_errstatus.PCANTP_ERRSTATUS_UNKNOWN">
            <summary>
            unknown/generic error
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_infostatus">
            <summary>
            Represents additional status information (used in cantp_status).
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_infostatus.PCANTP_INFOSTATUS_OK">
            <summary>
            no extra information
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_infostatus.PCANTP_INFOSTATUS_CAUTION_INPUT_MODIFIED">
            <summary>
            input was modified by the API
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_infostatus.PCANTP_INFOSTATUS_CAUTION_DLC_MODIFIED">
            <summary>
            DLC value was modified by the API 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_infostatus.PCANTP_INFOSTATUS_CAUTION_DATA_LENGTH_MODIFIED">
            <summary>
            Data Length value was modified by the API 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_infostatus.PCANTP_INFOSTATUS_CAUTION_FD_FLAG_MODIFIED">
            <summary>
            FD related flags value were modified by the API 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_infostatus.PCANTP_INFOSTATUS_CAUTION_RX_QUEUE_FULL">
            <summary>
            Message receive queue is full (oldest messages may be lost)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_infostatus.PCANTP_INFOSTATUS_CAUTION_BUFFER_IN_USE">
            <summary>
            Buffer is used by another thread or API
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_status_offset">
            <summary>
            Defines constants used by the next enum: cantp_status
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_status">
            <summary>
             Represent the PCANTP error and status codes .
              
            Bits information:
              32|  28|  24|  20|  16|  12|   8|   4|   0|
                |    |    |    |    |    |    |    |    |
                 0000 0000 0000 0000 0000 0000 0000 0000 
                |    |    |    |    |         [0000 0000] => PCAN-ISO-TP API errors
                |    |    |    |    |  [0 0000]           => CAN Bus status
                |    |    |    | [00 000]                 => Networking message status
                |    |    [0000 00]                       => API extra information
                |[000 0000]                               => Reserved
                [0]                                       => PCANBasic error flag (overrides the meaning of all bits)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_FLAG_BUS_LIGHT">
            <summary>
            PCANTP Channel is in BUS-LIGHT error state
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_FLAG_BUS_HEAVY">
            <summary>
            PCANTP Channel is in BUS-HEAVY error state
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_FLAG_BUS_WARNING">
            <summary>
            PCANTP Channel is in BUS-HEAVY error state
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_FLAG_BUS_PASSIVE">
            <summary>
            PCANTP Channel is error passive state
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_FLAG_BUS_OFF">
            <summary>
            PCANTP Channel is in BUS-OFF error state
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_FLAG_BUS_ANY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_FLAG_NETWORK_RESULT">
            <summary>
            This flag states if one of the following network errors occured with the fetched message
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_NETWORK_TIMEOUT_A">
            <summary>
            timeout occured between 2 frames transmission (sender and receiver side)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_NETWORK_TIMEOUT_Bs">
            <summary>
            sender side timeout while waiting for flow control frame
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_NETWORK_TIMEOUT_Cr">
            <summary>
            receiver side timeout while waiting for consecutive frame
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_NETWORK_WRONG_SN">
            <summary>
            unexpected sequence number
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_NETWORK_INVALID_FS">
            <summary>
            invalid or unknown FlowStatus
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_NETWORK_UNEXP_PDU">
            <summary>
            unexpected protocol data unit
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_NETWORK_WFT_OVRN">
            <summary>
            reception of flow control WAIT frame that exceeds the maximum counter defined by PCANTP_PARAMETER_WFT_MAX
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_NETWORK_BUFFER_OVFLW">
            <summary>
            buffer on the receiver side cannot store the data length (server side only)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_NETWORK_ERROR">
            <summary>
            general error
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_NETWORK_IGNORED">
            <summary>
            message was invalid and ignored
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_NETWORK_TIMEOUT_Ar">
            <summary>
            Receiver side timeout while transmitting
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_NETWORK_TIMEOUT_As">
            <summary>
            Sender side timeout while transmitting
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_CAUTION_INPUT_MODIFIED">
            <summary>
            input was modified 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_CAUTION_DLC_MODIFIED">
            <summary>
            DLC value of the input was modified
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_CAUTION_DATA_LENGTH_MODIFIED">
            <summary>
            Data Length value of the input was modified 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_CAUTION_FD_FLAG_MODIFIED">
            <summary>
            FD flags of the input was modified 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_CAUTION_RX_QUEUE_FULL">
            <summary>
            Receive queue is full
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_CAUTION_BUFFER_IN_USE">
            <summary>
            Buffer is used by another thread or API
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_FLAG_PCAN_STATUS">
            <summary>
            PCAN error flag, remove flag to get a usable PCAN error/status code (cf. PCANBasic API)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_MASK_ERROR">
            <summary>
            filter by PCANTP_STATUSTYPE_ERR type
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_MASK_BUS">
            <summary>
            filter by PCANTP_STATUSTYPE_BUS type
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_MASK_ISOTP_NET">
            <summary>
            filter by PCANTP_STATUSTYPE_NET type
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_MASK_INFO">
            <summary>
            filter by PCANTP_STATUSTYPE_INFO type
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_status.PCANTP_STATUS_MASK_PCAN">
            <summary>
            filter by PCANTP_STATUSTYPE_PCAN type
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_parameter">
            <summary>
            List of parameters handled by PCAN-ISO-TP (rev. 2016)
            Note: PCAN-Basic parameters (PCAN_PARAM_xxx) are compatible via casting.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_API_VERSION">
            <summary>
            PCAN-ISO-TP API version parameter
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_CHANNEL_CONDITION">
            <summary>
            1 BYTE data describing the condition of a channel. 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_DEBUG">
            <summary>
            1 BYTE data describing the debug mode 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_RECEIVE_EVENT">
            <summary>
            data is pointer to a HANDLE created by CreateEvent function
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_FRAME_FILTERING">
            <summary>
            1 BYTE data stating if unsegmented (NON-ISO-TP) CAN frames can be received
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_CAN_TX_DL">
            <summary>
            1 BYTE data stating the default DLC to use when transmitting messages with CAN FD
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_CAN_DATA_PADDING">
            <summary>
            1 BYTE data stating if CAN frame DLC uses padding or not
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_CAN_PADDING_VALUE">
            <summary>
            1 BYTE data stating the value used for CAN data padding
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_ISO_REV">
            <summary>
            1 BYTE data stating which revision of ISO 15765-2 to use (see PCANTP_ISO_REV_*).
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_J1939_PRIORITY">
            <summary>
            1 BYTE data stating the default priority value for normal fixed, mixed and enhanced addressing (default=6)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_MSG_PENDING">
            <summary>
            1 BYTE data stating if pending messages are displayed/hidden
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_BLOCK_SIZE">
            <summary>
            1 BYTE data describing the block size parameter (BS)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_BLOCK_SIZE_TX">
            <summary>
            2 BYTE data describing the transmit block size parameter (BS_TX)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_SEPARATION_TIME">
            <summary>
            1 BYTE data describing the seperation time parameter (STmin)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_SEPARATION_TIME_TX">
            <summary>
            2 BYTE data describing the transmit seperation time parameter (STmin_TX)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_WFT_MAX">
            <summary>
            4 BYTE data describing the Wait Frame Transmissions parameter. 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_TIMEOUT_AS">
            <summary>
            4 BYTE data describing ISO-15765-2:Timeout As. 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_TIMEOUT_AR">
            <summary>
            4 BYTE data describing ISO-15765-2:Timeout Ar. 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_TIMEOUT_BS">
            <summary>
            4 BYTE data describing ISO-15765-2:Timeout Bs. 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_TIMEOUT_CR">
            <summary>
            4 BYTE data describing ISO-15765-2:Timeout Cr. 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_TIMEOUT_TOLERANCE">
            <summary>
            1 BYTE data describing the tolerence to apply to all timeout as a percentage ([0..100]. 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_ISO_TIMEOUTS">
            <summary>
            1 BYTE data to set predefined ISO values for timeouts (see PCANTP_ISO_TIMEOUTS_*).
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_SELFRECEIVE_LATENCY">
            <summary>
            1 BYTE data to set optimization options to improve delay between ISO-TP consecutive frames.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_MAX_RX_QUEUE">
            <summary>
            2 BYTE data describing the maximum number of messages in the Rx queue.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_KEEP_HIGHER_LAYER_MESSAGES">
            <summary>
            1 BYTE data stating if messages handled by higher layer APIs are still available in this API (default=0).
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_FILTER_CAN_ID">
            <summary>
            1 BYTE data stating if the white-list CAN IDs filtering mechanism is enabled.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_SUPPORT_29B_ENHANCED">
            <summary>
            1 BYTE data stating if the 29 bit Enhanced Diagnostic CAN identifier is supported (ISO-15765-3:2004, default is false with ISO revision 2016).
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_SUPPORT_29B_FIXED_NORMAL">
            <summary>
            1 BYTE data stating if the 29 bit Fixed Normal addressing CAN identifier is supported (default is true).
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_SUPPORT_29B_MIXED">
            <summary>
            1 BYTE data stating if the 29 bit Mixed addressing CAN identifier is supported (default is true).
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_MSG_CHECK">
            <summary>
            Pointer to a cantp_msg, checks if the message is valid and can be sent (ex. if a mapping is needed) and corrects input if needed.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_RESET_HARD">
            <summary>
            1 BYTE data stating to clear Rx/Tx queues and CAN controller (channel is unitialized and re-initialized but settings and mappings are kept)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_NETWORK_LAYER_DESIGN">
            <summary>
            1 BYTE data stating if network is full-duplex (default) or half-duplex
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_HARDWARE_NAME">
            <summary>
            PCAN hardware name parameter
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_DEVICE_ID">
            <summary>
            PCAN-USB device identifier parameter
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_DEVICE_NUMBER">
            <summary>
            Deprecated use PCANTP_PARAMETER_DEVICE_ID instead
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_CONTROLLER_NUMBER">
            <summary>
            CAN-Controller number of a PCAN-Channel 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_parameter.PCANTP_PARAMETER_CHANNEL_FEATURES">
            <summary>
            Capabilities of a PCAN device (FEATURE_***)
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_msgtype">
            <summary>
            Represents the type of a CANTP message (see field "cantp_msg.type").
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgtype.PCANTP_MSGTYPE_NONE">
            <summary>
            uninitialized message (data is NULL)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgtype.PCANTP_MSGTYPE_CAN">
            <summary>
            standard CAN frame
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgtype.PCANTP_MSGTYPE_CANFD">
            <summary>
            CAN frame with FD support
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgtype.PCANTP_MSGTYPE_ISOTP">
            <summary>
            ISO-TP message (ISO:15765) 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgtype.PCANTP_MSGTYPE_FRAME">
            <summary>
            frame only: unsegmented messages
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgtype.PCANTP_MSGTYPE_ANY">
            <summary>
            any supported message type
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_msgflag">
            <summary>
            Represents the flags common to all types of cantp_msg (see field "cantp_msg.msgdata.flags").
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgflag.PCANTP_MSGFLAG_NONE">
            <summary>
            no flag
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgflag.PCANTP_MSGFLAG_LOOPBACK">
            <summary>
            message is the confirmation of a transmitted message
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgflag.PCANTP_MSGFLAG_ISOTP_FRAME">
            <summary>
            message is a frame of a segmented ISO-TP message
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_can_msgtype">
            <summary>
            Represents the flags of a CAN or CAN FD frame (must be used as flags for ex. EXTENDED|FD|BRS.) (see field "cantp_msg.can_info.can_msgtype")
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_can_msgtype.PCANTP_CAN_MSGTYPE_STANDARD">
            <summary>
            The PCAN message is a CAN Standard Frame (11-bit identifier)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_can_msgtype.PCANTP_CAN_MSGTYPE_RTR">
            <summary>
            The PCAN message is a CAN Remote-Transfer-Request Frame
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_can_msgtype.PCANTP_CAN_MSGTYPE_EXTENDED">
            <summary>
            The PCAN message is a CAN Extended Frame (29-bit identifier)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_can_msgtype.PCANTP_CAN_MSGTYPE_FD">
            <summary>
            The PCAN message represents a FD frame in terms of CiA Specs
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_can_msgtype.PCANTP_CAN_MSGTYPE_BRS">
            <summary>
            The PCAN message represents a FD bit rate switch (CAN data at a higher bit rate)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_can_msgtype.PCANTP_CAN_MSGTYPE_ESI">
            <summary>
            The PCAN message represents a FD error state indicator(CAN FD transmitter was error active)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_can_msgtype.PCANTP_CAN_MSGTYPE_ERRFRAME">
            <summary>
            The PCAN message represents an error frame.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_can_msgtype.PCANTP_CAN_MSGTYPE_STATUS">
            <summary>
            The PCAN message represents a PCAN status message. 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_can_msgtype.PCANTP_CAN_MSGTYPE_FLAG_INFO">
            <summary>
            Flag stating that the message is not a CAN Frame
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_isotp_msgtype">
            <summary>
            Represents the type of an ISO-TP message (see field "cantp_msg.msgdata_isotp.netaddrinfo.msgtype").
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_isotp_msgtype.PCANTP_ISOTP_MSGTYPE_UNKNOWN">
            <summary>
            Unknown (non-ISO-TP) message
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_isotp_msgtype.PCANTP_ISOTP_MSGTYPE_DIAGNOSTIC">
            <summary>
            Diagnostic message (request or confirmation)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_isotp_msgtype.PCANTP_ISOTP_MSGTYPE_REMOTE_DIAGNOSTIC">
            <summary>
            Remote Diagnostic message (request or confirmation)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_isotp_msgtype.PCANTP_ISOTP_MSGTYPE_FLAG_INDICATION_RX">
            <summary>
            Multi-Frame Message is being received
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_isotp_msgtype.PCANTP_ISOTP_MSGTYPE_FLAG_INDICATION_TX">
            <summary>
            Multi-Frame Message is being transmitted
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_isotp_msgtype.PCANTP_ISOTP_MSGTYPE_FLAG_INDICATION">
            <summary>
            Multi-Frame Message is being communicated (Tx or Rx)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_isotp_msgtype.PCANTP_ISOTP_MSGTYPE_MASK_INDICATION">
            <summary>
            Mask to remove Indication flags
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_isotp_format">
            <summary>
            Represents the addressing format of an ISO-TP message (see field "cantp_msg.msgdata_isotp.netaddrinfo.format").
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_isotp_format.PCANTP_ISOTP_FORMAT_UNKNOWN">
            <summary>
            unknown adressing format
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_isotp_format.PCANTP_ISOTP_FORMAT_NONE">
            <summary>
            unsegmented CAN frame
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_isotp_format.PCANTP_ISOTP_FORMAT_NORMAL">
            <summary>
            normal adressing format from ISO 15765-2
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_isotp_format.PCANTP_ISOTP_FORMAT_FIXED_NORMAL">
            <summary>
            fixed normal adressing format from ISO 15765-2
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_isotp_format.PCANTP_ISOTP_FORMAT_EXTENDED">
            <summary>
            extended adressing format from ISO 15765-2
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_isotp_format.PCANTP_ISOTP_FORMAT_MIXED">
            <summary>
            mixed adressing format from ISO 15765-2
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_isotp_format.PCANTP_ISOTP_FORMAT_ENHANCED">
            <summary>
            enhanced adressing format from ISO 15765-3
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_isotp_addressing">
            <summary>
            Represents the type of target of an ISO-TP message (see field "cantp_msg.msgdata_isotp.netaddrinfo.target_type").
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_isotp_addressing.PCANTP_ISOTP_ADDRESSING_UNKNOWN">
            <summary>
            Unknown adressing format
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_isotp_addressing.PCANTP_ISOTP_ADDRESSING_PHYSICAL">
            <summary>
            Physical addressing ("peer to peer")
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_isotp_addressing.PCANTP_ISOTP_ADDRESSING_FUNCTIONAL">
            <summary>
            Functional addressing ("peer to any")
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_option">
            <summary>
            Represents the options of a message (mainly supported for ISO-TP message) (see field "cantp_msg.msgdata.options").
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_option.PCANTP_OPTION_FRAME_FILTERING">
            <summary>
            1 BYTE data stating if unsegmented (NON-ISO-TP) CAN frames can be received
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_option.PCANTP_OPTION_CAN_DATA_PADDING">
            <summary>
            1 BYTE data stating if CAN frame DLC uses padding or not
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_option.PCANTP_OPTION_CAN_PADDING_VALUE">
            <summary>
            1 BYTE data stating the value used for CAN data padding
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_option.PCANTP_OPTION_J1939_PRIORITY">
            <summary>
            1 BYTE data stating the default priority value for normal fixed, mixed and enhanced addressing (default=6)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_option.PCANTP_OPTION_MSG_PENDING">
            <summary>
            1 BYTE data stating if pending messages are displayed/hidden
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_option.PCANTP_OPTION_BLOCK_SIZE">
            <summary>
            1 BYTE data describing the block size parameter (BS)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_option.PCANTP_OPTION_BLOCK_SIZE_TX">
            <summary>
            2 BYTE data describing the transmit block size parameter (BS_TX)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_option.PCANTP_OPTION_SEPARATION_TIME">
            <summary>
            1 BYTE data describing the seperation time parameter (STmin)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_option.PCANTP_OPTION_SEPARATION_TIME_TX">
            <summary>
            2 BYTE data describing the transmit seperation time parameter (STmin_TX)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_option.PCANTP_OPTION_WFT_MAX">
            <summary>
            4 BYTE data describing the Wait Frame Transmissions parameter. 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_option.PCANTP_OPTION_SELFRECEIVE_LATENCY">
            <summary>
            1 BYTE data to set optimization options to improve delay between ISO-TP consecutive frames.
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_msgprogress_state">
            <summary>
            Represents the status for a message whose transmission is in progress.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgprogress_state.PCANTP_MSGPROGRESS_STATE_QUEUED">
            <summary>
            Message is not yet handled.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgprogress_state.PCANTP_MSGPROGRESS_STATE_PROCESSING">
            <summary>
            Message is being processed (received or transmitted).
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgprogress_state.PCANTP_MSGPROGRESS_STATE_COMPLETED">
            <summary>
            Message is completed.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgprogress_state.PCANTP_MSGPROGRESS_STATE_UNKNOWN">
            <summary>
            Message is unknown/not found.
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_msgdirection">
            <summary>
            Represents the direction of a message's communication.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdirection.PCANTP_MSGDIRECTION_RX">
            <summary>
            Message is being received.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdirection.PCANTP_MSGDIRECTION_TX">
            <summary>
            Message is being transmitted.
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_msginfo">
            <summary>
            Internal information about cantp_msg message (reserved).
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msginfo.size">
            <summary>
            (read-only) size of the message object 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msginfo.flags">
            <summary>
            (read-only) reserved
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msginfo.extra">
            <summary>
            (read-only) reserved	
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_msgoption">
            <summary>
            Represents message's options to override.	
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgoption.name">
            <summary>
            Name of the option.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgoption.value">
            <summary>
            Value of the option.
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_msgoption_list">
            <summary>
            Represents a list of message's options to override.	
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgoption_list.buffer">
            <summary>
            Pointer to an array of cantp_msgoption.
            Use it with unsafe { cantp_msgoption* opts = (cantp_msgoption*)buffer.ToPointer(); } 
            Or with Marshal.Copy, Marshal.ReadInt32, Marshal.WriteInt32
            See special C# functions
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgoption_list.count">
            <summary>
            Number of options in the array.
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_can_info">
            <summary>
            Represents common CAN information.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_can_info.can_id">
            <summary>
            CAN identifier
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_can_info.can_msgtype">
            <summary>
            Types and flags of the CAN/CAN-FD frame (see cantp_can_msgtype)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_can_info.dlc">
            <summary>
            Data Length Code of the frame (0..15)
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_netaddrinfo">
            <summary>
            Represents the network address information of an ISO-TP message.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netaddrinfo.msgtype">
            <summary>
            ISO-TP message type
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netaddrinfo.format">
            <summary>
            ISO-TP format addressing
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netaddrinfo.target_type">
            <summary>
            ISO-TP addressing/target type
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netaddrinfo.source_addr">
            <summary>
            source address 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netaddrinfo.target_addr">
            <summary>
            target address 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_netaddrinfo.extension_addr">
            <summary>
            extension address
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_mapping">
            <summary>
            Represents a mapping between an ISO-TP network address information and a CAN ID.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_mapping.uid">
            <summary>
            Mapping's unique ID 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_mapping.can_id">
            <summary>
            CAN ID mapped to the Network Address Information
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_mapping.can_id_flow_ctrl">
            <summary>
            CAN ID used for the flow control frame (formerly 'can_id_resp')
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_mapping.can_msgtype">
            <summary>
            CAN frame msgtype (only PCANTP_CAN_MSGTYPE_STANDARD or PCANTP_CAN_MSGTYPE_EXTENDED is mandatory)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_mapping.can_tx_dlc">
            <summary>
            Default CAN DLC value to use with segmented messages
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_mapping.netaddrinfo">
            <summary>
            ISO-TP Network Address Information
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_msgdata">
            <summary>
            Represents the content of a generic message.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata.flags">
            <summary>
            structure specific flags
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata.length">
            <summary>
            Length of the message
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata.data">
            <summary>
            Data of the message
            Array of bytes
            Use it with unsafe { byte* don = (byte*)data.ToPointer(); } 
            or with Marshal.WriteByte, Marshal.ReadByte, Marshal.Copy...
            See special C# functions
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata.netstatus">
            <summary>
            Network status
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata.options">
            <summary>
            Defines specific options to override global message configuration
            Pointer to a cantp_msgoption_list
            Use it with Marshal.PtrToStructure() and Marshal.StructureToPtr()
            or with unsafe {options.toPointer()}
            See special C# functions
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_msgdata_can">
            <summary>
            Represents the content of a standard CAN frame.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata_can.flags">
            <summary>
            structure specific flags
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata_can.length">
            <summary>
            Length of the message (0..8)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata_can.data">
            <summary>
            Data of the message
            Array of bytes
            Use it with unsafe { byte* don = (byte*)data.ToPointer(); } 
            or with Marshal.WriteByte, Marshal.ReadByte, Marshal.Copy...
            See special C# functions
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata_can.netstatus">
            <summary>
            Network status
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata_can.options">
            <summary>
            Defines specific options to override global CAN configuration (not used yet) 
            Pointer to a cantp_msgoption_list
            Use it with Marshal.PtrToStructure() and Marshal.StructureToPtr()
            or with unsafe {options.toPointer()}
            See special C# functions
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata_can.data_max">
            <summary>
            Data of the message (DATA[0]..DATA[7])
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_msgdata_canfd">
            <summary>
            Represents the content of a CAN FD frame.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata_canfd.flags">
            <summary>
            structure specific flags
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata_canfd.length">
            <summary>
            Length of the message (0..64)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata_canfd.data">
            <summary>
            Data of the message
            Array of bytes
            Use it with unsafe { byte* don = (byte*)data.ToPointer(); } 
            or with Marshal.WriteByte, Marshal.ReadByte, Marshal.Copy...
            See special C# functions
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata_canfd.netstatus">
            <summary>
            Network status
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata_canfd.options">
            <summary>
            Defines specific options to override global CAN configuration (not used yet) 
            Pointer to a cantp_msgoption_list
            Use it with Marshal.PtrToStructure() and Marshal.StructureToPtr()
            or with unsafe {options.toPointer()}
            See special C# functions
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata_canfd.data_max">
            <summary>
            Data of the message (DATA[0]..DATA[63])
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_msgdata_isotp">
            <summary>
            Represents the content of an ISO-TP message.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata_isotp.flags">
            <summary>
            structure specific flags
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata_isotp.length">
            <summary>
            Length of the data
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata_isotp.data">
            <summary>
            Data of the message
            Array of bytes
            Use it with unsafe { byte* don = (byte*)data.ToPointer(); } 
            or with Marshal.WriteByte, Marshal.ReadByte, Marshal.Copy...
            See special C# functions
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata_isotp.netstatus">
            <summary>
            Network status
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata_isotp.options">
            <summary>
            Defines specific options to override global CAN configuration 
            Pointer to a cantp_msgoption_list
            Use it with Marshal.PtrToStructure() and Marshal.StructureToPtr()
            or with unsafe {options.toPointer()}
            See special C# functions
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata_isotp.netaddrinfo">
            <summary>
            ISO-TP network address information
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgdata_isotp.reserved">
            <summary>
            Reserved ISO-TP information 
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_msg">
            <summary>
            A cantp_msg message is a generic CAN related message than can be either a standard CAN frame,
            a CAN FD frame, an ISO-TP message, etc.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msg.type">
            <summary>
            type of the message
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msg.reserved">
            <summary>
            misc. read-only information
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msg.can_info">
            <summary>
            common CAN information
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msg.msgdata">
            <summary>
            data of the message
            pointer to different structures depending on the message type 
            Use it with following properties (Msgdata_any_Copy, Msgdata_can_copy etc.)
            Or with Marshal.PtrToStructure and Marshal.StructureToPtr
            Or with unsafe {msgdata.ToPointer()}
            See special C# functions
            </summary>
        </member>
        <member name="P:Peak.Can.IsoTp.cantp_msg.Msgdata">
            <summary>
            get msgdata field as a property
            </summary>
        </member>
        <member name="P:Peak.Can.IsoTp.cantp_msg.Msgdata_any_Copy">
            <summary>
            get msgdata field as a cantp_msgdata property
            The fields of this property will not be writable except (not directly) those whose type is "IntPtr".
            Before using this property, check if msgdata is not IntPtr.Zero
            </summary>
        </member>
        <member name="P:Peak.Can.IsoTp.cantp_msg.Msgdata_can_Copy">
            <summary>
            get msgdata field as a cantp_msgdata_can property
            The fields of this property will not be writable except (not directly) those whose type is "IntPtr".
            Before using this property, check if msgdata is not IntPtr.Zero
            </summary>
        </member>
        <member name="P:Peak.Can.IsoTp.cantp_msg.Msgdata_canfd_Copy">
            <summary>
            get msgdata field as a cantp_msgdata_canfd property
            The fields of this property will not be writable except (not directly) those whose type is "IntPtr".
            Before using this property, check if msgdata is not IntPtr.Zero
            </summary>
        </member>
        <member name="P:Peak.Can.IsoTp.cantp_msg.Msgdata_isotp_Copy">
            <summary>
            get msgdata field as a cantp_msgdata_isotp property
            The fields of this property will not be writable except (not directly) those whose type is "IntPtr".
            Before using this property, check if msgdata is not IntPtr.Zero
            </summary>
        </member>
        <member name="T:Peak.Can.IsoTp.cantp_msgprogress">
            <summary>
            Holds information on the communication progress of a message.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgprogress.state">
            <summary>
            State of the message
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgprogress.percentage">
            <summary>
            Progress of the transmission/reception in percent.
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.cantp_msgprogress.buffer">
            <summary>
            Buffer to get a copy of the pending message.
            Pointer to a cantp_msg
            If this is not needed, set it to IntPtr.Zero.
            If this is needed, set it with unsafe { buffer = IntPtr(&amp;msg);}
            Use it in read-only mode with cantp_msg mp = (cantp_msg)Marshal.PtrToStructure(buffer, typeof(cantp_msg));
            or with unsafe {(cantp_msg*)buffer.toPointer();}
            See special C# functions
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_DEBUG_NOTICE">
            <summary>
            Enable debug messages (only notices, informations, warnings, errors)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_DEBUG_INFO">
            <summary>
            Enable debug messages (only informations, warnings, errors)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_DEBUG_WARNING">
            <summary>
            Enable debug messages (only warnings, errors)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_DEBUG_ERROR">
            <summary>
            Enable debug messages (only errors)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_DEBUG_NONE">
            <summary>
            No debug messages
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_DEBUG_CAN">
            <summary>
            Puts CAN debug messages to stdout
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_CHANNEL_UNAVAILABLE">
            <summary>
            The Channel is illegal or not available
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_CHANNEL_AVAILABLE">
            <summary>
            The Channel is available
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_CHANNEL_OCCUPIED">
            <summary>
            The Channel is valid, and is being used
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_WFT_MAX_UNLIMITED">
            <summary>
            if set Flow Control frame shall not use the WT flow status value
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_WFT_MAX_DEFAULT">
            <summary>
            an integer describing the Wait Frame Transmissions parameter. 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_MSG_PENDING_HIDE">
            <summary>
            hide messages with type PCANTP_MESSAGE_INDICATION from CANTP_Read function
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_MSG_PENDING_SHOW">
            <summary>
            show messages with type PCANTP_MESSAGE_INDICATION from CANTP_Read function
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_CAN_DATA_PADDING_NONE">
            <summary>
            uses CAN frame data optimization
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_CAN_DATA_PADDING_ON">
            <summary>
            uses CAN frame data padding (default, i.e. CAN DLC = 8)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_CAN_DATA_PADDING_VALUE">
            <summary>
            default value used if CAN data padding is enabled
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_FRAME_FILTERING_ISOTP">
            <summary>
            disable reception of unformatted (NON-ISO-TP) CAN frames (default)
            only ISO 15765 messages will be received
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_FRAME_FILTERING_CAN">
            <summary>
            enable reception of unformatted (NON-ISO-TP) CAN frames 
            received messages will be treated as either ISO 15765 or as an unformatted CAN frame
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_FRAME_FILTERING_VERBOSE">
            <summary>
            enable reception of unformatted (NON-ISO-TP) CAN frames 
            received messages will be treated as ISO 15765, unformatted CAN frame, or both (user will able to read fragmented CAN frames)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_J1939_PRIORITY_DEFAULT">
            <summary>
            default priority for ISO-TP messages (only available fot normal fixed, mixed and enhanced addressing)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_MAX_LENGTH_CAN_STANDARD">
            <summary>
            maximum size of a CAN (non-FD) frame (8)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_MAX_LENGTH_CAN_FD">
            <summary>
            maximum size of a CAN FD frame (64)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_MAX_LENGTH_ISOTP2004">
            <summary>
            maximum size of an ISO-TP rev. 2004 frame (4095)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_MAX_LENGTH_ISOTP2016">
            <summary>
            maximum size of an ISO-TP rev. 2016 frame (4294967295)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_MAX_LENGTH_ALLOC">
            <summary>
            maximum size before using virtual allocation for ISO-TP messages
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_CAN_TX_DL_DEFAULT">
            <summary>
            default DLC for fragmented frames when transmiting ISO-TP messages
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_ISO_REV_2004">
            <summary>
            ISO-15765-2:2004(E)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_ISO_REV_2016">
            <summary>
            ISO-15765-2:2016(E)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_BLOCK_SIZE_TX_IGNORE">
            <summary>
            disables the feature "ignore received BlockSize value"
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_SEPERATION_TIME_TX_IGNORE">
            <summary>
            disables the feature "ignore received STMin value"
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_ISO_TIMEOUTS_15765_2">
            <summary>
            sets timeouts according to ISO-15765-2
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_ISO_TIMEOUTS_15765_4">
            <summary>
            sets timeouts according to ISO-15765-4 (OBDII)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_SELFRECEIVE_LATENCY_NONE">
            <summary>
            no optimization (use this parameter if ECU requires strict respect of Minimum Separation Time)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_SELFRECEIVE_LATENCY_LIGHT">
            <summary>
            (DEFAULT) fragmented self-receive frame mechanism is ignored when STmin is set to = 0xF3 and lower (&lt;300µs) 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_SELFRECEIVE_LATENCY_OPTIMIZED">
            <summary>
            as LIGHT value plus optimize self-receive latency by predicting the time to effectively write frames on bus
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_MAX_RX_QUEUE_DEFAULT">
            <summary>
            (DEFAULT) maxinum number of items in the receive queue
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_NETWORK_LAYER_FULL_DUPLEX">
            <summary>
            (DEFAULT) Network layer design is full-duplex
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_NETWORK_LAYER_HALF_DUPLEX">
            <summary>
            Network layer design is half-duplex (only one transmission/reception of the same NAI at a time)
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_STMIN_ISO_15765_2">
            <summary>
            Default value for Separation time
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_BS_ISO_15765_2">
            <summary>
            Default value for BlockSize
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_TIMEOUT_AR_ISO_15765_2">
            <summary>
            Default value for Timeout Ar in µs
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_TIMEOUT_AS_ISO_15765_2">
            <summary>
            Default value for Timeout As in µs
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_TIMEOUT_BR_ISO_15765_2">
            <summary>
            Default value for Timeout Br in µs
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_TIMEOUT_BS_ISO_15765_2">
            <summary>
            Default value for Timeout Bs in µs
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_TIMEOUT_CR_ISO_15765_2">
            <summary>
            Default value for Timeout Cr in µs
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_TIMEOUT_CS_ISO_15765_2">
            <summary>
            Default value for Timeout Cs in µs
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_TIMEOUT_TOLERANCE">
            <summary>
            Default value for timeout tolerance [0..100] (timeout = t * (1 + tolerance/100))
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_STMIN_ISO_15765_4">
            <summary>
            OBDII value for Separation time
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_BS_ISO_15765_4">
            <summary>
            OBDII value for BlockSize
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_TIMEOUT_AR_ISO_15765_4">
            <summary>
            OBDII value for Timeout Ar in µs
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_TIMEOUT_AS_ISO_15765_4">
            <summary>
            OBDII value for Timeout As in µs
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_TIMEOUT_BR_ISO_15765_4">
            <summary>
            OBDII value for Timeout Br in µs
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_TIMEOUT_BS_ISO_15765_4">
            <summary>
            OBDII value for Timeout Bs in µs
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_TIMEOUT_CR_ISO_15765_4">
            <summary>
            OBDII value for Timeout Cr in µs
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_TIMEOUT_CS_ISO_15765_4">
            <summary>
            OBDII value for Timeout Cs in µs
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_FLAG_MASK_PRIORITY">
            <summary>
            Mask for the 29bits ISOTP priority value (stored in bits [0..2])
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_FLAG_PADDING_ON">
            <summary>
            Padding is enabled 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_FLAG_INDICATION_ON">
            <summary>
            Message's indication is enabled 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_FLAG_ECHO_FRAMES_ON">
            <summary>
            Echo of fragmented frames is enabled 
            </summary>
        </member>
        <member name="F:Peak.Can.IsoTp.CanTpApi.PCANTP_MAPPING_FLOW_CTRL_NONE">
            <summary>
            Mapping does not require a Flow Control frame.
            </summary>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.Initialize_2016(Peak.Can.IsoTp.cantp_handle,Peak.Can.IsoTp.cantp_baudrate,Peak.Can.IsoTp.cantp_hwtype,System.UInt32,System.UInt16)">
            <summary>
            Initializes a PCANTP-Client based on a CANTP handle (without CAN-FD support)
            </summary>
            <remarks>Only one PCANTP-Client can be initialized per CAN-Channel</remarks>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="baudrate">The CAN Hardware speed</param>
            <param name="hw_type">NON PLUG-N-PLAY: The type of hardware and operation mode</param>
            <param name="io_port">NON PLUG-N-PLAY: The I/O address for the parallel port</param>
            <param name="interrupt">NON PLUG-N-PLAY: Interrupt number of the parallel port</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.Initialize_2016(Peak.Can.IsoTp.cantp_handle,Peak.Can.IsoTp.cantp_baudrate,Peak.Can.IsoTp.cantp_hwtype,System.UInt32)">
            <summary>
            Initializes a PCANTP-Client based on a CANTP handle (without CAN-FD support)
            </summary>
            <remarks>Only one PCANTP-Client can be initialized per CAN-Channel</remarks>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="baudrate">The CAN Hardware speed</param>
            <param name="hw_type">NON PLUG-N-PLAY: The type of hardware and operation mode</param>
            <param name="io_port">NON PLUG-N-PLAY: The I/O address for the parallel port</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.Initialize_2016(Peak.Can.IsoTp.cantp_handle,Peak.Can.IsoTp.cantp_baudrate,Peak.Can.IsoTp.cantp_hwtype)">
            <summary>
            Initializes a PCANTP-Client based on a CANTP handle (without CAN-FD support)
            </summary>
            <remarks>Only one PCANTP-Client can be initialized per CAN-Channel</remarks>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="baudrate">The CAN Hardware speed</param>
            <param name="hw_type">NON PLUG-N-PLAY: The type of hardware and operation mode</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.Initialize_2016(Peak.Can.IsoTp.cantp_handle,Peak.Can.IsoTp.cantp_baudrate)">
            <summary>
            Initializes a PCANTP-Client based on a CANTP handle (without CAN-FD support)
            </summary>
            <remarks>Only one PCANTP-Client can be initialized per CAN-Channel</remarks>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="baudrate">The CAN Hardware speed</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.InitializeFD_2016(Peak.Can.IsoTp.cantp_handle,System.String)">
             <summary>
             Initializes a PCANTP-Client based on a CANTP Channel (including CAN-FD support)
             </summary>
             <param name="channel">"The handle of a FD capable PCAN Channel"</param>
             <param name="bitrate_fd">"The speed for the communication (FD bit rate string)"</param>
             <remarks>Only one PCANTP-Client can be initialized per CAN-Channel.
             See PCAN_BR_* values
             * Parameter and values must be separated by '='
             * Couples of Parameter/value must be separated by ','
             * Following Parameter must be filled out: f_clock, data_brp, data_sjw, data_tseg1, data_tseg2,
               nom_brp, nom_sjw, nom_tseg1, nom_tseg2.
             * Following Parameters are optional (not used yet): data_ssp_offset, nom_samp
            </remarks>
             <example>f_clock_mhz=80,nom_brp=0,nom_tseg1=13,nom_tseg2=0,nom_sjw=0,data_brp=0,
             data_tseg1=13,data_tseg2=0,data_sjw=0</example>
             <returns>"A cantp_status code"</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.Uninitialize_2016(Peak.Can.IsoTp.cantp_handle)">
            <summary>
            Uninitializes a PCANTP-Client initialized before
            </summary>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.Reset_2016(Peak.Can.IsoTp.cantp_handle)">
            <summary>
            Resets the receive and transmit queues of a PCANTP-Client 
            </summary>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.GetCanBusStatus_2016(Peak.Can.IsoTp.cantp_handle)">
            <summary>
            Gets information about the internal BUS status of a PCANTP-Channel.
            </summary>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.Read_2016(Peak.Can.IsoTp.cantp_handle,Peak.Can.IsoTp.cantp_msg@,System.UInt64@,Peak.Can.IsoTp.cantp_msgtype)">
            <summary>
            Reads a PCANTP message from the receive queue of a PCANTP-Client
            </summary>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="msg_buffer">A cantp_msg structure buffer to store the PUDS message</param>
            <param name="timestamp_buffer">A cantp_timestamp structure buffer to get 
            the reception time of the message.</param>
            <param name="msg_type">A cantp_msgtype structure buffer to filter the message to read.</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.Read_2016(Peak.Can.IsoTp.cantp_handle,Peak.Can.IsoTp.cantp_msg@,System.UInt64@)">
            <summary>
            Reads a PCANTP message from the receive queue of a PCANTP-Client
            </summary>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="msg_buffer">A cantp_msg structure buffer to store the PUDS message</param>
            <param name="timestamp_buffer">A cantp_timestamp structure buffer to get 
            the reception time of the message.</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.Read_2016(Peak.Can.IsoTp.cantp_handle,Peak.Can.IsoTp.cantp_msg@)">
            <summary>
            Reads a PCANTP message from the receive queue of a PCANTP-Client
            </summary>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="msg_buffer">A cantp_msg structure buffer to store the PUDS message</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.GetMsgProgress_2016(Peak.Can.IsoTp.cantp_handle,Peak.Can.IsoTp.cantp_msg@,Peak.Can.IsoTp.cantp_msgdirection,Peak.Can.IsoTp.cantp_msgprogress@)">
            <summary>
            Gets progress information on a specific message
            </summary>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="msg_buffer">A cantp_msg structure buffer matching the message to look for</param>
            <param name="direction">The expected direction (incoming/outgoing) of the message</param>
            <param name="msgprogress_buffer">A cantp_msgprogress structure buffer to store the progress information</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.Write_2016(Peak.Can.IsoTp.cantp_handle,Peak.Can.IsoTp.cantp_msg@)">
            <summary>
            Adds a PCANTP message to the Transmit queue
            </summary>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="msg_buffer">A cantp_msg buffer with the message to be sent</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.GetValue_2016(Peak.Can.IsoTp.cantp_handle,Peak.Can.IsoTp.cantp_parameter,System.Text.StringBuilder,System.UInt32)">
            <summary>
            Retrieves a PCANTP-Client value
            </summary>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="parameter">The cantp_parameter parameter to get</param>
            <param name="StringBuffer">Buffer for the parameter value</param>
            <param name="BufferLength">Size in bytes of the buffer</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.GetValue_2016(Peak.Can.IsoTp.cantp_handle,Peak.Can.IsoTp.cantp_parameter,System.UInt32@,System.UInt32)">
            <summary>
            Retrieves a PCANTP-Client value
            </summary>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="parameter">The cantp_parameter parameter to get</param>
            <param name="NumericBuffer">Buffer for the parameter value</param>
            <param name="BufferLength">Size in bytes of the buffer</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.GetValue_2016(Peak.Can.IsoTp.cantp_handle,Peak.Can.IsoTp.cantp_parameter,System.Byte[],System.UInt32)">
            <summary>
            Retrieves a PCANTP-Client value
            </summary>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="parameter">The cantp_parameter parameter to get</param>
            <param name="Buffer">Buffer for the parameter value</param>
            <param name="BufferLength">Size in bytes of the buffer</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.SetValue_2016(Peak.Can.IsoTp.cantp_handle,Peak.Can.IsoTp.cantp_parameter,System.UInt32@,System.UInt32)">
            <summary>
            Configures or sets a PCANTP-Client value
            </summary>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="parameter">The cantp_parameter parameter to set</param>
            <param name="NumericBuffer">Buffer with the value to be set</param>
            <param name="BufferLength">Size in bytes of the buffer</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.SetValue_2016(Peak.Can.IsoTp.cantp_handle,Peak.Can.IsoTp.cantp_parameter,System.String,System.UInt32)">
            <summary>
            Configures or sets a PCANTP-Client value
            </summary>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="parameter">The cantp_parameter parameter to set</param>
            <param name="StringBuffer">Buffer with the value to be set</param>
            <param name="BufferLength">Size in bytes of the buffer</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.SetValue_2016(Peak.Can.IsoTp.cantp_handle,Peak.Can.IsoTp.cantp_parameter,System.Byte[],System.UInt32)">
            <summary>
            Configures or sets a PCANTP-Client value
            </summary>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="parameter">The cantp_parameter parameter to set</param>
            <param name="Buffer">Buffer with the value to be set</param>
            <param name="BufferLength">Size in bytes of the buffer</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.AddMapping_2016(Peak.Can.IsoTp.cantp_handle,Peak.Can.IsoTp.cantp_mapping@)">
            <summary>
            Adds a user-defined PCAN-TP mapping between CAN ID and Network Address Information
            </summary>
            <remark>
            Defining a mapping enables ISO-TP communication with 11BITS CAN ID or 
            with opened Addressing Formats (like PCANTP_ISOTP_FORMAT_NORMAL or PCANTP_ISOTP_FORMAT_EXTENDED).
            </remark>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="mapping">Buffer to the mapping to be added</param>
            <returns>A cantp_status code : PCANTP_STATUS_OK is returned on success, 
            PCANTP_STATUS_WRONG_PARAM states invalid Network Address Information parameters.</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.RemoveMappings_2016(Peak.Can.IsoTp.cantp_handle,System.UInt32)">
            <summary>
            Removes all user-defined PCAN-TP mappings corresponding to a CAN ID
            </summary>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="can_id">The mapped CAN ID to search for</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.RemoveMapping_2016(Peak.Can.IsoTp.cantp_handle,System.UIntPtr)">
            <summary>
            Removes a user-defined PCAN-TP mapping between a CAN ID and Network Address Information
            </summary>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="uid">The identifier of the mapping</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.GetMappings_2016(Peak.Can.IsoTp.cantp_handle,Peak.Can.IsoTp.cantp_mapping[],System.UInt32@)">
            <summary>
            Retrieves all the mappings defined for a PCAN-TP channel
            </summary>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="buffer">A buffer to store an array of cantp_mapping</param> 
            <param name="buffer_length">[In]The number of cantp_mapping element the buffer can store. of the mapping. 
            [Out]The actual number of element copied in the buffer.</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success, 
            PCANTP_STATUS_PARAM_BUFFER_TOO_SMALL if the number of mappings exceeds buffer_length.</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.AddFiltering_2016(Peak.Can.IsoTp.cantp_handle,System.UInt32,System.UInt32,System.Boolean,Peak.Can.IsoTp.cantp_can_msgtype)">
            <summary>
            Adds an entry to the CAN-ID white-list filtering.
            </summary>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="can_id_from">The lowest CAN ID wanted to be received</param>
            <param name="can_id_to">The highest CAN ID wanted to be received</param>
            <param name="ignore_can_msgtype">States if filter should check the CAN message type.</param>
            <param name="can_msgtype">If ignore_can_msgtype is false, the value states which types of CAN frame should be allowed.</param>
            <returns>A cantp_status code : PCANTP_STATUS_OK is returned on success, and PCANTP_STATUS_ALREADY_INITIALIZED otherwise.</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.RemoveFiltering_2016(Peak.Can.IsoTp.cantp_handle,System.UInt32,System.UInt32,System.Boolean,Peak.Can.IsoTp.cantp_can_msgtype)">
            <summary>
            Removes an entry from the CAN-ID white-list filtering.
            </summary>
            <param name="channel">A PCANTP Channel Handle representing a PCANTP-Client</param>
            <param name="can_id_from">The lowest CAN ID wanted to be removed</param>
            <param name="can_id_to">The highest CAN ID wanted to be removed</param>
            <param name="ignore_can_msgtype">States if filter should check the CAN message type.</param>
            <param name="can_msgtype">If ignore_can_msgtype is false, the value states which types of CAN frame should be allowed.</param>
            <returns>A cantp_status code : PCANTP_STATUS_OK is returned on success, and PCANTP_STATUS_ALREADY_INITIALIZED otherwise.</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.GetErrorText_2016(Peak.Can.IsoTp.cantp_status,System.UInt16,System.Text.StringBuilder,System.UInt32)">
            <summary>
            Returns a descriptive text of a given cantp_status error 
            code, in any desired language
            </summary>
            <remarks>The current languages available for translation are: 
            Neutral (0x00), German (0x07), English (0x09), Spanish (0x0A),
            Italian (0x10) and French (0x0C)</remarks>
            <param name="error">A cantp_status error code</param>
            <param name="language">Indicates a 'Primary language ID'</param>
            <param name="StringBuffer">Buffer for a null terminated char array</param>
            <param name="bufferSize">Buffer size</param>
            <returns>A cantp_status error code</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.MsgDataAlloc_2016(Peak.Can.IsoTp.cantp_msg@,Peak.Can.IsoTp.cantp_msgtype)">
            <summary>
            Allocates a PCAN-TP message based on the given type
            </summary>
            <param name="msg_buffer">A cantp_msg structure buffer (it will be freed if required)</param>
            <param name="type">Type of the message to allocate</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.MsgDataInit_2016(Peak.Can.IsoTp.cantp_msg@,System.UInt32,Peak.Can.IsoTp.cantp_can_msgtype,System.UInt32,System.Byte[],Peak.Can.IsoTp.cantp_netaddrinfo@)">
            <summary>
            Initializes an allocated PCAN-TP message
            </summary>
            <param name="msg_buffer">An allocated cantp_msg structure buffer</param>
            <param name="can_id">CAN identifier (ISO-TP message may ignore this parameter and use PCANTP_MAPPING_FLOW_CTRL_NONE (-1))</param>
            <param name="can_msgtype">Combination of CAN message types (like "extended CAN ID", "FD", "RTR", etc. flags)</param>
            <param name="data_length">Length of the data</param>
            <param name="data">A buffer to initialize the message's data with. If NULL, message's data is initialized with zeros.</param>
            <param name="netaddrinfo">Network address information of the ISO-TP message (only valid with an ISO-TP message)</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.MsgDataInit_2016(Peak.Can.IsoTp.cantp_msg@,System.UInt32,Peak.Can.IsoTp.cantp_can_msgtype,System.UInt32,System.Byte[])">
            <summary>
            Initializes an allocated PCAN-TP message
            </summary>
            <param name="msg_buffer">An allocated cantp_msg structure buffer</param>
            <param name="can_id">CAN identifier (ISO-TP message may ignore this parameter and use PCANTP_MAPPING_FLOW_CTRL_NONE (-1))</param>
            <param name="can_msgtype">Combination of CAN message types (like "extended CAN ID", "FD", "RTR", etc. flags)</param>
            <param name="data_length">Length of the data</param>
            <param name="data">A buffer to initialize the message's data with. If NULL, message's data is initialized with zeros.</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.MsgDataInitOptions_2016(Peak.Can.IsoTp.cantp_msg@,System.UInt32)">
            <summary>
            Initializes a number of options for the PCAN-TP message that will override the channel's parameter(s)
            </summary>
            <param name="msg_buffer">An allocated cantp_msg structure buffer.</param>
            <param name="nb_options">Number of options to initialize.</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.MsgDataFree_2016(Peak.Can.IsoTp.cantp_msg@)">
            <summary>
            Deallocates a PCAN-TP message
            </summary>
            <param name="msg_buffer">An allocated cantp_msg structure buffer.</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.MsgEqual_2016(Peak.Can.IsoTp.cantp_msg@,Peak.Can.IsoTp.cantp_msg@,System.Boolean)">
            <summary>
            Checks if two PCAN-TP messages are equal. 
            If one message is the indication of an incoming/outgoing ISO-TP message, the actual data-content will not be compared.
            In that case the function checks if the messages' network address information matches.
            </summary>
            <param name="msg_buffer1">A cantp_msg structure buffer.</param>
            <param name="msg_buffer2">Another cantp_msg structure buffer to compare with first parameter.</param>
            <param name="ignoreSelfReceiveFlag">States if comparison should ignore loopback flag 
            (i.e if true the function will return true when comparing a request and its loopback confirmation).</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.MsgCopy_2016(Peak.Can.IsoTp.cantp_msg@,Peak.Can.IsoTp.cantp_msg@)">
            <summary>
            Copies a PCAN-TP message to another buffer. 
            </summary>
            <param name="msg_buffer_dst">A cantp_msg structure buffer to store the copied message.</param>
            <param name="msg_buffer_src">The cantp_msg structure buffer used as the source.</param>
            <returns>A cantp_status code. PCANTP_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.MsgDlcToLength_2016(System.Byte)">
            <summary>
            Converts a CAN DLC to its corresponding length. 
            </summary>
            <param name="dlc">The Data Length Code (DLC) to convert.</param>
            <returns>The corresponding length of the dlc parameter.</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.MsgLengthToDlc_2016(System.UInt32)">
            <summary>
            Converts a data length to a corresponding CAN DLC. 
            Note: the returned DLC can hold more data that the requested length.
            </summary>
            <param name="length">The length to convert.</param>
            <returns>The smallest DLC that can hold the requested length (0x00-0x0F).</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.StatusListTypes_2016(Peak.Can.IsoTp.cantp_status)">
            <summary>
            Lists the subtypes contained in the PCAN-TP status. 
            </summary>
            <param name="status">The status to analyze.</param>
            <returns>An aggregation of cantp_statustype values.</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.StatusGet_2016(Peak.Can.IsoTp.cantp_status,Peak.Can.IsoTp.cantp_statustype)">
            <summary>
            Retrieves the value of a cantp_status subtype (like cantp_errstatus, cantp_busstatus, etc.). 
            </summary>
            <param name="status">The status to analyze.</param>
            <param name="type">The type of status to filter.</param>
            <returns>The value of the enumeration matching the requested type.</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.StatusIsOk_2016(Peak.Can.IsoTp.cantp_status,Peak.Can.IsoTp.cantp_status,System.Boolean)">
            <summary>
            Checks if a status matches an expected result. 
            </summary>
            <param name="status">The status to analyze.</param>
            <param name="status_expected">The expected status.</param>
            <param name="strict">Enable strict mode. Strict mode ensures that bus or extra information are the same.</param>
            <returns>Returns true if the status matches expected parameter.</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.StatusIsOk_2016(Peak.Can.IsoTp.cantp_status,Peak.Can.IsoTp.cantp_status)">
            <summary>
            Checks if a status matches an expected result in non-strict mode. 
            (Strict mode ensures that bus or extra information are the same)
            </summary>
            <param name="status">The status to analyze.</param>
            <param name="status_expected">The expected status.</param>
            <returns>Returns true if the status matches expected parameter.</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.StatusIsOk_2016(Peak.Can.IsoTp.cantp_status)">
            <summary>
            Checks if a status matches PCANTP_STATUS_OK in non-strict mode. 
            (Strict mode ensures that bus or extra information are the same)
            </summary>
            <param name="status">The status to analyze.</param>
            <returns>Returns true if the status matches expected parameter.</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.getOption_2016(Peak.Can.IsoTp.cantp_msgoption_list@,System.Int32,Peak.Can.IsoTp.cantp_msgoption@)">
            <summary>
            Get an option value of an option list
            </summary>
            <param name="l">option list</param>
            <param name="number">number of the option</param>
            <param name="option">where to store a copy of the option</param>
            <returns>true if ok, false if not ok</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.setOption_2016(Peak.Can.IsoTp.cantp_msgoption_list@,System.Int32,Peak.Can.IsoTp.cantp_msgoption@)">
            <summary>
            Modifies an option
            </summary>
            <param name="l">option list</param>
            <param name="number">number of the option</param>
            <param name="option">value to set to the option</param>
            <returns>true if ok, false if not ok</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.allocProgressBuffer_2016(Peak.Can.IsoTp.cantp_msgprogress@,Peak.Can.IsoTp.cantp_msgtype)">
            <summary>
            in a progress structure, allocate a buffer to receive a copy of the pending message.
            when finished, must be released with freeProgressBuffer_2016()
            </summary>
            <param name="prog">progress structure</param>
            <param name="type">type of the pending message</param>
            <returns>resulting status</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.freeProgressBuffer_2016(Peak.Can.IsoTp.cantp_msgprogress@)">
            <summary>
            free the buffer receiving the pending message in a progress object,
            if allocated with allocProgressBuffer_2016()
            </summary>
            <param name="prog">progress object</param>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.getProgressBuffer_2016(Peak.Can.IsoTp.cantp_msgprogress@,Peak.Can.IsoTp.cantp_msg@)">
            <summary>
            get the current pending message of a progress structure.
            </summary>
            <param name="prog">progress structure</param>
            <param name="pendmsg">pending message</param>
            <returns>true if ok, false if not ok</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.getFlags_2016(Peak.Can.IsoTp.cantp_msg@,Peak.Can.IsoTp.cantp_msgflag@)">
            <summary>
            get the flags of a message
            </summary>
            <param name="msg">Message structure</param>
            <param name="flags">value of the flags</param>
            <returns>true if ok, false if not ok</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.setLength_2016(Peak.Can.IsoTp.cantp_msg@,System.UInt32)">
            <summary>
            set the length of a message
            use carefully
            </summary>
            <param name="msg">Message structure</param>
            <param name="len">value to set</param>
            <returns>true if ok, false if not ok</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.getLength_2016(Peak.Can.IsoTp.cantp_msg@,System.UInt32@)">
            <summary>
            get the length of a message
            </summary>
            <param name="msg">Message structure</param>
            <param name="len">value of the length</param>
            <returns>true if ok, false if not ok</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.setData_2016(Peak.Can.IsoTp.cantp_msg@,System.Int32,System.Byte)">
            <summary>
            set a byte of the data of a message
            </summary>
            <param name="msg">Message structure to modify.</param>
            <param name="i">offset of the byte, cannot be more than 2147483647</param> 
            <param name="val"> value to set</param>
            <returns>true if ok, false if not ok</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.setData_2016(Peak.Can.IsoTp.cantp_msg@,System.Int32,System.Byte[],System.Int32)">
            <summary>
            set bytes of the data of a message from a contiguous byte array
            </summary>
            <param name="msg">Message structure to modify.</param>
            <param name="i">offset of the first byte in the message, cannot be more than 2147483647</param> 
            <param name="nb">number of bytes</param> 
            <param name="vals">values to set, from offset 0</param>
            <returns>true if ok, false if not ok</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.getData_2016(Peak.Can.IsoTp.cantp_msg@,System.Int32,System.Byte@)">
            <summary>
            get a byte of the data of a message
            </summary>
            <param name="msg">Message structure containing data.</param>
            <param name="i">offset of the bytes in the message, cannot be more than 2147483647</param> 
            <param name="val"> value of the byte</param>
            <returns>true if ok, false if not ok</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.getData_2016(Peak.Can.IsoTp.cantp_msg@,System.Int32,System.Byte[],System.Int32)">
            <summary>
            get bytes of the data of a message
            </summary>
            <param name="msg">Message structure containing data.</param>
            <param name="i">offset of the first byte to get in the message, cannot be more than 2147483647</param> 
            <param name="nb">number of bytes</param> 
            <param name="vals"> values of the bytes, from offset 0</param>
            <returns>true if ok, false if not ok</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.getNetStatus_2016(Peak.Can.IsoTp.cantp_msg@,Peak.Can.IsoTp.cantp_netstatus@)">
            <summary>
            get the net status of a message
            </summary>
            <param name="msg">Message structure containing the network status</param>
            <param name="status">value of the status</param>
            <returns>true if ok, false if not ok</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.getOption_2016(Peak.Can.IsoTp.cantp_msg@,System.Int32,Peak.Can.IsoTp.cantp_msgoption@)">
            <summary>
            Get an option of a message
            </summary>
            <param name="msg">Message structure</param>
            <param name="number">number of the option</param>
            <param name="option">where to store a copy of the option</param>
            <returns>true if ok, false if not ok</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.setOption_2016(Peak.Can.IsoTp.cantp_msg@,System.Int32,Peak.Can.IsoTp.cantp_msgoption@)">
            <summary>
            Modifies an option of a message
            </summary>
            <param name="msg">Message structure to modify</param>
            <param name="number">number of the option</param>
            <param name="option">value to set to the option</param>
            <returns>true if ok, false if not ok</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.getOptionsNumber_2016(Peak.Can.IsoTp.cantp_msg@,System.UInt32@)">
            <summary>
            Get the number of options of a message
            </summary>
            <param name="msg">message</param>
            <param name="number">number of options</param>
            <returns>true if ok, false if Not ok</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.setNetaddrinfo_2016(Peak.Can.IsoTp.cantp_msg@,Peak.Can.IsoTp.cantp_netaddrinfo@)">
            <summary>
            set the network address information of an ISO-TP message
            </summary>
            <param name="msg">Message structure</param>
            <param name="adr">address to set</param>
            <returns>true if ok, false if not ok</returns>
        </member>
        <member name="M:Peak.Can.IsoTp.CanTpApi.getNetaddrinfo_2016(Peak.Can.IsoTp.cantp_msg@,Peak.Can.IsoTp.cantp_netaddrinfo@)">
            <summary>
            get the network address information of an ISO-TP message
            </summary>
            <param name="msg">Message structure</param>
            <param name="adr">value of address</param>
            <returns>true if ok, false if not ok</returns>
        </member>
        <member name="T:Peak.Can.Uds.uds_errstatus">
            <summary>
            Represents PUDS error codes (used in uds_status)
            </summary>
        </member>
        <member name="T:Peak.Can.Uds.uds_status_offset">
            <summary>
            Defines constants used by the next enum: uds_status
            </summary>
        </member>
        <member name="T:Peak.Can.Uds.uds_status">
             <summary>
             Represents the PCANTP &amp; UDS error and status codes.
            
             Bits information:
               32|  28|  24|  20|  16|  12|   8|   4|   0|
                 |    |    |    |    |    |    |    |    |
                  0000 0000 0000 0000 0000 0000 0000 0000
                 |    |    |    |    |         [0000 0000] => PCAN-ISO-TP API errors
                 |    |    |    |    |  [0 0000]           => CAN Bus status
                 |    |    |    | [00 000]                 => Networking message status
                 |    |    [0000 00]                       => PCAN-ISO-TP API extra information
                 |  [0 0000]                               => API Status
                 | [0]                                     => UDS Status
                 |[0]                                      => Reserved
                 [0]                                       => PCANBasic error flag
             </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_OK">
            <summary>
            No error
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_NOT_INITIALIZED">
            <summary>
            Not Initialized.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_ALREADY_INITIALIZED">
            <summary>
            Already Initialized.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_NO_MEMORY">
            <summary>
            Could not obtain memory.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_OVERFLOW">
            <summary>
            Input buffer overflow.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_NO_MESSAGE">
            <summary>
            No message available.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_PARAM_INVALID_TYPE">
            <summary>
            Wrong message parameters.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_PARAM_INVALID_VALUE">
            <summary>
            Wrong message parameters.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_MAPPING_NOT_INITIALIZED">
            <summary>
            Mapping not initialized.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_MAPPING_INVALID">
            <summary>
            Mapping parameters are invalid.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_MAPPING_ALREADY_INITIALIZED">
            <summary>
            Mapping already defined.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_PARAM_BUFFER_TOO_SMALL">
            <summary>
            Buffer is too small.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_QUEUE_TX_FULL">
            <summary>
            Tx queue is full.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_LOCK_TIMEOUT">
            <summary>
            Failed to get an access to the internal lock.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_HANDLE_INVALID">
            <summary>
            Invalid cantp_handle.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_UNKNOWN">
            <summary>
            Unknown/generic error.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_FLAG_BUS_LIGHT">
            <summary>
            Channel is in BUS - LIGHT error state.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_FLAG_BUS_HEAVY">
            <summary>
            Channel is in BUS - HEAVY error state.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_FLAG_BUS_WARNING">
            <summary>
            Channel is in BUS - HEAVY error state.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_FLAG_BUS_PASSIVE">
            <summary>
            Channel is error passive state.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_FLAG_BUS_OFF">
            <summary>
            Channel is in BUS - OFF error state.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_FLAG_BUS_ANY">
            <summary>
            Mask for all bus errors.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_FLAG_NETWORK_RESULT">
            <summary>
            This flag states if one of the following network errors occurred with the fetched message.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_NETWORK_TIMEOUT_A">
            <summary>
            Timeout occurred between 2 frames transmission (sender and receiver side).
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_NETWORK_TIMEOUT_Bs">
            <summary>
            Sender side timeout while waiting for flow control frame.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_NETWORK_TIMEOUT_Cr">
            <summary>
            Receiver side timeout while waiting for consecutive frame.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_NETWORK_WRONG_SN">
            <summary>
            Unexpected sequence number.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_NETWORK_INVALID_FS">
            <summary>
            Invalid or unknown FlowStatus.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_NETWORK_UNEXP_PDU">
            <summary>
            Unexpected protocol data unit.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_NETWORK_WFT_OVRN">
            <summary>
            Reception of flow control WAIT frame that exceeds the maximum counter defined by PUDS_PARAMETER_WFT_MAX.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_NETWORK_BUFFER_OVFLW">
            <summary>
            Buffer on the receiver side cannot store the data length (server side only).
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_NETWORK_ERROR">
            <summary>
            General error.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_NETWORK_IGNORED">
            <summary>
            Message was invalid and ignored.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_NETWORK_TIMEOUT_Ar">
            <summary>
            Receiver side timeout while transmitting.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_NETWORK_TIMEOUT_As">
            <summary>
            Sender side timeout while transmitting.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_CAUTION_INPUT_MODIFIED">
            <summary>
            Input was modified by the API.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_CAUTION_DLC_MODIFIED">
            <summary>
            DLC value of the input was modified by the API.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_CAUTION_DATA_LENGTH_MODIFIED">
            <summary>
            Data Length value of the input was modified by the API.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_CAUTION_FD_FLAG_MODIFIED">
            <summary>
            FD flags of the input was modified by the API.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_CAUTION_RX_QUEUE_FULL">
            <summary>
            Receive queue is full.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_CAUTION_BUFFER_IN_USE">
            <summary>
            Buffer is used by another thread or API.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_FLAG_PCAN_STATUS">
            <summary>
            PCAN error flag, remove flag to get a usable PCAN error/status code (cf. PCANBasic API).
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_MASK_ERROR">
            <summary>
            Filter general error.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_MASK_BUS">
            <summary>
            Filter bus error.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_MASK_ISOTP_NET">
            <summary>
            Filter network error.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_MASK_INFO">
            <summary>
            Filter extra information.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_MASK_PCAN">
            <summary>
            Filter PCAN error (encapsulated PCAN-Basic status).
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_FLAG_UDS_ERROR">
            <summary>
            UDS error flag.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_MASK_UDS_ERROR">
            <summary>
            Filter UDS error.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_SERVICE_NO_MESSAGE">
            <summary>
            UDS No message avaiable.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_SERVICE_TIMEOUT_CONFIRMATION">
            <summary>
            Timeout while waiting message confirmation (loopback).
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_SERVICE_TIMEOUT_RESPONSE">
            <summary>
            Timeout while waiting request message response.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_RESET">
            <summary>
            UDS reset error.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_ERROR_WAIT_FOR_P3_TIMING">
            <summary>
            UDS wait for P3 timing error.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_SERVICE_ALREADY_PENDING">
            <summary>
            A message with the same service identifier is already pending in the reception queue,
            user must read response for his previous request before or clear the reception queues with Reset_2013.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_SERVICE_TX_ERROR">
            <summary>
            An error occurred during the transmission of the UDS request message.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_SERVICE_RX_ERROR">
            <summary>
            An error occurred during the reception of the UDS response message.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_SERVICE_RX_OVERFLOW">
            <summary>
            Service received more messages than input buffer expected.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_status.PUDS_STATUS_MESSAGE_BUFFER_ALREADY_USED">
            <summary>
            Given message buffer was already used, user must release buffer with MsgFree_2013 before reusing it.
            </summary>
        </member>
        <member name="T:Peak.Can.Uds.uds_parameter">
            <summary>
            List of parameters handled by PCAN-UDS
            Note: PCAN-ISO-TP and PCAN-Basic parameters (PCANTP_PARAMETER_xxx, PCAN_PARAM_xxx) are compatible via casting.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_API_VERSION">
            <summary>
            (R/ ) uint8_t[]: PCAN-UDS API version parameter
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_DEBUG">
            <summary>
            (R/W) uint8_t: data describing the debug mode  (use PUDS_DEBUG_LVL_ values)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_RECEIVE_EVENT">
            <summary>
            (R/W) uintptr_t: data is pointer to a HANDLE created by CreateEvent function
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_SERVER_ADDRESS">
            <summary>
            (R/W) uint16_t: ISO-TP physical address
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_SESSION_INFO">
            <summary>
            (R/W) uds_sessioninfo: ECU Session information
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_TIMEOUT_REQUEST">
            <summary>
            (R/W) uint32_t: max time to wait to receive the request loopback
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_TIMEOUT_RESPONSE">
            <summary>
            (R/W) uint32_t: max time to wait to receive the message response indication
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_AUTOMATIC_TESTER_PRESENT">
            <summary>
            (R/W) bool: Automatic tester present. Default value: true
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_USE_NO_RESPONSE_AUTOMATIC_TESTER_PRESENT">
            <summary>
            (R/W) bool: Use no response flag for automatic tester present. Default value: true
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_AUTO_P3_TIMING_MANAGEMENT">
            <summary>
            (R/W) bool: Wait for P3 timing. Default value: true (ISO-14229-2_2013 §8.3 Minimum time between client request messages, p.36)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_LISTENED_ADDRESSES">
            <summary>
            (R/ ) uint16_t[size]: List of pysical addresses to listen to.
            NOTE: for the parameter PUDS_PARAMETER_LISTENED_ADDRESSES the size of the array must
            be specified in the "buffer_size" parameter of the "UDS_GetValue_2013" function
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_ADD_LISTENED_ADDRESS">
            <summary>
            ( /W) uint16_t: Add a listening address to the list of physical addresses to listen to
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_REMOVE_LISTENED_ADDRESS">
            <summary>
            ( /W) uint16_t: Remove a listening address from the list of physical addresses to listen to
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_CHANNEL_CONDITION">
            <summary>
            (R/ ) uint8_t: data describing the condition of a channel.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_CAN_TX_DL">
            <summary>
            (R/W) uint8_t: data stating the default DLC to use when transmitting messages with CAN FD
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_CAN_DATA_PADDING">
            <summary>
            (R/W) uint8_t: data stating if CAN frame DLC uses padding or not
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_CAN_PADDING_VALUE">
            <summary>
            (R/W) uint8_t: data stating the value used for CAN data padding
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_J1939_PRIORITY">
            <summary>
            (R/W) uint8_t: data stating the default priority value for normal fixed, mixed and enhanced addressing (default=6)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_BLOCK_SIZE">
            <summary>
            (R/W) uint8_t: data describing the block size parameter (BS)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_SEPARATION_TIME">
            <summary>
            (R/W) uint8_t: data describing the seperation time parameter (STmin)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_WFT_MAX">
            <summary>
            (R/W) uint8_t[4]: data describing the Wait Frame Transmissions parameter.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_ISO_TIMEOUTS">
            <summary>
            (R/W) uint8_t: data to set predefined ISO values for timeouts (see PCANTP_ISO_TIMEOUTS_*).
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_parameter.PUDS_PARAMETER_RESET_HARD">
            <summary>
            ( /W) uint8_t: data stating to clear Rx/Tx queues and CAN controller (channel is unitialized and re-initialized but settings and mappings are kept)
            </summary>
        </member>
        <member name="T:Peak.Can.Uds.uds_msgtype">
            <summary>
            Represents type and flags for a usd_msg
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgtype.PUDS_MSGTYPE_USDT">
            <summary>
            Unacknowledge Segmented Data Transfert (ISO-TP message)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgtype.PUDS_MSGTYPE_UUDT">
            <summary>
            Unacknowledge Unsegmented Data Transfert (msg_physical will use a single CAN/CAN-FD frame without ISO-TP protocol control information)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgtype.PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE">
            <summary>
            ECU(s) shall not reply to the request on positive response.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgtype.PUDS_MSGTYPE_FLAG_LOOPBACK">
            <summary>
            Message is a loopback
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgtype.PUDS_MSGTYPE_MASK_TYPE">
            <summary>
            Mask to get the type (USDT or UUDT)
            </summary>
        </member>
        <member name="T:Peak.Can.Uds.uds_msgprotocol">
            <summary>
            Represents ISO-TP network addressing information supported in UDS
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgprotocol.PUDS_MSGPROTOCOL_NONE">
            <summary>
            Non ISO-TP frame (Unacknowledge Unsegmented Data Transfer)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgprotocol.PUDS_MSGPROTOCOL_ISO_15765_2_11B_EXTENDED">
            <summary>
            ISO-TP 11 bits Extended addressing (mapping required)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgprotocol.PUDS_MSGPROTOCOL_ISO_15765_2_11B_NORMAL">
            <summary>
            ISO-TP 11 bits Normal addressing (mapping required)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgprotocol.PUDS_MSGPROTOCOL_ISO_15765_2_11B_REMOTE">
            <summary>
            ISO-TP 11 bits Mixed addressing (mapping required)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgprotocol.PUDS_MSGPROTOCOL_ISO_15765_2_29B_EXTENDED">
            <summary>
            ISO-TP 29 bits Extended addressing (mapping required)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgprotocol.PUDS_MSGPROTOCOL_ISO_15765_2_29B_FIXED_NORMAL">
            <summary>
            ISO-TP 29 bits Fixed Normal addressing
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgprotocol.PUDS_MSGPROTOCOL_ISO_15765_2_29B_NORMAL">
            <summary>
            ISO-TP 29 bits Normal addressing (mapping required)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgprotocol.PUDS_MSGPROTOCOL_ISO_15765_2_29B_REMOTE">
            <summary>
            ISO-TP 29 bits Mixed addressing
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgprotocol.PUDS_MSGPROTOCOL_ISO_15765_3_29B_ENHANCED">
            <summary>
            ISO-TP Enhanced addressing
            </summary>
        </member>
        <member name="T:Peak.Can.Uds.uds_nrc">
            <summary>
            Represents UDS negative response codes (see ISO 14229-1:2013 §A.1 Negative response codes p.325)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_PR">
            <summary>
            Positive Response
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_GR">
            <summary>
            General Reject
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_SNS">
            <summary>
            Service Not Supported
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_SFNS">
            <summary>
            Sub Function Not Supported
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_IMLOIF">
            <summary>
            Incorrect Message Length Or Invalid Format
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_RTL">
            <summary>
            Response Too Long
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_BRR">
            <summary>
            Busy Repeat Request
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_CNC">
            <summary>
            Conditions Not Correct
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_RSE">
            <summary>
            Request Sequence Error
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_NRFSC">
            <summary>
            No Response From Subnet Component
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_FPEORA">
            <summary>
            Failure Prevents Execution Of Requested Action
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_ROOR">
            <summary>
            Request Out Of Range
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_SAD">
            <summary>
            Security Access Denied
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_AR">
            <summary>
            Authentication Required
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_IK">
            <summary>
            Invalid Key
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_ENOA">
            <summary>
            Exceeded Number Of Attempts
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_RTDNE">
            <summary>
            Required Time Delay Not Expired
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_SDTR">
            <summary>
            Secure Data Transmission Required
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_SDTNA">
            <summary>
            Secure Data Transmission Not Allowed
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_SDTF">
            <summary>
            Secure Data Verification Failed
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_CVFITP">
            <summary>
            Certificate Verification Failed Invalid Time Period
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_CVFISIG">
            <summary>
            Certificate Verification Failed Invalid SIGnature
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_CVFICOT">
            <summary>
            Certificate Verification Failed Invalid Chain of Trust
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_CVFIT">
            <summary>
            Certificate Verification Failed Invalid Type
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_CVFIF">
            <summary>
            Certificate Verification Failed Invalid Format
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_CVFIC">
            <summary>
            Certificate Verification Failed Invalid Content
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_CVFISCP">
            <summary>
            Certificate Verification Failed Invalid SCoPe
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_CVFICERT">
            <summary>
            Certificate Verification Failed Invalid CERTificate(revoked)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_OVF">
            <summary>
            Ownership Verification Failed
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_CCF">
            <summary>
            Challenge Calculation Failed
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_SARF">
            <summary>
            Setting Access Rights Failed
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_SKCDF">
            <summary>
            Session Key Creation / Derivation Failed
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_CDUF">
            <summary>
            Configuration Data Usage Failed
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_DAF">
            <summary>
            DeAuthentication Failed
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_UDNA">
            <summary>
            Upload Download Not Accepted
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_TDS">
            <summary>
            Transfer Data Suspended
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_GPF">
            <summary>
            General Programming Failure
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_WBSC">
            <summary>
            Wrong Block Sequence Counter
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_RCRRP">
            <summary>
            Request Correctly Received - Response Pending
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_SFNSIAS">
            <summary>
            Sub Function Not Supported In Active Session
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_SNSIAS">
            <summary>
            Service Not Supported In Active Session
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_RPMTH">
            <summary>
            RPM Too High
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_RPMTL">
            <summary>
            RPM Too Low
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_EIR">
            <summary>
            Engine Is Running
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_EINR">
            <summary>
            Engine Is Not Running
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_ERTTL">
            <summary>
            Engine Run Time Too Low
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_TEMPTH">
            <summary>
            TEMPerature Too High
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_TEMPTL">
            <summary>
            TEMPerature Too Low
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_VSTH">
            <summary>
            Vehicle Speed Too High
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_VSTL">
            <summary>
            Vehicle Speed Too Low
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_TPTH">
            <summary>
            Throttle / Pedal Too High
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_TPTL">
            <summary>
            Throttle / Pedal Too Low
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_TRNIN">
            <summary>
            Transmission Range Not In Neutral
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_TRNIG">
            <summary>
            Transmission Range Not In Gear
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_BSNC">
            <summary>
            Brake Switch(es) Not Closed(brake pedal not pressed or not applied)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_SLNIP">
            <summary>
            Shifter Lever Not In Park
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_TCCL">
            <summary>
            Torque Converter Clutch Locked
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_VTH">
            <summary>
            Voltage Too High
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_VTL">
            <summary>
            Voltage Too Low
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_nrc.PUDS_NRC_RTNA">
            <summary>
            Resource Temporarily Not Available
            </summary>
        </member>
        <member name="T:Peak.Can.Uds.uds_can_id">
            <summary>
            PUDS ISO_15765_4 11 bit CAN ID definitions
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_can_id.PUDS_CAN_ID_ISO_15765_4_FUNCTIONAL_REQUEST">
            <summary>
            CAN ID for functionally addressed request messages sent by external test equipment
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_can_id.PUDS_CAN_ID_ISO_15765_4_PHYSICAL_REQUEST_1">
            <summary>
            physical request CAN ID from external test equipment to ECU #1
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_can_id.PUDS_CAN_ID_ISO_15765_4_PHYSICAL_RESPONSE_1">
            <summary>
            physical response CAN ID from ECU #1 to external test equipment
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_can_id.PUDS_CAN_ID_ISO_15765_4_PHYSICAL_REQUEST_2">
            <summary>
            physical request CAN ID from external test equipment to ECU #2
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_can_id.PUDS_CAN_ID_ISO_15765_4_PHYSICAL_RESPONSE_2">
            <summary>
            physical response CAN ID from ECU #2 to external test equipment
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_can_id.PUDS_CAN_ID_ISO_15765_4_PHYSICAL_REQUEST_3">
            <summary>
            physical request CAN ID from external test equipment to ECU #3
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_can_id.PUDS_CAN_ID_ISO_15765_4_PHYSICAL_RESPONSE_3">
            <summary>
            physical response CAN ID from ECU #3 to external test equipment
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_can_id.PUDS_CAN_ID_ISO_15765_4_PHYSICAL_REQUEST_4">
            <summary>
            physical request CAN ID from external test equipment to ECU #4
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_can_id.PUDS_CAN_ID_ISO_15765_4_PHYSICAL_RESPONSE_4">
            <summary>
            physical response CAN ID from ECU #4 to external test equipment
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_can_id.PUDS_CAN_ID_ISO_15765_4_PHYSICAL_REQUEST_5">
            <summary>
            physical request CAN ID from external test equipment to ECU #5
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_can_id.PUDS_CAN_ID_ISO_15765_4_PHYSICAL_RESPONSE_5">
            <summary>
            physical response CAN ID from ECU #5 to external test equipment
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_can_id.PUDS_CAN_ID_ISO_15765_4_PHYSICAL_REQUEST_6">
            <summary>
            physical request CAN ID from external test equipment to ECU #6
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_can_id.PUDS_CAN_ID_ISO_15765_4_PHYSICAL_RESPONSE_6">
            <summary>
            physical response CAN ID from ECU #6 to external test equipment
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_can_id.PUDS_CAN_ID_ISO_15765_4_PHYSICAL_REQUEST_7">
            <summary>
            physical request CAN ID from external test equipment to ECU #7
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_can_id.PUDS_CAN_ID_ISO_15765_4_PHYSICAL_RESPONSE_7">
            <summary>
            physical response CAN ID from ECU #7 to external test equipment
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_can_id.PUDS_CAN_ID_ISO_15765_4_PHYSICAL_REQUEST_8">
            <summary>
            physical request CAN ID from external test equipment to ECU #8
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_can_id.PUDS_CAN_ID_ISO_15765_4_PHYSICAL_RESPONSE_8">
            <summary>
            physical response CAN ID from ECU #8 to external test equipment
            </summary>
        </member>
        <member name="T:Peak.Can.Uds.uds_address">
            <summary>
            PUDS ISO_15765_4 address definitions
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_address.PUDS_ADDRESS_ISO_15765_4_ADDR_TEST_EQUIPMENT">
            <summary>
            external test equipment
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_address.PUDS_ADDRESS_ISO_15765_4_ADDR_OBD_FUNCTIONAL">
            <summary>
            OBD funtional system
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_address.PUDS_ADDRESS_ISO_15765_4_ADDR_ECU_1">
            <summary>
            ECU 1
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_address.PUDS_ADDRESS_ISO_15765_4_ADDR_ECU_2">
            <summary>
            ECU 2
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_address.PUDS_ADDRESS_ISO_15765_4_ADDR_ECU_3">
            <summary>
            ECU 3
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_address.PUDS_ADDRESS_ISO_15765_4_ADDR_ECU_4">
            <summary>
            ECU 4
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_address.PUDS_ADDRESS_ISO_15765_4_ADDR_ECU_5">
            <summary>
            ECU 5
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_address.PUDS_ADDRESS_ISO_15765_4_ADDR_ECU_6">
            <summary>
            ECU 6
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_address.PUDS_ADDRESS_ISO_15765_4_ADDR_ECU_7">
            <summary>
            ECU 7
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_address.PUDS_ADDRESS_ISO_15765_4_ADDR_ECU_8">
            <summary>
            ECU 8
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_TIMEOUT_REQUEST">
            <summary>
            Default maximum timeout for UDS transmit confirmation
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_TIMEOUT_RESPONSE">
            <summary>
            Default maximum timeout for UDS response reception
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SERVER_ADDR_FLAG_ENHANCED_ISO_15765_3">
            <summary>
            Flag stating that the address is defined as a ISO-15765-3 address
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SERVER_ADDR_MASK_ENHANCED_ISO_15765_3">
            <summary>
            Mask used for the ISO-15765-3 enhanced addresses
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_CHANNEL_UNAVAILABLE">
            <summary>
            The Channel is illegal or not available
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_CHANNEL_AVAILABLE">
            <summary>
            The Channel is available
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_CHANNEL_OCCUPIED">
            <summary>
            The Channel is valid, and is being used
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_CAN_DATA_PADDING_NONE">
            <summary>
            Uses CAN frame data optimization
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_CAN_DATA_PADDING_ON">
            <summary>
            Uses CAN frame data padding (default, i.e. CAN DLC = 8)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_CAN_DATA_PADDING_VALUE">
            <summary>
            Default value used if CAN data padding is enabled
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_P2CAN_SERVER_MAX_DEFAULT">
            <summary>
            Default server performance requirement in ms (See ISO_14229-2_2013 §7.2 table 4)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_P2CAN_ENHANCED_SERVER_MAX_DEFAULT">
            <summary>
            Enhanced server performance requirement in ms (See ISO_14229-2_2013 §7.2 table 4)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_S3_CLIENT_TIMEOUT_RECOMMENDED">
            <summary>
            Recommended S3 client timeout in ms (See ISO_14229-2_2013 §7.5 table 5)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_P3CAN_DEFAULT">
            <summary>
            Default P3 timing parameter in ms (See ISO_14229-2_2013 §7.2 table 4)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_DEBUG_LVL_NONE">
            <summary>
            Disable debug messages (default)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_DEBUG_LVL_ERROR">
            <summary>
            Enable debug messages (only errors)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_DEBUG_LVL_WARNING">
            <summary>
            Enable debug messages (only warnings, errors)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_DEBUG_LVL_INFORMATION">
            <summary>
            Enable debug messages (only informations, warnings, errors)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_DEBUG_LVL_NOTICE">
            <summary>
            Enable debug messages (only notices, informations, warnings, errors)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_DEBUG_LVL_DEBUG">
            <summary>
            Enable debug messages (only debug, notices, informations, warnings, errors)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_DEBUG_LVL_TRACE">
            <summary>
            Enable all debug messages
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_ONLY_PREPARE_REQUEST">
            <summary>
            Option that can be used as channel identifier in Svc* functions: only prepare uds_msg structure and do not send it
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_MAPPING_FLOW_CTRL_NONE">
            <summary>
            Mapping does not require a Flow Control frame.
            </summary>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.Initialize_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.IsoTp.cantp_baudrate,Peak.Can.IsoTp.cantp_hwtype,System.UInt32,System.UInt16)">
            <summary>
            Initializes a PUDS channel based on a PCANTP channel handle (without CAN-FD support)
            </summary>
            <remarks>Only one PUDS channel can be initialized per CAN-Channel</remarks>
            <param name="channel">A PCANTP channel handle</param>
            <param name="baudrate">The CAN Hardware speed</param>
            <param name="hw_type">NON PLUG-N-PLAY: The type of hardware and operation mode</param>
            <param name="io_port">NON PLUG-N-PLAY: The I/O address for the parallel port</param>
            <param name="interrupt">NON PLUG-N-PLAY: Interrupt number of the parallel port</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.Initialize_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.IsoTp.cantp_baudrate)">
            <summary>
            Initializes a PUDS channel based on a PCANTP channel handle (without CAN-FD support)
            </summary>
            <remarks>Only one PUDS channel can be initialized per CAN-Channel</remarks>
            <param name="channel">A PCANTP channel handle</param>
            <param name="baudrate">The CAN Hardware speed</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.InitializeFD_2013(Peak.Can.IsoTp.cantp_handle,System.String)">
            <summary>
            Initializes a PUDS channel based on a PCANTP channel handle (including CAN-FD support)
            </summary>
            <param name="channel">The handle of a FD capable PCANTP Channel</param>
            <param name="bitrate_fd">The speed for the communication (FD bit rate string)</param>
            <remarks>Only one PUDS channel can be initialized per CAN-Channel.
            See PCAN_BR_* values
            * Parameter and values must be separated by '='
            * Couples of parameter/value must be separated by ','
            * Following parameter must be filled out: f_clock, data_brp, data_sjw, data_tseg1, data_tseg2,
              nom_brp, nom_sjw, nom_tseg1, nom_tseg2.
            * Following parameters are optional (not used yet): data_ssp_offset, nom_samp
            </remarks>
            <example>f_clock_mhz=80,nom_brp=0,nom_tseg1=13,nom_tseg2=0,nom_sjw=0,data_brp=0,
            data_tseg1=13,data_tseg2=0,data_sjw=0</example>
            <returns>A uds_status error code</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.Uninitialize_2013(Peak.Can.IsoTp.cantp_handle)">
            <summary>
            Uninitializes a PUDS channel
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.Reset_2013(Peak.Can.IsoTp.cantp_handle)">
            <summary>
            Resets the receive and transmit queues of a PUDS channel
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.GetCanBusStatus_2013(Peak.Can.IsoTp.cantp_handle)">
            <summary>
            Gets information about the internal BUS status of a PUDS channel
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.Read_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.uds_msg@,System.UInt64@)">
            <summary>
            Reads a PUDS message from the receive queue of a PUDS channel
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="out_msg_buffer">[out]A uds_msg structure buffer to store the PUDS message</param>
            <param name="in_msg_request">(Optional) If NULL the first available message is fetched.
                Otherwise in_msg_request must represent a sent PUDS request.
                To look for the request confirmation, in_msg_request->type should not have the loopback flag;
                otherwise a response from the target ECU will be searched.</param>
            <param name="out_timestamp">A cantp_timestamp structure buffer to get
            the reception time of the message. If this value is not desired, this parameter
            should be passed as NULL</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.Read_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.uds_msg@)">
            <summary>
            Reads a PUDS message from the receive queue of a PUDS channel
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="out_msg_buffer">[out]A uds_msg structure buffer to store the PUDS message</param>
            <param name="in_msg_request">(Optional) If NULL the first available message is fetched.
                Otherwise in_msg_request must represent a sent PUDS request.
                To look for the request confirmation, in_msg_request->type should not have the loopback flag;
                otherwise a response from the target ECU will be searched.</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.Read_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msg@)">
            <summary>
            Reads a PUDS message from the receive queue of a PUDS channel
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="out_msg_buffer">[out]A uds_msg structure buffer to store the PUDS message</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.Write_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msg@)">
            <summary>
            Transmits a PUDS message
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="msg_buffer">A uds_msg buffer with the message to be sent</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.AddMapping_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_mapping@)">
            <summary>
            Adds a user-defined UDS mapping (relation between a CAN ID and a UDS Network Address Information)
            </summary>
            <remark>
            Defining a mapping enables ISO-TP communication with opened Addressing Formats
            (like PCANTP_ISOTP_FORMAT_NORMAL or PCANTP_ISOTP_FORMAT_EXTENDED).
            </remark>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="mapping">Mapping to be added</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.RemoveMappingByCanId_2013(Peak.Can.IsoTp.cantp_handle,System.UInt32)">
            <summary>
            Removes all user-defined PUDS mappings corresponding to a CAN ID
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="can_id">The mapped CAN ID to search for</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.RemoveMapping_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_mapping)">
            <summary>
            Removes a user-defined PUDS mapping
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="mapping">The mapping to remove</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.GetMapping_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_mapping@,System.UInt32,Peak.Can.IsoTp.cantp_can_msgtype)">
            <summary>
            Retrieves a mapping matching the given CAN identifier and message type (11bits, 29 bits, FD, etc.)
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="buffer">[out]Buffer to store the searched mapping</param>
            <param name="can_id">The mapped CAN ID to look for</param>
            <param name="can_msgtype">The CAN message type to look for (11bits, 29 bits, FD, etc.)</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success,
            PUDS_STATUS_MAPPING_NOT_INITIALIZED if no mapping was found.</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.GetMappings_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_mapping[],System.UInt16,System.UInt16@)">
            <summary>
            Retrieves all the mappings defined for a PUDS channel
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="buffer">[out]Buffer of mappings</param>
            <param name="buffer_length">The number of uds_mapping elements the buffer can store.</param>
            <param name="count">[out]The actual number of elements copied in the buffer.</param>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.AddCanIdFilter_2013(Peak.Can.IsoTp.cantp_handle,System.UInt32)">
            <summary>
            Adds a "PASS" filter on a CAN ID
            </summary>
            <remark>
            CAN and CAN FD frames matching this CAN ID will be fetchable by the UDS API with UDS_Read_2013 function.
            By default all frames are ignored and are available in lower APIs.
            </remark>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="can_id">CAN identifier to listen to</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.RemoveCanIdFilter_2013(Peak.Can.IsoTp.cantp_handle,System.UInt32)">
            <summary>
            Remove a "PASS" filter on a CAN ID
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="can_id">CAN identifier to remove</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.GetValue_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_parameter,System.IntPtr,System.UInt32)">
            <summary>
            Retrieves a PUDS channel value
            </summary>
            <remark>
             * Parameter PUDS_PARAM_SERVER_ADDRESS uses 2 bytes data to describe
            the physical address of the equipment, but the first byte is needed only
            for ISO-15765-3 Enhanced diagnostics 29 bit CAN ID where addresses
            are 11 bits long.
             * Parameter PUDS_PARAM_SERVER_FILTER uses 2 bytes data to describe
            a functional address, but the first byte is needed only
            for ISO-15765-3 Enhanced diagnostics 29 bit CAN ID where addresses
            are 11 bits long; the Most Significant Bit is used to define filter
            status (see PUDS_SERVER_FILTER_LISTEN).
            </remark>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="parameter">The parameter to get</param>
            <param name="buffer">Buffer for the parameter value</param>
            <param name="buffer_size">Size in bytes of the buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.GetValue_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_parameter,System.Text.StringBuilder,System.UInt32)">
            <summary>
            Retrieves a PUDS channel value
            </summary>
            <remark>
             * Parameter PUDS_PARAM_SERVER_ADDRESS uses 2 bytes data to describe
            the physical address of the equipment, but the first byte is needed only
            for ISO-15765-3 Enhanced diagnostics 29 bit CAN ID where addresses
            are 11 bits long.
             * Parameter PUDS_PARAM_SERVER_FILTER uses 2 bytes data to describe
            a functional address, but the first byte is needed only
            for ISO-15765-3 Enhanced diagnostics 29 bit CAN ID where addresses
            are 11 bits long; the Most Significant Bit is used to define filter
            status (see PUDS_SERVER_FILTER_LISTEN).
            </remark>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="parameter">The parameter to get</param>
            <param name="buffer">Buffer for the parameter value</param>
            <param name="buffer_size">Size in bytes of the buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.GetValue_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_parameter,System.UInt32@,System.UInt32)">
            <summary>
            Retrieves a PUDS channel value
            </summary>
            <remark>
             * Parameter PUDS_PARAM_SERVER_ADDRESS uses 2 bytes data to describe
            the physical address of the equipment, but the first byte is needed only
            for ISO-15765-3 Enhanced diagnostics 29 bit CAN ID where addresses
            are 11 bits long.
             * Parameter PUDS_PARAM_SERVER_FILTER uses 2 bytes data to describe
            a functional address, but the first byte is needed only
            for ISO-15765-3 Enhanced diagnostics 29 bit CAN ID where addresses
            are 11 bits long; the Most Significant Bit is used to define filter
            status (see PUDS_SERVER_FILTER_LISTEN).
            </remark>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="parameter">The parameter to get</param>
            <param name="buffer">Buffer for the parameter value</param>
            <param name="buffer_size">Size in bytes of the buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.GetValue_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_parameter,System.Byte[],System.UInt32)">
            <summary>
            Retrieves a PUDS channel value
            </summary>
            <remark>
             * Parameter PUDS_PARAM_SERVER_ADDRESS uses 2 bytes data to describe
            the physical address of the equipment, but the first byte is needed only
            for ISO-15765-3 Enhanced diagnostics 29 bit CAN ID where addresses
            are 11 bits long.
             * Parameter PUDS_PARAM_SERVER_FILTER uses 2 bytes data to describe
            a functional address, but the first byte is needed only
            for ISO-15765-3 Enhanced diagnostics 29 bit CAN ID where addresses
            are 11 bits long; the Most Significant Bit is used to define filter
            status (see PUDS_SERVER_FILTER_LISTEN).
            </remark>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="parameter">The parameter to get</param>
            <param name="buffer">Buffer for the parameter value</param>
            <param name="buffer_size">Size in bytes of the buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SetValue_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_parameter,System.IntPtr,System.UInt32)">
            <summary>
            Configures or sets a PUDS channel value
            </summary>
            <remark>
             * Parameter PUDS_PARAM_SERVER_ADDRESS uses 2 bytes data to describe
            the physical address of the equipment, but the first byte is needed only
            for ISO-15765-3 Enhanced diagnostics 29 bit CAN ID where addresses
            are 11 bits long.
             * Parameter PUDS_PARAM_SERVER_FILTER uses 2 bytes data to describe
            a functional address, but the first byte is needed only
            for ISO-15765-3 Enhanced diagnostics 29 bit CAN ID where addresses
            are 11 bits long; the Most Significant Bit is used to define filter
            status.
            </remark>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="parameter">The parameter to set</param>
            <param name="buffer">Buffer with the value to be set</param>
            <param name="buffer_size">Size in bytes of the buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SetValue_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_parameter,System.UInt32@,System.UInt32)">
            <summary>
            Configures or sets a PUDS channel value
            </summary>
            <remark>
             * Parameter PUDS_PARAM_SERVER_ADDRESS uses 2 bytes data to describe
            the physical address of the equipment, but the first byte is needed only
            for ISO-15765-3 Enhanced diagnostics 29 bit CAN ID where addresses
            are 11 bits long.
             * Parameter PUDS_PARAM_SERVER_FILTER uses 2 bytes data to describe
            a functional address, but the first byte is needed only
            for ISO-15765-3 Enhanced diagnostics 29 bit CAN ID where addresses
            are 11 bits long; the Most Significant Bit is used to define filter
            status.
            </remark>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="parameter">The parameter to set</param>
            <param name="buffer">Buffer with the value to be set</param>
            <param name="buffer_size">Size in bytes of the buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SetValue_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_parameter,System.String,System.UInt32)">
            <summary>
            Configures or sets a PUDS channel value
            </summary>
            <remark>
             * Parameter PUDS_PARAM_SERVER_ADDRESS uses 2 bytes data to describe
            the physical address of the equipment, but the first byte is needed only
            for ISO-15765-3 Enhanced diagnostics 29 bit CAN ID where addresses
            are 11 bits long.
             * Parameter PUDS_PARAM_SERVER_FILTER uses 2 bytes data to describe
            a functional address, but the first byte is needed only
            for ISO-15765-3 Enhanced diagnostics 29 bit CAN ID where addresses
            are 11 bits long; the Most Significant Bit is used to define filter
            status.
            </remark>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="parameter">The parameter to set</param>
            <param name="buffer">Buffer with the value to be set</param>
            <param name="buffer_size">Size in bytes of the buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SetValue_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_parameter,System.Byte[],System.UInt32)">
            <summary>
            Configures or sets a PUDS channel value
            </summary>
            <remark>
             * Parameter PUDS_PARAM_SERVER_ADDRESS uses 2 bytes data to describe
            the physical address of the equipment, but the first byte is needed only
            for ISO-15765-3 Enhanced diagnostics 29 bit CAN ID where addresses
            are 11 bits long.
             * Parameter PUDS_PARAM_SERVER_FILTER uses 2 bytes data to describe
            a functional address, but the first byte is needed only
            for ISO-15765-3 Enhanced diagnostics 29 bit CAN ID where addresses
            are 11 bits long; the Most Significant Bit is used to define filter
            status.
            </remark>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="parameter">The parameter to set</param>
            <param name="buffer">Buffer with the value to be set</param>
            <param name="buffer_size">Size in bytes of the buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.GetErrorText_2013(Peak.Can.Uds.uds_status,System.UInt16,System.Text.StringBuilder,System.UInt32)">
            <summary>
            Returns a descriptive text of a given cantp_status error
            code, in any desired language
            </summary>
            <remarks>The current languages available for translation are:
            Neutral (0x00), German (0x07), English (0x09), Spanish (0x0A),
            Italian (0x10) and French (0x0C)</remarks>
            <param name="error_code">A uds_status error code</param>
            <param name="language">Indicates a 'Primary language ID'</param>
            <param name="buffer">Buffer for a null terminated char array</param>
            <param name="buffer_size">Buffer size</param>
            <returns>A uds_status error code</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.GetSessionInformation_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_sessioninfo@)">
            <summary>
            Gets the session information known by the API
            </summary>
            <remark>
            session_info must be initialized a network address information associated to an ECU.
            Note that the session's information within the API may be different to the actual session of the corresponding ECU.
            </remark>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="session_info">[in|out] The session is filled if an ECU session, matching session_info->nai, exists</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.StatusIsOk_2013(Peak.Can.Uds.uds_status,Peak.Can.Uds.uds_status,System.Boolean)">
            <summary>
            Checks if a status matches an expected result (default is PUDS_STATUS_OK).
            </summary>
            <param name="status">The status to analyze.</param>
            <param name="status_expected">The expected status (default is PUDS_STATUS_OK).</param>
            <param name="strict_mode">Enable strict mode (default is false). Strict mode ensures that bus or extra information are the same.</param>
            <returns>Returns true if the status matches expected parameter.</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.StatusIsOk_2013(Peak.Can.Uds.uds_status,Peak.Can.Uds.uds_status)">
            <summary>
            Checks if a status matches an expected result in a non-strict mode.
            Strict mode ensures that bus or extra information are the same.
            </summary>
            <param name="status">The status to analyze.</param>
            <param name="status_expected">The expected status (default is PUDS_STATUS_OK).</param>
            <returns>Returns true if the status matches expected parameter.</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.StatusIsOk_2013(Peak.Can.Uds.uds_status)">
            <summary>
            Checks if a status matches PUDS_STATUS_OK in a non-strict mode.
            Strict mode ensures that bus or extra information are the same.
            </summary>
            <param name="status">The status to analyze.</param>
            <returns>Returns true if the status matches PUDS_STATUS_OK.</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.MsgAlloc_2013(Peak.Can.Uds.uds_msg@,Peak.Can.Uds.uds_msgconfig,System.UInt32)">
            <summary>
            Allocates a PUDS message based on the given configuration
            </summary>
            <param name="msg_buffer">A uds_msg structure buffer (it will be freed if required)</param>
            <param name="msg_configuration">Configuration of the PUDS message to allocate</param>
            <param name="msg_data_length">Length of the message's data</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.MsgFree_2013(Peak.Can.Uds.uds_msg@)">
            <summary>
            Deallocates a PUDS message
            </summary>
            <param name="msg_buffer">An allocated uds_msg structure buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.MsgCopy_2013(Peak.Can.Uds.uds_msg@,Peak.Can.Uds.uds_msg@)">
            <summary>
            Copies a PUDS message to another buffer.
            </summary>
            <param name="msg_buffer_dst">A uds_msg structure buffer to store the copied message.</param>
            <param name="msg_buffer_src">The uds_msg structure buffer to copy.</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.MsgMove_2013(Peak.Can.Uds.uds_msg@,Peak.Can.Uds.uds_msg@)">
            <summary>
            Moves a PUDS message to another buffer (and cleans the original message structure).
            </summary>
            <param name="msg_buffer_dst">A uds_msg structure buffer to store the message.</param>
            <param name="msg_buffer_src">The uds_msg structure buffer used as the source (will be cleaned).</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.WaitForSingleMessage_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msg@,System.Boolean,System.UInt32,System.UInt32,Peak.Can.Uds.uds_msg@)">
            <summary>
            Waits for a message (a response or a transmit confirmation) based on a UDS request
            </summary>
            <remarks>
            Warning: The order of the parameters has changed in PCAN-UDS 2.0 API.
            </remarks>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="msg_request">A sent uds_msg message used as a reference to find the waited message</param>
            <param name="is_waiting_for_tx">States if the message to wait for is a transmit confirmation</param>
            <param name="timeout">Maximum time to wait (in milliseconds) for a message indication corresponding to the message request</param>
            <param name="timeout_enhanced">Maximum time to wait for a message indication if the server requests more time</param>
            <param name="out_msg_response">A uds_msg structure buffer to store the PUDS response</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.WaitForFunctionalResponses_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msg@,System.UInt32,System.UInt32,System.Boolean,System.UInt32,Peak.Can.Uds.uds_msg[],System.UInt32@)">
            <summary>
            Waits for multiple responses (from a functional request for instance) based on a PUDS message request.
            </summary>
            <remarks>
            Warning: The order of the parameters has changed in PCAN-UDS 2.0 API.
            </remarks>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="msg_request">A sent uds_msg message used as a reference to find the waited message</param>
            <param name="timeout">Maximum time to wait (in milliseconds) for a message indication corresponding to the message request.</param>
            <param name="timeout_enhanced">Maximum time to wait for a message indication if the server requested more time</param>
            <param name="wait_until_timeout">if <code>FALSE</code> the function is interrupted if out_msg_count reaches max_msg_count.</param>
            <param name="max_msg_count">Length of the buffer array (max. messages that can be received)</param>
            <param name="out_msg_responses">Buffer must be an array of 'max_msg_count' entries (must have at least
            a size of max_msg_count * sizeof(uds_msg) bytes</param>
            <param name="out_msg_count">Actual number of messages read</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success,
            PUDS_ERROR_OVERFLOW indicates success but buffer was too small to hold all responses.</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.WaitForService_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.uds_msg@)">
            <summary>
            Handles the communication workflow for a UDS service expecting a single response.
            </summary>
            <remark>
            1) Warning: The order of the parameters has changed in PCAN-UDS 2.0 API.
            2) The function waits for a transmit confirmation then for a message response.
            Even if the SuppressPositiveResponseMessage flag is set, the function will still wait
            for an eventual Negative Response.
            </remark>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="msg_request">A sent uds_msg message used as a reference to manage the UDS service</param>
            <param name="out_msg_response">A uds_msg structure buffer to store the PUDS response</param>
            <param name="out_msg_request_confirmation">A uds_msg structure buffer to store the PUDS request confirmation</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.WaitForServiceFunctional_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msg@,System.UInt32,System.Boolean,Peak.Can.Uds.uds_msg[],System.UInt32@,Peak.Can.Uds.uds_msg@)">
            <summary>
            Handles the communication workflow for a UDS service expecting multiple responses.
            </summary>
            <remark>
            1) Warning: The order of the parameters has changed in PCAN-UDS 2.0 API.
            2) The function waits for a transmit confirmation then for N message responses.
            Even if the SuppressPositiveResponseMessage flag is set, the function will still wait
            for eventual Negative Responses.
            </remark>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="msg_request">sent uds_msg message</param>
            <param name="max_msg_count">Length of the buffer array (max. messages that can be received)</param>
            <param name="wait_until_timeout">if <code>FALSE</code> the function is interrupted if out_msg_count reaches max_msg_count.</param>
            <param name="out_msg_responses">Buffer must be an array of 'max_msg_count' entries (must have at least
            a size of max_msg_count * sizeof(uds_msg) bytes</param>
            <param name="out_msg_count">Actual number of messages read</param>
            <param name="out_msg_request_confirmation">A uds_msg structure buffer to store the PUDS request confirmation</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success,
            PUDS_ERROR_OVERFLOW indicates success but buffer was too small to hold all responses.</returns>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_NRC_EXTENDED_TIMING">
            <summary>
            server wants more time
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SI_POSITIVE_RESPONSE">
            <summary>
            positive response offset
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_dsc.PUDS_SVC_PARAM_DSC_DS">
            <summary>
            Default Session
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_dsc.PUDS_SVC_PARAM_DSC_ECUPS">
            <summary>
            ECU Programming Session
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_dsc.PUDS_SVC_PARAM_DSC_ECUEDS">
            <summary>
            ECU Extended Diagnostic Session
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_dsc.PUDS_SVC_PARAM_DSC_SSDS">
            <summary>
            Safety System Diagnostic Session
            </summary>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcDiagnosticSessionControl_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_dsc)">
            <summary>
            The DiagnosticSessionControl service is used to enable different diagnostic sessions in the server.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="session_type">Subfunction parameter: type of the session (see PUDS_SVC_PARAM_DSC_xxx)</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_er.PUDS_SVC_PARAM_ER_HR">
            <summary>
            Hard Reset
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_er.PUDS_SVC_PARAM_ER_KOFFONR">
            <summary>
            Key Off on Reset
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_er.PUDS_SVC_PARAM_ER_SR">
            <summary>
            Soft Reset
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_er.PUDS_SVC_PARAM_ER_ERPSD">
            <summary>
            Enable Rapid Power Shutdown
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_er.PUDS_SVC_PARAM_ER_DRPSD">
            <summary>
            Disable Rapid Power Shutdown
            </summary>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcECUReset_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_er)">
            <summary>
            The ECUReset service is used by the client to request a server reset.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="reset_type">Subfunction parameter: type of Reset (see PUDS_SVC_PARAM_ER_xxx)</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_SA_RSD_1">
            <summary>
            Request Seed
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_SA_RSD_3">
            <summary>
            Request Seed
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_SA_RSD_5">
            <summary>
            Request Seed
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_SA_RSD_MIN">
            <summary>
            Request Seed (odd numbers)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_SA_RSD_MAX">
            <summary>
            Request Seed (odd numbers)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_SA_SK_2">
            <summary>
            Send Key
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_SA_SK_4">
            <summary>
            Send Key
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_SA_SK_6">
            <summary>
            Send Key
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_SA_SK_MIN">
            <summary>
            Send Key (even numbers)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_SA_SK_MAX">
            <summary>
            Send Key (even numbers)
            </summary>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcSecurityAccess_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte,System.Byte[],System.UInt32)">
            <summary>
            SecurityAccess service provides a means to access data and/or diagnostic services which have
            restricted access for security, emissions or safety reasons.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="security_access_type">Subfunction parameter: type of SecurityAccess (see PUDS_SVC_PARAM_SA_xxx)</param>
            <param name="security_access_data">If Requesting Seed, buffer is the optional data to transmit to a server (like identification).
            If Sending Key, data holds the value generated by the security algorithm corresponding to a specific "seed" value</param>
            <param name="security_access_data_size">Size in bytes of the buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcSecurityAccess_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte)">
            <summary>
            SecurityAccess service provides a means to access data and/or diagnostic services which have
            restricted access for security, emissions or safety reasons.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="security_access_type">Subfunction parameter: type of SecurityAccess (see PUDS_SVC_PARAM_SA_xxx)</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_cc.PUDS_SVC_PARAM_CC_ERXTX">
            <summary>
            Enable Rx and Tx
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_cc.PUDS_SVC_PARAM_CC_ERXDTX">
            <summary>
            Enable Rx and Disable Tx
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_cc.PUDS_SVC_PARAM_CC_DRXETX">
            <summary>
            Disable Rx and Enable Tx
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_cc.PUDS_SVC_PARAM_CC_DRXTX">
            <summary>
            Disable Rx and Tx
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_cc.PUDS_SVC_PARAM_CC_ERXDTXWEAI">
            <summary>
            Enable Rx And Disable Tx With Enhanced Address Information
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_cc.PUDS_SVC_PARAM_CC_ERXTXWEAI">
            <summary>
            Enable Rx And Tx With Enhanced Address Information
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_CC_FLAG_APPL">
            <summary>
            Application (01b)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_CC_FLAG_NWM">
            <summary>
            NetworkManagement (10b)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_CC_FLAG_DESCTIRNCN">
            <summary>
            Disable/Enable specified communicationType (see Flags APPL/NMW)
            in the receiving node and all connected networks
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_CC_FLAG_DENWRIRO">
            <summary>
            Disable/Enable network which request is received on
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_CC_FLAG_DESNIBNN_MIN">
            <summary>
            Disable/Enable specific network identified by network number (minimum value)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_CC_FLAG_DESNIBNN_MAX">
            <summary>
            Disable/Enable specific network identified by network number (maximum value)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_CC_FLAG_DESNIBNN_MASK">
            <summary>
            Mask for DESNIBNN bits
            </summary>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcCommunicationControl_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_cc,System.Byte,System.UInt16)">
            <summary>
            CommunicationControl service's purpose is to switch on/off the transmission
            and/or the reception of certain messages of (a) server(s).
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="control_type">Subfunction parameter: type of CommunicationControl (see PUDS_SVC_PARAM_CC_xxx)</param>
            <param name="communication_type">a bit-code value to reference the kind of communication to be controlled,
            See PUDS_SVC_PARAM_CC_FLAG_xxx flags and ISO_14229-1:2013 §B.1 p.333 for bit-encoding</param>
            <param name="node_identification_number">Identify a node on a sub-network (only used with
            PUDS_SVC_PARAM_CC_ERXDTXWEAI or PUDS_SVC_PARAM_CC_ERXTXWEAI control type)</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcCommunicationControl_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_cc,System.Byte)">
            <summary>
            CommunicationControl service's purpose is to switch on/off the transmission
            and/or the reception of certain messages of (a) server(s).
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="control_type">Subfunction parameter: type of CommunicationControl (see PUDS_SVC_PARAM_CC_xxx)</param>
            <param name="communication_type">a bit-code value to reference the kind of communication to be controlled,
            See PUDS_SVC_PARAM_CC_FLAG_xxx flags and ISO_14229-1:2013 §B.1 p.333 for bit-encoding</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_tp.PUDS_SVC_PARAM_TP_ZSUBF">
            <summary>
            Zero SubFunction
            </summary>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcTesterPresent_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_tp)">
            <summary>
            TesterPresent service indicates to a server (or servers) that a client is still connected
            to the vehicle and that certain diagnostic services and/or communications
            that have been previously activated are to remain active.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="testerpresent_type">No Subfunction parameter by default (PUDS_SVC_PARAM_TP_ZSUBF)</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcTesterPresent_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@)">
            <summary>
            TesterPresent service indicates to a server (or servers) that a client is still connected
            to the vehicle and that certain diagnostic services and/or communications
            that have been previously activated are to remain active.
            No Subfunction parameter by default (PUDS_SVC_PARAM_TP_ZSUBF)
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcSecuredDataTransmission_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte[],System.UInt32)">
            <summary>
            SecuredDataTransmission(2013) service's purpose is to transmit data that is protected
            against attacks from third parties, which could endanger data security.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="security_data_request_record">buffer containing the data as processed by the Security Sub-Layer (See ISO-15764)</param>
            <param name="security_data_request_record_size">Size in bytes of the buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_APAR_REQUEST_MSG_FLAG">
            <summary>
            The messsage is a request message.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_APAR_PRE_ESTABLISHED_KEY_FLAG">
            <summary>
            A pre - established key is used.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_APAR_ENCRYPTED_MSG_FLAG">
            <summary>
            Message is encrypted.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_APAR_SIGNED_MSG_FLAG">
            <summary>
            Message is signed.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_APAR_REQUEST_RESPONSE_SIGNATURE_FLAG">
            <summary>
            Signature on the response is requested.
            </summary>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcSecuredDataTransmission_2020(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.UInt16,System.Byte,System.UInt16,System.Byte,System.Byte[],System.UInt32,System.Byte[],System.UInt16)">
            <summary>
            SecuredDataTransmission(2020) service's purpose is to transmit data that is protected
            against attacks from third parties, which could endanger data security.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="administrative_parameter">Security features used in the message (see PUDS_SVC_PARAM_APAR* definitions)</param>
            <param name="signature_encryption_calculation">Signature or encryption algorithm identifier</param>
            <param name="anti_replay_counter">Anti-replay counter value</param>
            <param name="internal_service_identifier">Internal message service request identifier</param>
            <param name="service_specific_parameters">Buffer that contains internal message service request data</param>
            <param name="service_specific_parameters_size">Internal message service request data size (in bytes)</param>
            <param name="signature_mac">Buffer that contains signature used to verify the message</param>
            <param name="signature_size">Size in bytes of the signature</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_cdtcs.PUDS_SVC_PARAM_CDTCS_ON">
            <summary>
            The server(s) shall resume the setting of diagnostic trouble codes
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_cdtcs.PUDS_SVC_PARAM_CDTCS_OFF">
            <summary>
            The server(s) shall stop the setting of diagnostic trouble codes
            </summary>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcControlDTCSetting_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_cdtcs,System.Byte[],System.UInt32)">
            <summary>
            ControlDTCSetting service shall be used by a client to stop or resume the setting of
            diagnostic trouble codes (DTCs) in the server(s).
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="dtc_setting_type">Subfunction parameter (see PUDS_SVC_PARAM_CDTCS_xxx)</param>
            <param name="dtc_setting_control_option_record">This parameter record is user-optional and transmits data to a server when controlling the DTC setting.
            It can contain a list of DTCs to be turned on or off.</param>
            <param name="dtc_setting_control_option_record_size">Size in bytes of the buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcControlDTCSetting_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_cdtcs)">
            <summary>
            ControlDTCSetting service shall be used by a client to stop or resume the setting of
            diagnostic trouble codes (DTCs) in the server(s).
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="dtc_setting_type">Subfunction parameter (see PUDS_SVC_PARAM_CDTCS_xxx)</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_roe.PUDS_SVC_PARAM_ROE_STPROE">
            <summary>
            Stop Response On Event
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_roe.PUDS_SVC_PARAM_ROE_ONDTCS">
            <summary>
            On DTC Status Change
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_roe.PUDS_SVC_PARAM_ROE_OTI">
            <summary>
            On Timer Interrupt
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_roe.PUDS_SVC_PARAM_ROE_OCODID">
            <summary>
            On Change Of Data Identifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_roe.PUDS_SVC_PARAM_ROE_RAE">
            <summary>
            Report Activated Events
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_roe.PUDS_SVC_PARAM_ROE_STRTROE">
            <summary>
            Start Response On Event
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_roe.PUDS_SVC_PARAM_ROE_CLRROE">
            <summary>
            Clear Response On Event
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_roe.PUDS_SVC_PARAM_ROE_OCOV">
            <summary>
            On Comparison Of Values
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_roe.PUDS_SVC_PARAM_ROE_RMRDOSC">
            <summary>
            Report Most Recent Dtc On Status Change (ISO 14229-1:2020 10.9.2.2 p.121)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_roe.PUDS_SVC_PARAM_ROE_RDRIODSC">
            <summary>
            Report Dtc Record Information On Dtc Status Change (ISO 14229-1:2020 10.9.2.2 p.121)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_ROE_STPROE_LEN">
            <summary>
            Expected size of event type record for ROE_STPROE
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_ROE_ONDTCS_LEN">
            <summary>
            Expected size of event type record for ROE_ONDTCS
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_ROE_OTI_LEN">
            <summary>
            Expected size of event type record for ROE_OTI
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_ROE_OCODID_LEN">
            <summary>
            Expected size of event type record for ROE_OCODID
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_ROE_RAE_LEN">
            <summary>
            Expected size of event type record for ROE_RAE
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_ROE_STRTROE_LEN">
            <summary>
            Expected size of event type record for ROE_STRTROE
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_ROE_CLRROE_LEN">
            <summary>
            Expected size of event type record for ROE_CLRROE
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_ROE_OCOV_LEN">
            <summary>
            Expected size of event type record for ROE_OCOV
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_ROE_RMRDOSC_LEN">
            <summary>
            Expected size of event type record for ROE_RMRDOSC
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_ROE_EWT_ITTR">
            <summary>
            Infinite Time To Response (eventWindowTime parameter)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_ROE_EWT_SEWT">
            <summary>
            Short event window time (eventWindowTime parameter)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_ROE_EWT_MEWT">
            <summary>
            Medium event window time (eventWindowTime parameter)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_ROE_EWT_LEWT">
            <summary>
            Long event window time (eventWindowTime parameter)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_ROE_EWT_PWT">
            <summary>
            Power window time (eventWindowTime parameter)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_ROE_EWT_IWT">
            <summary>
            Ignition window time (eventWindowTime parameter)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_ROE_EWT_MTEWT">
            <summary>
            Manufacturer trigger event window time (eventWindowTime parameter)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_ROE_OTI_SLOW_RATE">
            <summary>
            Slow rate (onTimerInterrupt parameter)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_ROE_OTI_MEDIUM_RATE">
            <summary>
            Medium rate (onTimerInterrupt parameter)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_ROE_OTI_FAST_RATE">
            <summary>
            Fast rate (onTimerInterrupt parameter)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_roe_recommended_service_id.PUDS_SVC_PARAM_ROE_STRT_SI_RDBI">
            <summary>
            Recommended service (first byte of service to respond to record)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_roe_recommended_service_id.PUDS_SVC_PARAM_ROE_STRT_SI_RDTCI">
            <summary>
            Recommended service (first byte of service to respond to record)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_roe_recommended_service_id.PUDS_SVC_PARAM_ROE_STRT_SI_RC">
            <summary>
            Recommended service (first byte of service to respond to record)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_roe_recommended_service_id.PUDS_SVC_PARAM_ROE_STRT_SI_IOCBI">
            <summary>
            Recommended service (first byte of service to respond to record)
            </summary>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcResponseOnEvent_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_roe,System.Boolean,System.Byte,System.Byte[],System.UInt32,System.Byte[],System.UInt32)">
            <summary>
            The ResponseOnEvent service requests a server to
            start or stop transmission of responses on a specified event.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="event_type">Subfunction parameter: event type (see PUDS_SVC_PARAM_ROE_xxx)</param>
            <param name="store_event">Storage State (TRUE = Store Event, FALSE = Do Not Store Event)</param>
            <param name="event_window_time">Specify a window for the event logic to be active in the server (see PUDS_SVC_PARAM_ROE_EWT_ITTR)</param>
            <param name="event_type_record">Additional parameters for the specified event type</param>
            <param name="event_type_record_size">Size in bytes of the event type record (see PUDS_SVC_PARAM_ROE_xxx_LEN)</param>
            <param name="service_to_respond_to_record">Service parameters, with first byte as service Id (see PUDS_SVC_PARAM_ROE_STRT_SI_xxx)</param>
            <param name="service_to_respond_to_record_size">Size in bytes of the service to respond to record</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcResponseOnEvent_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_roe,System.Boolean,System.Byte,System.Byte[],System.UInt32)">
            <summary>
            The ResponseOnEvent service requests a server to
            start or stop transmission of responses on a specified event.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="event_type">Subfunction parameter: event type (see PUDS_SVC_PARAM_ROE_xxx)</param>
            <param name="store_event">Storage State (TRUE = Store Event, FALSE = Do Not Store Event)</param>
            <param name="event_window_time">Specify a window for the event logic to be active in the server (see PUDS_SVC_PARAM_ROE_EWT_ITTR)</param>
            <param name="event_type_record">Additional parameters for the specified event type</param>
            <param name="event_type_record_size">Size in bytes of the event type record (see PUDS_SVC_PARAM_ROE_xxx_LEN)</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcResponseOnEvent_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_roe,System.Boolean,System.Byte)">
            <summary>
            The ResponseOnEvent service requests a server to
            start or stop transmission of responses on a specified event.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="event_type">Subfunction parameter: event type (see PUDS_SVC_PARAM_ROE_xxx)</param>
            <param name="store_event">Storage State (TRUE = Store Event, FALSE = Do Not Store Event)</param>
            <param name="event_window_time">Specify a window for the event logic to be active in the server (see PUDS_SVC_PARAM_ROE_EWT_ITTR)</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_lc.PUDS_SVC_PARAM_LC_VBTWFBR">
            <summary>
            Verify Baudrate Transition With Fixed Baudrate
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_lc.PUDS_SVC_PARAM_LC_VBTWSBR">
            <summary>
            Verify Baudrate Transition With Specific Baudrate
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_lc.PUDS_SVC_PARAM_LC_TB">
            <summary>
            Transition Baudrate
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_lc_baudrate_identifier.PUDS_SVC_PARAM_LC_BAUDRATE_PC_9600">
            <summary>
            standard PC baud rate of 9.6 KBaud
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_lc_baudrate_identifier.PUDS_SVC_PARAM_LC_BAUDRATE_PC_19200">
            <summary>
            standard PC baud rate of 19.2 KBaud
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_lc_baudrate_identifier.PUDS_SVC_PARAM_LC_BAUDRATE_PC_38400">
            <summary>
            standard PC baud rate of 38.4 KBaud
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_lc_baudrate_identifier.PUDS_SVC_PARAM_LC_BAUDRATE_PC_57600">
            <summary>
            standard PC baud rate of 57.6 KBaud
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_lc_baudrate_identifier.PUDS_SVC_PARAM_LC_BAUDRATE_PC_115200">
            <summary>
            standard PC baud rate of 115.2 KBaud
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_lc_baudrate_identifier.PUDS_SVC_PARAM_LC_BAUDRATE_CAN_125K">
            <summary>
            standard CAN baud rate of 125 KBaud
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_lc_baudrate_identifier.PUDS_SVC_PARAM_LC_BAUDRATE_CAN_250K">
            <summary>
            standard CAN baud rate of 250 KBaud
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_lc_baudrate_identifier.PUDS_SVC_PARAM_LC_BAUDRATE_CAN_500K">
            <summary>
            standard CAN baud rate of 500 KBaud
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_lc_baudrate_identifier.PUDS_SVC_PARAM_LC_BAUDRATE_CAN_1M">
            <summary>
            standard CAN baud rate of 1 MBaud
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_lc_baudrate_identifier.PUDS_SVC_PARAM_LC_BAUDRATE_PROGSU">
            <summary>
            Programming setup
            </summary>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcLinkControl_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_lc,Peak.Can.Uds.UDSApi.uds_svc_param_lc_baudrate_identifier,System.UInt32)">
            <summary>
            The LinkControl service is used to control the communication link baud rate
            between the client and the server(s) for the exchange of diagnostic data.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="link_control_type">Subfunction parameter: Link Control Type (see PUDS_SVC_PARAM_LC_xxx)</param>
            <param name="baudrate_identifier">defined baud rate identifier (see PUDS_SVC_PARAM_LC_BAUDRATE_xxx)</param>
            <param name="link_baudrate">used only with PUDS_SVC_PARAM_LC_VBTWSBR parameter:
            a three-byte value baud rate (baudrate High, Middle and Low bytes).</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success </returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcLinkControl_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_lc,Peak.Can.Uds.UDSApi.uds_svc_param_lc_baudrate_identifier)">
            <summary>
            The LinkControl service is used to control the communication link baud rate
            between the client and the server(s) for the exchange of diagnostic data.
            Use only if link_control_type parameter is not PUDS_SVC_PARAM_LC_VBTWSBR
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="link_control_type">Subfunction parameter: Link Control Type (see PUDS_SVC_PARAM_LC_xxx)</param>
            <param name="baudrate_identifier">defined baud rate identifier (see PUDS_SVC_PARAM_LC_BAUDRATE_xxx)</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success </returns>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_BSIDID">
            <summary>
            bootSoftwareIdentificationDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_ASIDID">
            <summary>
            applicationSoftwareIdentificationDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_ADIDID">
            <summary>
            applicationDataIdentificationDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_BSFPDID">
            <summary>
            bootSoftwareIdentificationDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_ASFPDID">
            <summary>
            applicationSoftwareFingerprintDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_ADFPDID">
            <summary>
            applicationDataFingerprintDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_ADSDID">
            <summary>
            activeDiagnosticSessionDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_VMSPNDID">
            <summary>
            vehicleManufacturerSparePartNumberDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_VMECUSNDID">
            <summary>
            vehicleManufacturerECUSoftwareNumberDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_VMECUSVNDID">
            <summary>
            vehicleManufacturerECUSoftwareVersionNumberDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_SSIDDID">
            <summary>
            systemSupplierIdentifierDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_ECUMDDID">
            <summary>
            ECUManufacturingDateDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_ECUSNDID">
            <summary>
            ECUSerialNumberDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_SFUDID">
            <summary>
            supportedFunctionalUnitsDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_VMKAPNDID">
            <summary>
            vehicleManufacturerKitAssemblyPartNumberDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_VINDID">
            <summary>
            VINDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_VMECUHNDID">
            <summary>
            vehicleManufacturerECUHardwareNumberDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_SSECUHWNDID">
            <summary>
            systemSupplierECUHardwareNumberDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_SSECUHWVNDID">
            <summary>
            systemSupplierECUHardwareVersionNumberDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_SSECUSWNDID">
            <summary>
            systemSupplierECUSoftwareNumberDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_SSECUSWVNDID">
            <summary>
            systemSupplierECUSoftwareVersionNumberDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_EROTANDID">
            <summary>
            exhaustRegulationOrTypeApprovalNumberDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_SNOETDID">
            <summary>
            systemNameOrEngineTypeDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_RSCOTSNDID">
            <summary>
            repairShopCodeOrTesterSerialNumberDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_PDDID">
            <summary>
            programmingDateDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_CRSCOCESNDID">
            <summary>
            calibrationRepairShopCodeOrCalibrationEquipmentSerialNumberDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_CDDID">
            <summary>
            calibrationDateDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_CESWNDID">
            <summary>
            calibrationEquipmentSoftwareNumberDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_EIDDID">
            <summary>
            ECUInstallationDateDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_ODXFDID">
            <summary>
            ODXFileDataIdentifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_di.PUDS_SVC_PARAM_DI_EDID">
            <summary>
            entityDataIdentifier
            </summary>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcReadDataByIdentifier_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_di[],System.UInt32)">
            <summary>
            The ReadDataByIdentifier service allows the client to request data record values
            from the server identified by one or more dataIdentifiers.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="data_identifier">buffer containing a list of two-byte Data Identifiers (see PUDS_SVC_PARAM_DI_xxx)</param>
            <param name="data_identifier_length">Number of elements in the buffer (size in uint16_t of the buffer)</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcReadMemoryByAddress_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte[],System.Byte,System.Byte[],System.Byte)">
            <summary>
            The ReadMemoryByAddress service allows the client to request memory data from the server
            via a provided starting address and to specify the size of memory to be read.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="memory_address_buffer">starting address buffer of server memory from which data is to be retrieved</param>
            <param name="memory_address_size">Size in bytes of the memory_address_buffer (max.: 0xF)</param>
            <param name="memory_size_buffer">number of bytes to be read starting at the address specified by memory_address_buffer</param>
            <param name="memory_size_size">Size in bytes of the memory_size_buffer (max.: 0xF)</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcReadScalingDataByIdentifier_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_di)">
            <summary>
            The ReadScalingDataByIdentifier service allows the client to request
            scaling data record information from the server identified by a dataIdentifier.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="data_identifier">a two-byte Data Identifier (see PUDS_SVC_PARAM_DI_xxx)</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdbpi.PUDS_SVC_PARAM_RDBPI_SASR">
            <summary>
            Send At Slow Rate
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdbpi.PUDS_SVC_PARAM_RDBPI_SAMR">
            <summary>
            Send At Medium Rate
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdbpi.PUDS_SVC_PARAM_RDBPI_SAFR">
            <summary>
            Send At Fast Rate
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdbpi.PUDS_SVC_PARAM_RDBPI_SS">
            <summary>
            Stop Sending
            </summary>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcReadDataByPeriodicIdentifier_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_rdbpi,System.Byte[],System.UInt32)">
            <summary>
            The ReadDataByPeriodicIdentifier service allows the client to request the periodic transmission
            of data record values from the server identified by one or more periodicDataIdentifiers.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="transmission_mode">transmission rate code (see PUDS_SVC_PARAM_RDBPI_xxx)</param>
            <param name="periodic_data_identifier">buffer containing a list of Periodic Data Identifiers</param>
            <param name="periodic_data_identifier_size">Number of elements in the buffer (size in bytes of the buffer)</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_dddi.PUDS_SVC_PARAM_DDDI_DBID">
            <summary>
            Define By Identifier
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_dddi.PUDS_SVC_PARAM_DDDI_DBMA">
            <summary>
            Define By Memory Address
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_dddi.PUDS_SVC_PARAM_DDDI_CDDDI">
            <summary>
            Clear Dynamically Defined Data Identifier
            </summary>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcDynamicallyDefineDataIdentifierDBID_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_di,System.UInt16[],System.Byte[],System.Byte[],System.UInt32)">
            <summary>
            The DynamicallyDefineDataIdentifier service allows the client to dynamically define
            in a server a data identifier that can be read via the ReadDataByIdentifier service at a later time.
            The Define By Identifier subfunction specifies that definition of the dynamic data
            identifier shall occur via a data identifier reference.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="dynamically_defined_data_identifier">a two-byte Data Identifier (see PUDS_SVC_PARAM_DI_xxx)</param>
            <param name="source_data_identifier">buffer containing the sources of information to be included into the dynamic data record</param>
            <param name="memory_size">buffer containing the total numbers of bytes from the source data record address</param>
            <param name="position_in_source_data_record">buffer containing the starting byte positions of the excerpt of the source data record</param>
            <param name="number_of_elements">Number of elements in SourceDataIdentifier/position_in_source_data_record/memory_size triplet.</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcDynamicallyDefineDataIdentifierDBMA_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_di,System.Byte,System.Byte,System.Byte[],System.Byte[],System.UInt32)">
            <summary>
            The DynamicallyDefineDataIdentifier service allows the client to dynamically define
            in a server a data identifier that can be read via the ReadDataByIdentifier service at a later time.
            The Define By Memory Address subfunction specifies that definition of the dynamic data
            identifier shall occur via an address reference.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="dynamically_defined_data_identifier">a two-byte Data Identifier (see PUDS_SVC_PARAM_DI_xxx)</param>
            <param name="memory_address_size">Size in bytes of the memory address items in the memory_address_buffer (max.: 0xF)</param>
            <param name="memory_size_size">Size in bytes of the memory size items in the memory_size_buffer (max.: 0xF)</param>
            <param name="memory_address_buffer">buffer containing the memory address buffer,
            must be an array of 'number_of_elements' items whose size is 'memory_address_size'
            (size is 'number_of_elements * memory_address_size' bytes)</param>
            <param name="memory_size_buffer">buffer containing the memory size buffer,
            must be an array of 'number_of_elements' items whose size is 'memory_size_size'
            (size is 'number_of_elements * memory_size_size' bytes)</param>
            <param name="number_of_elements">Number of elements in memory_address_buffer/memory_size_buffer couple.</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcDynamicallyDefineDataIdentifierCDDDI_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_di)">
            <summary>
            The Clear Dynamically Defined Data Identifier subfunction shall be used to clear
            the specified dynamic data identifier.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="dynamically_defined_data_identifier">a two-byte Data Identifier (see PUDS_SVC_PARAM_DI_xxx)</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcDynamicallyDefineDataIdentifierClearAllDDDI_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@)">
            <summary>
            The Clear All Dynamically Defined Data Identifier function shall be used to clear
            all dynamic data identifier declared in the server.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcWriteDataByIdentifier_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_di,System.Byte[],System.UInt32)">
            <summary>
            The WriteDataByIdentifier service allows the client to write information into the server at an internal location
            specified by the provided data identifier.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="data_identifier">a two-byte Data Identifier (see PUDS_SVC_PARAM_DI_xxx)</param>
            <param name="data_record">buffer containing the data to write</param>
            <param name="data_record_size">Size in bytes of the buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcWriteMemoryByAddress_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte[],System.Byte,System.Byte[],System.Byte,System.Byte[],System.UInt32)">
            <summary>
            The WriteMemoryByAddress service allows the client to write
            information into the server at one or more contiguous memory locations.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="memory_address_buffer">Starting address buffer of server memory to which data is to be written</param>
            <param name="memory_address_size">Size in bytes of the memory_address_buffer (max.: 0xF)</param>
            <param name="memory_size_buffer">number of bytes to be written starting at the address specified by memory_address_buffer</param>
            <param name="memory_size_size">Size in bytes of the memory_size_buffer (max.: 0xF)</param>
            <param name="data_record">buffer containing the data to write</param>
            <param name="data_record_size">Size in bytes of the buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_CDI_ERS">
            <summary>
            Emissions-related systems group of DTCs
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.PUDS_SVC_PARAM_CDI_AGDTC">
            <summary>
            All Groups of DTCs
            </summary>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcClearDiagnosticInformation_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.UInt32)">
            <summary>
            The ClearDiagnosticInformation service is used by the client to clear diagnostic information
            in one server's or multiple servers' memory.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="group_of_dtc">a three-byte value indicating the group of DTCs (e.g. powertrain, body, chassis)
            or the particular DTC to be cleared (see PUDS_SVC_PARAM_CDI_xxx)</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcClearDiagnosticInformation_2020(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.UInt32,System.Byte)">
            <summary>
            The ClearDiagnosticInformation service is used by the client to clear diagnostic information
            in one server's or multiple servers' memory.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="group_of_dtc">a three-byte value indicating the group of DTCs (e.g. powertrain, body, chassis)
            or the particular DTC to be cleared (see PUDS_SVC_PARAM_CDI_xxx)</param>
            <param name="memory_selection">User defined DTC memory</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RNODTCBSM">
            <summary>
            report Number Of DTC By Status Mask
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RDTCBSM">
            <summary>
            report DTC By Status Mask
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RDTCSSI">
            <summary>
            report DTC Snapshot Identification
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RDTCSSBDTC">
            <summary>
            report DTC Snapshot Record By DTC Number
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RDTCSSBRN">
            <summary>
            report DTC Snapshot Record By Record Number
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RDTCEDRBDN">
            <summary>
            report DTC Extended Data Record By DTC Number
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RNODTCBSMR">
            <summary>
            report Number Of DTC By Severity Mask Record
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RDTCBSMR">
            <summary>
            report DTC By Severity Mask Record
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RSIODTC">
            <summary>
            report Severity Information Of DTC
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RSUPDTC">
            <summary>
            report Supported DTC
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RFTFDTC">
            <summary>
            report First Test Failed DTC
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RFCDTC">
            <summary>
            report First Confirmed DTC
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RMRTFDTC">
            <summary>
            report Most Recent Test Failed DTC
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RMRCDTC">
            <summary>
            report Most Recent Confirmed DTC
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RMMDTCBSM">
            <summary>
            report Mirror Memory DTC By Status Mask
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RMMDEDRBDN">
            <summary>
            report Mirror Memory DTC Extended Data Record By DTC Number
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RNOMMDTCBSM">
            <summary>
            report Number Of Mirror MemoryDTC By Status Mask
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RNOOBDDTCBSM">
            <summary>
            report Number Of Emissions Related OBD DTC By Status Mask
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_ROBDDTCBSM">
            <summary>
            report Emissions Related OBD DTC By Status Mask
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RDTCEDBR">
            <summary>
            report DTC Ext Data Record By Record Number
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RUDMDTCBSM">
            <summary>
            report User Def Memory DTC By Status Mask
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RUDMDTCSSBDTC">
            <summary>
            report User Def Memory DTC Snapshot Record By DTC Number
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RUDMDTCEDRBDN">
            <summary>
            report User Def Memory DTC Ext Data Record By DTC Number
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RDTCEDI">
            <summary>
            report report DTC Extended Data Record Identification (ISO_14229-1 2020)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RWWHOBDDTCBMR">
            <summary>
            report WWHOBD DTC By Mask Record
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RWWHOBDDTCWPS">
            <summary>
            report WWHOBD DTC With Permanent Status
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RDTCBRGI">
            <summary>
            report DTC Information By DTC Readiness Group Identifier (ISO_14229-1 2020)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RDTCFDC">
            <summary>
            report DTC Fault Detection Counter
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci.PUDS_SVC_PARAM_RDTCI_RDTCWPS">
            <summary>
            report DTC With Permanent Status
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci_dtcsvm.PUDS_SVC_PARAM_RDTCI_DTCSVM_NSA">
            <summary>
            DTC severity bit definitions: no SeverityAvailable
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci_dtcsvm.PUDS_SVC_PARAM_RDTCI_DTCSVM_MO">
            <summary>
            DTC severity bit definitions: maintenance Only
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci_dtcsvm.PUDS_SVC_PARAM_RDTCI_DTCSVM_CHKANH">
            <summary>
            DTC severity bit definitions: check At Next Halt
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rdtci_dtcsvm.PUDS_SVC_PARAM_RDTCI_DTCSVM_CHKI">
            <summary>
            DTC severity bit definitions: check Immediately
            </summary>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcReadDTCInformation_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_rdtci,System.Byte)">
            <summary>
            This service allows a client to read the status of server-resident Diagnostic Trouble Code (DTC) information.
            Only reportNumberOfDTCByStatusMask, reportDTCByStatusMask, reportMirrorMemoryDTCByStatusMask,
            reportNumberOfMirrorMemoryDTCByStatusMask, reportNumberOfEmissionsRelatedOBDDTCByStatusMask,
            reportEmissionsRelatedOBDDTCByStatusMask Sub-functions are allowed.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="PUDS_SVC_PARAM_RDTCI_Type">Subfunction parameter: ReadDTCInformation type, use one of the following:
            PUDS_SVC_PARAM_RDTCI_RNODTCBSM, PUDS_SVC_PARAM_RDTCI_RDTCBSM,
            PUDS_SVC_PARAM_RDTCI_RMMDTCBSM, PUDS_SVC_PARAM_RDTCI_RNOMMDTCBSM,
            PUDS_SVC_PARAM_RDTCI_RNOOBDDTCBSM, PUDS_SVC_PARAM_RDTCI_ROBDDTCBSM</param>
            <param name="dtc_status_mask">Contains eight DTC status bit.</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcReadDTCInformationRDTCSSBDTC_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.UInt32,System.Byte)">
            <summary>
            This service allows a client to read the status of server-resident Diagnostic Trouble Code (DTC) information.
            The sub-function reportDTCSnapshotRecordByDTCNumber (PUDS_SVC_PARAM_RDTCI_RDTCSSBDTC) is implicit.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="dtc_mask">a unique identification number (three byte value) for a specific diagnostic trouble code</param>
            <param name="dtc_snapshot_record_number">the number of the specific DTCSnapshot data records</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcReadDTCInformationRDTCSSBRN_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte)">
            <summary>
            This service allows a client to read the status of server-resident Diagnostic Trouble Code (DTC) information.
            The sub-function reportDTCSnapshotByRecordNumber (PUDS_SVC_PARAM_RDTCI_RDTCSSBRN) is implicit.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="dtc_snapshot_record_number">the number of the specific DTCSnapshot data records</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcReadDTCInformationReportExtended_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_rdtci,System.UInt32,System.Byte)">
            <summary>
            This service allows a client to read the status of server-resident Diagnostic Trouble Code (DTC) information.
            Only reportDTCExtendedDataRecordByDTCNumber and reportMirrorMemoryDTCExtendedDataRecordByDTCNumber Sub-functions are allowed.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="PUDS_SVC_PARAM_RDTCI_Type">Subfunction parameter: ReadDTCInformation type, use one of the following:
            PUDS_SVC_PARAM_RDTCI_RDTCEDRBDN, PUDS_SVC_PARAM_RDTCI_RMMDEDRBDN</param>
            <param name="dtc_mask">a unique identification number (three byte value) for a specific diagnostic trouble code</param>
            <param name="dtc_extended_data_record_number">the number of the specific DTCExtendedData record requested.</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcReadDTCInformationReportSeverity_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_rdtci,System.Byte,System.Byte)">
            <summary>
            This service allows a client to read the status of server-resident Diagnostic Trouble Code (DTC) information.
            Only reportNumberOfDTCBySeverityMaskRecord and reportDTCSeverityInformation Sub-functions are allowed.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="PUDS_SVC_PARAM_RDTCI_Type">Subfunction parameter: ReadDTCInformation type, use one of the following:
            PUDS_SVC_PARAM_RDTCI_RNODTCBSMR, PUDS_SVC_PARAM_RDTCI_RDTCBSMR</param>
            <param name="dtc_severity_mask">a mask of eight (8) DTC severity bits (see PUDS_SVC_PARAM_RDTCI_DTCSVM_xxx)</param>
            <param name="dtc_status_mask">a mask of eight (8) DTC status bits</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcReadDTCInformationRSIODTC_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.UInt32)">
            <summary>
            This service allows a client to read the status of server-resident Diagnostic Trouble Code (DTC) information.
            The sub-function reportSeverityInformationOfDTC (PUDS_SVC_PARAM_RDTCI_RSIODTC) is implicit.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="dtc_mask">a unique identification number for a specific diagnostic trouble code</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcReadDTCInformationNoParam_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_rdtci)">
            <summary>
            This service allows a client to read the status of server-resident Diagnostic Trouble Code _2013(DTC) information.
            Only reportSupportedDTC, reportFirstTestFailedDTC, reportFirstConfirmedDTC, reportMostRecentTestFailedDTC,
            reportMostRecentConfirmedDTC, reportDTCFaultDetectionCounter, reportDTCWithPermanentStatus,
            and reportDTCSnapshotIdentification Sub-functions are allowed.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="PUDS_SVC_PARAM_RDTCI_Type">Subfunction parameter: ReadDTCInformation type, use one of the following:
            PUDS_SVC_PARAM_RDTCI_RFTFDTC, PUDS_SVC_PARAM_RDTCI_RFCDTC,
            PUDS_SVC_PARAM_RDTCI_RMRTFDTC, PUDS_SVC_PARAM_RDTCI_RMRCDTC,
            PUDS_SVC_PARAM_RDTCI_RSUPDTC, PUDS_SVC_PARAM_RDTCI_RDTCWPS,
            PUDS_SVC_PARAM_RDTCI_RDTCSSI, PUDS_SVC_PARAM_RDTCI_RDTCFDC</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcReadDTCInformationRDTCEDBR_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte)">
            <summary>
            This service allows a client to read the status of server-resident Diagnostic Trouble Code (DTC) information.
            The sub-function reportDTCExtDataRecordByRecordNumber (PUDS_SVC_PARAM_RDTCI_RDTCEDBR) is implicit.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="dtc_extended_data_record_number">DTC extended data record number</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcReadDTCInformationRUDMDTCBSM_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte,System.Byte)">
            <summary>
            This service allows a client to read the status of server-resident Diagnostic Trouble Code (DTC) information.
            The sub-function reportUserDefMemoryDTCByStatusMask (PUDS_SVC_PARAM_RDTCI_RUDMDTCBSM) is implicit.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="dtc_status_mask">a mask of eight (8) DTC status bits</param>
            <param name="memory_selection">Memory selection</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcReadDTCInformationRUDMDTCSSBDTC_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.UInt32,System.Byte,System.Byte)">
            <summary>
            This service allows a client to read the status of server-resident Diagnostic Trouble Code (DTC) information.
            The sub-function reportUserDefMemoryDTCSnapshotRecordByDTCNumber (PUDS_SVC_PARAM_RDTCI_RUDMDTCSSBDTC) is implicit.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="dtc_mask">a unique identification number (three byte value) for a specific diagnostic trouble code</param>
            <param name="user_def_dtc_snapshot_record_number">User DTC snapshot record number</param>
            <param name="memory_selection">Memory selection</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcReadDTCInformationRUDMDTCEDRBDN_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.UInt32,System.Byte,System.Byte)">
            <summary>
            This service allows a client to read the status of server-resident Diagnostic Trouble Code (DTC) information.
            The sub-function reportUserDefMemoryDTCExtDataRecordByDTCNumber (PUDS_SVC_PARAM_RDTCI_RUDMDTCEDRBDN) is implicit.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="dtc_mask">a unique identification number (three byte value) for a specific diagnostic trouble code</param>
            <param name="dtc_extended_data_record_number">DTC extened data record number</param>
            <param name="memory_selection">Memory selection</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcReadDTCInformationRDTCEDI_2020(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte)">
            <summary>
            ISO_14229-1 2020
            This service allows a client to read the status of server-resident Diagnostic Trouble Code (DTC) information.
            The sub-function reportSupportedDTCExtDataRecord (PUDS_SVC_PARAM_RDTCI_RDTCEDI) is implicit.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="dtc_extended_data_record_number">DTC extended data record number</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcReadDTCInformationRWWHOBDDTCBMR_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte,System.Byte,System.Byte)">
            <summary>
            This service allows a client to read the status of server-resident Diagnostic Trouble Code (DTC) information.
            The sub-function reportWWHOBDDTCByMaskRecord (PUDS_SVC_PARAM_RDTCI_RWWHOBDDTCBMR) is implicit.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="functional_group_identifier">Functional group identifier</param>
            <param name="dtc_status_mask">a mask of eight (8) DTC status bits</param>
            <param name="dtc_severity_mask">a mask of eight (8) DTC severity bits (see PUDS_SVC_PARAM_RDTCI_DTCSVM_xxx)</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcReadDTCInformationRWWHOBDDTCWPS_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte)">
            <summary>
            This service allows a client to read the status of server-resident Diagnostic Trouble Code (DTC) information.
            The sub-function reportWWHOBDDTCWithPermanentStatus (PUDS_SVC_PARAM_RDTCI_RWWHOBDDTCWPS ) is implicit.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="functional_group_identifier">Functional group identifier</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcReadDTCInformationRDTCBRGI_2020(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte,System.Byte)">
            <summary>
            ISO_14229-1 2020
            This service allows a client to read the status of server-resident Diagnostic Trouble Code (DTC) information.
            The sub-function reportDTCInformationByDTCReadinessGroupIdentifier (PUDS_SVC_PARAM_RDTCI_RDTCBRGI ) is implicit.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="functional_group_identifier">Functional group identifier</param>
            <param name="dtc_readiness_group_identifier">DTC readiness group identifier</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_iocbi.PUDS_SVC_PARAM_IOCBI_RCTECU">
            <summary>
            inputOutputControlParameter: returnControlToECU (0 controlState bytes in request)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_iocbi.PUDS_SVC_PARAM_IOCBI_RTD">
            <summary>
            inputOutputControlParameter: resetToDefault (0 controlState bytes in request)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_iocbi.PUDS_SVC_PARAM_IOCBI_FCS">
            <summary>
            inputOutputControlParameter: freezeCurrentState (0 controlState bytes in request)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_iocbi.PUDS_SVC_PARAM_IOCBI_STA">
            <summary>
            inputOutputControlParameter: shortTermAdjustment
            </summary>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcInputOutputControlByIdentifier_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_di,System.Byte[],System.UInt32,System.Byte[],System.UInt32)">
            <summary>
            The InputOutputControlByIdentifier service is used by the client to substitute a value for an input signal,
            internal server function and/or control an output (actuator) of an electronic system.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="data_identifier">a two-byte Data Identifier (see PUDS_SVC_PARAM_DI_xxx)</param>
            <param name="control_option_record">First byte can be used as either an inputOutputControlParameter
            that describes how the server shall control its inputs or outputs (see PUDS_SVC_PARAM_IOCBI_xxx),
            or as an additional controlState byte</param>
            <param name="control_option_record_size">Size in bytes of the control_option_record buffer</param>
            <param name="control_enable_mask_record">The control_enable_mask_record shall only be supported when
            the inputOutputControlParameter is used (see control_option_record) and the dataIdentifier to be controlled consists
            of more than one parameter (i.e. the dataIdentifier is bit-mapped or packeted by definition).
            There shall be one bit in the control_enable_mask_record corresponding to each individual parameter
            defined within the dataIdentifier.</param>
            <param name="control_enable_mask_record_size">Size in bytes of the control_enable_mask_record buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcInputOutputControlByIdentifier_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_di,System.Byte[],System.UInt32)">
            <summary>
            The InputOutputControlByIdentifier service is used by the client to substitute a value for an input signal,
            internal server function and/or control an output (actuator) of an electronic system.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="data_identifier">a two-byte Data Identifier (see PUDS_SVC_PARAM_DI_xxx)</param>
            <param name="control_option_record">First byte can be used as either an inputOutputControlParameter
            that describes how the server shall control its inputs or outputs (see PUDS_SVC_PARAM_IOCBI_xxx),
            or as an additional controlState byte</param>
            <param name="control_option_record_size">Size in bytes of the control_option_record buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rc.PUDS_SVC_PARAM_RC_STR">
            <summary>
            Start Routine
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rc.PUDS_SVC_PARAM_RC_STPR">
            <summary>
            Stop Routine
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rc.PUDS_SVC_PARAM_RC_RRR">
            <summary>
            Request Routine Results
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rc_rid.PUDS_SVC_PARAM_RC_RID_DLRI_">
            <summary>
            routineIdentifier: DeployLoopRoutineID
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rc_rid.PUDS_SVC_PARAM_RC_RID_EM_">
            <summary>
            routineIdentifier: eraseMemory
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rc_rid.PUDS_SVC_PARAM_RC_RID_CPD_">
            <summary>
            routineIdentifier: checkProgrammingDependencies
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rc_rid.PUDS_SVC_PARAM_RC_RID_EMMDTC_">
            <summary>
            routineIdentifier: eraseMirrorMemoryDTCs
            </summary>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcRoutineControl_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_rc,Peak.Can.Uds.UDSApi.uds_svc_param_rc_rid,System.Byte[],System.UInt32)">
            <summary>
            The RoutineControl service is used by the client to start/stop a routine,
            and request routine results.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="routine_control_type">Subfunction parameter: RoutineControl type (see PUDS_SVC_PARAM_RC_xxx)</param>
            <param name="routine_identifier">Server Local Routine Identifier (see PUDS_SVC_PARAM_RC_RID_xxx)</param>
            <param name="routine_control_option_record">buffer containing the Routine Control Options (only with start and stop routine sub-functions)</param>
            <param name="routine_control_option_record_size">Size in bytes of the buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcRoutineControl_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_rc,Peak.Can.Uds.UDSApi.uds_svc_param_rc_rid)">
            <summary>
            The RoutineControl service is used by the client to start/stop a routine,
            and request routine results.
            Use only with not start nor stop routine sub-functions.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="routine_control_type">Subfunction parameter: RoutineControl type (see PUDS_SVC_PARAM_RC_xxx)</param>
            <param name="routine_identifier">Server Local Routine Identifier (see PUDS_SVC_PARAM_RC_RID_xxx)</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcRequestDownload_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte,System.Byte,System.Byte[],System.Byte,System.Byte[],System.Byte)">
            <summary>
            The requestDownload service is used by the client to initiate a data transfer
            from the client to the server (download).
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="compression_method">A nibble-value that specifies the "compressionMethod",
            The value 0x0 specifies that no compressionMethod is used.</param>
            <param name="encrypting_method">A nibble-value that specifies the "encryptingMethod",
            The value 0x0 specifies that no encryptingMethod is used.</param>
            <param name="memory_address_buffer">starting address of server memory to which data is to be written</param>
            <param name="memory_address_size">Size in bytes of the memory_address_buffer buffer (max.: 0xF)</param>
            <param name="memory_size_buffer">used by the server to compare the uncompressed memory size with
            the total amount of data transferred during the TransferData service</param>
            <param name="memory_size_size">Size in bytes of the memory_size_buffer buffer (max.: 0xF)</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcRequestUpload_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte,System.Byte,System.Byte[],System.Byte,System.Byte[],System.Byte)">
            <summary>
            The requestUpload service is used by the client to initiate a data transfer
            from the server to the client (upload).
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="compression_method">A nibble-value that specifies the "compressionMethod",
            The value 0x0 specifies that no compressionMethod is used.</param>
            <param name="encrypting_method">A nibble-value that specifies the "encryptingMethod",
            The value 0x0 specifies that no encryptingMethod is used.</param>
            <param name="memory_address_buffer">starting address of server memory from which data is to be retrieved</param>
            <param name="memory_address_size">Size in bytes of the memory_address_buffer buffer (max.: 0xF)</param>
            <param name="memory_size_buffer">used by the server to compare the uncompressed memory size with
            the total amount of data transferred during the TransferData service</param>
            <param name="memory_size_size">Size in bytes of the memory_size_buffer buffer (max.: 0xF)</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcTransferData_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte,System.Byte[],System.UInt32)">
            <summary>
            The TransferData service is used by the client to transfer data either from the client
            to the server (download) or from the server to the client (upload).
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="block_sequence_counter">The blockSequenceCounter parameter value starts at 01 hex
            with the first TransferData request that follows the RequestDownload (34 hex)
            or RequestUpload (35 hex) service. Its value is incremented by 1 for each subsequent
            TransferData request. At the value of FF hex, the blockSequenceCounter rolls over
            and starts at 00 hex with the next TransferData request message.</param>
            <param name="transfer_request_parameter_record">buffer containing the required transfer parameters</param>
            <param name="transfer_request_parameter_record_size">Size in bytes of the buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcTransferData_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte)">
            <summary>
            The TransferData service is used by the client to transfer data either from the client
            to the server (download) or from the server to the client (upload).
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="block_sequence_counter">The blockSequenceCounter parameter value starts at 01 hex
            with the first TransferData request that follows the RequestDownload (34 hex)
            or RequestUpload (35 hex) service. Its value is incremented by 1 for each subsequent
            TransferData request. At the value of FF hex, the blockSequenceCounter rolls over
            and starts at 00 hex with the next TransferData request message.</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcRequestTransferExit_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte[],System.UInt32)">
            <summary>
            The RequestTransferExit service is used by the client to terminate a data
            transfer between client and server (upload or download).
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="transfer_request_parameter_record">buffer containing the required transfer parameters</param>
            <param name="transfer_request_parameter_record_size">Size in bytes of the buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcRequestTransferExit_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@)">
            <summary>
            The RequestTransferExit service is used by the client to terminate a data
            transfer between client and server (upload or download).
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_atp.PUDS_SVC_PARAM_ATP_RETPS">
            <summary>
            Read Extended Timing Parameter Set
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_atp.PUDS_SVC_PARAM_ATP_STPTDV">
            <summary>
            Set Timing Parameters To Default Values
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_atp.PUDS_SVC_PARAM_ATP_RCATP">
            <summary>
            Read Currently Active Timing Parameters
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_atp.PUDS_SVC_PARAM_ATP_STPTGV">
            <summary>
            Set Timing Parameters To Given Values
            </summary>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcAccessTimingParameter_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_atp,System.Byte[],System.UInt32)">
            <summary>
             AccessTimingParameter service.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="access_type">Access type, see PUDS_SVC_PARAM_ATP_* values</param>
            <param name="request_record">Timing parameter request record</param>
            <param name="request_record_size">Size in byte of the request record</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rft_moop.PUDS_SVC_PARAM_RFT_MOOP_ADDFILE">
            <summary>
            Add File
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rft_moop.PUDS_SVC_PARAM_RFT_MOOP_DELFILE">
            <summary>
            Delete File
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rft_moop.PUDS_SVC_PARAM_RFT_MOOP_REPLFILE">
            <summary>
            Replace File
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rft_moop.PUDS_SVC_PARAM_RFT_MOOP_RDFILE">
            <summary>
            Read File
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rft_moop.PUDS_SVC_PARAM_RFT_MOOP_RDDIR">
            <summary>
            Read Dir
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_param_rft_moop.PUDS_SVC_PARAM_RFT_MOOP_RSFILE">
            <summary>
            Resume File (ISO-14229-1:2020 Annex G p.447 table G.1)
            </summary>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcRequestFileTransfer_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_rft_moop,System.UInt16,System.Byte[],System.Byte,System.Byte,System.Byte,System.Byte[],System.Byte[])">
            <summary>
             RequestFileTransfer service.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="mode_of_operation">Mode of operation (add, delete, replace, read), see PUDS_SVC_PARAM_RFT_MOOP_* values</param>
            <param name="file_path_and_name_size">Size in bytes of file_path_and_name buffer</param>
            <param name="file_path_and_name">File path and name string</param>
            <param name="compression_method">A nibble-value that specifies the "compressionMethod", the value 0x0 specifies that no compressionMethod is used.</param>
            <param name="encrypting_method">A nibble-value that specifies the "encryptingMethod", the value 0x0 specifies that no encryptingMethod is used.</param>
            <param name="file_size_parameter_size">Size in byte of file_size_uncompressed and file_size_compressed parameters</param>
            <param name="file_size_uncompressed">Uncompressed file size</param>
            <param name="file_size_compressed">Compressed file size</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcRequestFileTransfer_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_rft_moop,System.UInt16,System.String,System.Byte,System.Byte,System.Byte,System.Byte[],System.Byte[])">
            <summary>
             RequestFileTransfer service.
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="mode_of_operation">Mode of operation (add, delete, replace, read), see PUDS_SVC_PARAM_RFT_MOOP_* values</param>
            <param name="file_path_and_name_size">Size in bytes of file_path_and_name buffer</param>
            <param name="file_path_and_name">File path and name string</param>
            <param name="compression_method">A nibble-value that specifies the "compressionMethod", the value 0x0 specifies that no compressionMethod is used.</param>
            <param name="encrypting_method">A nibble-value that specifies the "encryptingMethod", the value 0x0 specifies that no encryptingMethod is used.</param>
            <param name="file_size_parameter_size">Size in byte of file_size_uncompressed and file_size_compressed parameters</param>
            <param name="file_size_uncompressed">Uncompressed file size</param>
            <param name="file_size_compressed">Compressed file size</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcRequestFileTransfer_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_rft_moop,System.UInt16,System.Byte[],System.Byte,System.Byte)">
            <summary>
             RequestFileTransfer service.
             Use with mode of operation which does not require file compressed or uncompressed sizes
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="mode_of_operation">Mode of operation (add, delete, replace, read), see PUDS_SVC_PARAM_RFT_MOOP_* values</param>
            <param name="file_path_and_name_size">Size in bytes of file_path_and_name buffer</param>
            <param name="file_path_and_name">File path and name string</param>
            <param name="compression_method">A nibble-value that specifies the "compressionMethod", the value 0x0 specifies that no compressionMethod is used.</param>
            <param name="encrypting_method">A nibble-value that specifies the "encryptingMethod", the value 0x0 specifies that no encryptingMethod is used.</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcRequestFileTransfer_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_rft_moop,System.UInt16,System.String,System.Byte,System.Byte)">
            <summary>
             RequestFileTransfer service.
             Use with mode of operation which does not require file compressed or uncompressed sizes
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="mode_of_operation">Mode of operation (add, delete, replace, read), see PUDS_SVC_PARAM_RFT_MOOP_* values</param>
            <param name="file_path_and_name_size">Size in bytes of file_path_and_name buffer</param>
            <param name="file_path_and_name">File path and name string</param>
            <param name="compression_method">A nibble-value that specifies the "compressionMethod", the value 0x0 specifies that no compressionMethod is used.</param>
            <param name="encrypting_method">A nibble-value that specifies the "encryptingMethod", the value 0x0 specifies that no encryptingMethod is used.</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcRequestFileTransfer_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_rft_moop,System.UInt16,System.Byte[])">
            <summary>
             RequestFileTransfer service.
             Use with mode of operation which does not require file compressed or uncompressed sizes, nor compression or encrypting methods
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="mode_of_operation">Mode of operation (add, delete, replace, read), see PUDS_SVC_PARAM_RFT_MOOP_* values</param>
            <param name="file_path_and_name_size">Size in bytes of file_path_and_name buffer</param>
            <param name="file_path_and_name">File path and name string</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcRequestFileTransfer_2013(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,Peak.Can.Uds.UDSApi.uds_svc_param_rft_moop,System.UInt16,System.String)">
            <summary>
             RequestFileTransfer service.
             Use with mode of operation which does not require file compressed or uncompressed sizes, nor compression or encrypting methods
            </summary>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration (PUDS_MSGTYPE_FLAG_NO_POSITIVE_RESPONSE is ignored)</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="mode_of_operation">Mode of operation (add, delete, replace, read), see PUDS_SVC_PARAM_RFT_MOOP_* values</param>
            <param name="file_path_and_name_size">Size in bytes of file_path_and_name buffer</param>
            <param name="file_path_and_name">File path and name string</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_authentication_subfunction.PUDS_SVC_PARAM_AT_DA">
            <summary>
            DeAuthenticate
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_authentication_subfunction.PUDS_SVC_PARAM_AT_VCU">
            <summary>
            VerifyCertificateUnidirectional
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_authentication_subfunction.PUDS_SVC_PARAM_AT_VCB">
            <summary>
            VerifyCertificateBidirectional
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_authentication_subfunction.PUDS_SVC_PARAM_AT_POWN">
            <summary>
            ProofOfOwnership
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_authentication_subfunction.PUDS_SVC_PARAM_AT_TC">
            <summary>
            TransmitCertificate
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_authentication_subfunction.PUDS_SVC_PARAM_AT_RCFA">
            <summary>
            RequestChallengeForAuthentication
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_authentication_subfunction.PUDS_SVC_PARAM_AT_VPOWNU">
            <summary>
            VerifyProofOfOwnershipUnidirectional
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_authentication_subfunction.PUDS_SVC_PARAM_AT_VPOWNB">
            <summary>
            VerifyProofOfOwnershipBidirectional
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_authentication_subfunction.PUDS_SVC_PARAM_AT_AC">
            <summary>
            AuthenticationConfiguration
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_authentication_return_parameter.PUDS_SVC_PARAM_AT_RV_RA">
            <summary>
            Request Accepted
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_authentication_return_parameter.PUDS_SVC_PARAM_AT_RV_GR">
            <summary>
            General Reject
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_authentication_return_parameter.PUDS_SVC_PARAM_AT_RV_ACAPCE">
            <summary>
            Authentication Configuration APCE
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_authentication_return_parameter.PUDS_SVC_PARAM_AT_RV_ACACRAC">
            <summary>
            Authentication Configuration ACR with Asymmetric Cryptography
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_authentication_return_parameter.PUDS_SVC_PARAM_AT_RV_ACACRSC">
            <summary>
            Authentication Configuration ACR with Symmetric Cryptography
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_authentication_return_parameter.PUDS_SVC_PARAM_AT_RV_DAS">
            <summary>
            DeAuthentication Successful
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_authentication_return_parameter.PUDS_SVC_PARAM_AT_RV_CVOVN">
            <summary>
            Certificate Verified, Ownership Verification Necessary
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_authentication_return_parameter.PUDS_SVC_PARAM_AT_RV_OVAC">
            <summary>
            Ownership Verified, Authentication Complete
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.UDSApi.uds_svc_authentication_return_parameter.PUDS_SVC_PARAM_AT_RV_CV">
            <summary>
            Certificate Verified
            </summary>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcAuthenticationDA_2020(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@)">
            <summary>
             Sends Authentication service request with deAuthenticate subfunction.
            </summary>
            <remarks>
             API provides uds_svc_authentication_subfunction and uds_svc_authentication_return_parameter
             enumerations to help user to decode Authentication service responses.
            </remarks>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcAuthenticationVCU_2020(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte,System.Byte[],System.UInt16,System.Byte[],System.UInt16)">
            <summary>
             Sends Authentication service request with verifyCertificateUnidirectional subfunction.
            </summary>
            <remarks>
             API provides uds_svc_authentication_subfunction and uds_svc_authentication_return_parameter
             enumerations to help user to decode Authentication service responses.
            </remarks>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="communication_configuration">Configuration information about communication</param>
            <param name="certificate_client">Buffer containing the certificate of the client</param>
            <param name="certificate_client_size">Size in bytes of the certificate buffer</param>
            <param name="challenge_client">Buffer containing the challenge of the client</param>
            <param name="challenge_client_size">Size in bytes of the challenge buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcAuthenticationVCU_2020(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte,System.Byte[],System.UInt16)">
            <summary>
             Sends Authentication service request with verifyCertificateUnidirectional subfunction,
             without challenge buffer.
            </summary>
            <remarks>
             API provides uds_svc_authentication_subfunction and uds_svc_authentication_return_parameter
             enumerations to help user to decode Authentication service responses.
            </remarks>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="communication_configuration">Configuration information about communication</param>
            <param name="certificate_client">Buffer containing the certificate of the client</param>
            <param name="certificate_client_size">Size in bytes of the certificate buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcAuthenticationVCB_2020(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte,System.Byte[],System.UInt16,System.Byte[],System.UInt16)">
            <summary>
             Sends Authentication service request with verifyCertificateBidirectional subfunction.
            </summary>
            <remarks>
             API provides uds_svc_authentication_subfunction and uds_svc_authentication_return_parameter
             enumerations to help user to decode Authentication service responses.
            </remarks>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="communication_configuration">Configuration information about communication</param>
            <param name="certificate_client">Buffer containing the certificate of the client</param>
            <param name="certificate_client_size">Size in bytes of the certificate buffer</param>
            <param name="challenge_client">Buffer containing the challenge of the client</param>
            <param name="challenge_client_size">Size in bytes of the challenge buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcAuthenticationPOWN_2020(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte[],System.UInt16,System.Byte[],System.UInt16)">
            <summary>
             Sends Authentication service request with proofOfOwnership subfunction.
            </summary>
            <remarks>
             API provides uds_svc_authentication_subfunction and uds_svc_authentication_return_parameter
             enumerations to help user to decode Authentication service responses.
            </remarks>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="proof_of_ownership_client">Buffer containing the proof of ownership of the client</param>
            <param name="proof_of_ownership_client_size">Size in bytes of the proof of ownership buffer</param>
            <param name="ephemeral_public_key_client">Buffer containing the ephemeral public key of the client</param>
            <param name="ephemeral_public_key_client_size">Size in bytes of the ephemeral public key buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcAuthenticationPOWN_2020(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte[],System.UInt16)">
            <summary>
             Sends Authentication service request with proofOfOwnership subfunction,
             without ephemeral public key.
            </summary>
            <remarks>
             API provides uds_svc_authentication_subfunction and uds_svc_authentication_return_parameter
             enumerations to help user to decode Authentication service responses.
            </remarks>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="proof_of_ownership_client">Buffer containing the proof of ownership of the client</param>
            <param name="proof_of_ownership_client_size">Size in bytes of the proof of ownership buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcAuthenticationRCFA_2020(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte,System.Byte[])">
            <summary>
             Sends Authentication service request with requestChallengeForAuthentication subfunction.
            </summary>
            <remarks>
             API provides uds_svc_authentication_subfunction and uds_svc_authentication_return_parameter
             enumerations to help user to decode Authentication service responses.
            </remarks>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="communication_configuration">Configuration information about communication</param>
            <param name="algorithm_indicator">Buffer of 16 bytes containing the algorithm indicator</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcAuthenticationVPOWNU_2020(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte[],System.Byte[],System.UInt16,System.Byte[],System.UInt16,System.Byte[],System.UInt16)">
            <summary>
             Sends Authentication service request with verifyProofOfOwnershipUnidirectional subfunction.
            </summary>
            <remarks>
             API provides uds_svc_authentication_subfunction and uds_svc_authentication_return_parameter
             enumerations to help user to decode Authentication service responses.
            </remarks>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="algorithm_indicator">Buffer of 16 bytes containing the algorithm indicator</param>
            <param name="proof_of_ownership_client">Buffer containing the proof of ownership of the client</param>
            <param name="proof_of_ownership_client_size">Size in bytes of the proof of ownership buffer</param>
            <param name="challenge_client">Buffer containing the challenge of the client</param>
            <param name="challenge_client_size">Size in bytes of the challenge buffer</param>
            <param name="additional_parameter">Buffer containing additional parameters</param>
            <param name="additional_parameter_size">Size in bytes of the additional parameter buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcAuthenticationVPOWNU_2020(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte[],System.Byte[],System.UInt16,System.Byte[],System.UInt16)">
            <summary>
             Sends Authentication service request with verifyProofOfOwnershipUnidirectional subfunction,
             without additional parameter
            </summary>
            <remarks>
             API provides uds_svc_authentication_subfunction and uds_svc_authentication_return_parameter
             enumerations to help user to decode Authentication service responses.
            </remarks>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="algorithm_indicator">Buffer of 16 bytes containing the algorithm indicator</param>
            <param name="proof_of_ownership_client">Buffer containing the proof of ownership of the client</param>
            <param name="proof_of_ownership_client_size">Size in bytes of the proof of ownership buffer</param>
            <param name="challenge_client">Buffer containing the challenge of the client</param>
            <param name="challenge_client_size">Size in bytes of the challenge buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcAuthenticationVPOWNU_2020(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte[],System.Byte[],System.UInt16)">
            <summary>
             Sends Authentication service request with verifyProofOfOwnershipUnidirectional subfunction,
             without additional parameter, without challenge buffer
            </summary>
            <remarks>
             API provides uds_svc_authentication_subfunction and uds_svc_authentication_return_parameter
             enumerations to help user to decode Authentication service responses.
            </remarks>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="algorithm_indicator">Buffer of 16 bytes containing the algorithm indicator</param>
            <param name="proof_of_ownership_client">Buffer containing the proof of ownership of the client</param>
            <param name="proof_of_ownership_client_size">Size in bytes of the proof of ownership buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcAuthenticationVPOWNB_2020(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte[],System.Byte[],System.UInt16,System.Byte[],System.UInt16,System.Byte[],System.UInt16)">
            <summary>
             Sends Authentication service request with verifyProofOfOwnershipBidirectional subfunction.
            </summary>
            <remarks>
             API provides uds_svc_authentication_subfunction and uds_svc_authentication_return_parameter
             enumerations to help user to decode Authentication service responses.
            </remarks>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="algorithm_indicator">Buffer of 16 bytes containing the algorithm indicator</param>
            <param name="proof_of_ownership_client">Buffer containing the proof of ownership of the client</param>
            <param name="proof_of_ownership_client_size">Size in bytes of the proof of ownership buffer</param>
            <param name="challenge_client">Buffer containing the challenge of the client</param>
            <param name="challenge_client_size">Size in bytes of the challenge buffer</param>
            <param name="additional_parameter">Buffer containing additional parameters</param>
            <param name="additional_parameter_size">Size in bytes of the additional parameter buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcAuthenticationVPOWNB_2020(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@,System.Byte[],System.Byte[],System.UInt16,System.Byte[],System.UInt16)">
            <summary>
             Sends Authentication service request with verifyProofOfOwnershipBidirectional subfunction,
             without additional parameters
            </summary>
            <remarks>
             API provides uds_svc_authentication_subfunction and uds_svc_authentication_return_parameter
             enumerations to help user to decode Authentication service responses.
            </remarks>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <param name="algorithm_indicator">Buffer of 16 bytes containing the algorithm indicator</param>
            <param name="proof_of_ownership_client">Buffer containing the proof of ownership of the client</param>
            <param name="proof_of_ownership_client_size">Size in bytes of the proof of ownership buffer</param>
            <param name="challenge_client">Buffer containing the challenge of the client</param>
            <param name="challenge_client_size">Size in bytes of the challenge buffer</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SvcAuthenticationAC_2020(Peak.Can.IsoTp.cantp_handle,Peak.Can.Uds.uds_msgconfig,Peak.Can.Uds.uds_msg@)">
            <summary>
             Sends Authentication service request with authenticationConfiguration subfunction.
            </summary>
            <remarks>
             API provides uds_svc_authentication_subfunction and uds_svc_authentication_return_parameter
             enumerations to help user to decode Authentication service responses.
            </remarks>
            <param name="channel">A PCANTP channel handle representing a PUDS channel</param>
            <param name="request_config">Request configuration</param>
            <param name="out_msg_request">(out) request message created and sent by the function</param>
            <returns>A uds_status code. PUDS_STATUS_OK is returned on success</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.GetDataServiceId_2013(Peak.Can.Uds.uds_msg@,System.Byte@)">
            <summary>
            Get PUDS message data service id, in safe mode
            </summary>
            <param name="msg">PUDS message</param>
            <param name="val">service id value</param>
            <returns>true if ok, false if not ok</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SetDataServiceId_2013(Peak.Can.Uds.uds_msg@,System.Byte)">
            <summary>
            Set PUDS message data service id, in safe mode
            </summary>
            <param name="msg">PUDS message</param>
            <param name="val">service id value</param>
            <returns>true if ok, false if not ok</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.GetDataNrc_2013(Peak.Can.Uds.uds_msg@,System.Byte@)">
            <summary>
            Get PUDS message data negative response code (nrc), in safe mode
            </summary>
            <param name="msg">PUDS message</param>
            <param name="val">negative response code value</param>
            <returns>true if ok, false if not ok (no nrc available, which means positive response)</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SetDataNrc_2013(Peak.Can.Uds.uds_msg@,System.Byte)">
            <summary>
            Set PUDS message data negative response code (nrc), in safe mode
            </summary>
            <param name="msg">PUDS message</param>
            <param name="val">negative response code value</param>
            <returns>true if ok, false if not ok</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.GetDataParameter_2013(Peak.Can.Uds.uds_msg@,System.Int32,System.Byte@)">
            <summary>
            Get PUDS message data parameter, in safe mode
            </summary>
            <param name="msg">PUDS message</param>
            <param name="nump">parameter number (from 0)</param>
            <param name="val">parameter value</param>
            <returns>true if ok, false if not ok</returns>
        </member>
        <member name="M:Peak.Can.Uds.UDSApi.SetDataParameter_2013(Peak.Can.Uds.uds_msg@,System.Int32,System.Byte)">
            <summary>
            Set PUDS message data parameter, in safe mode
            </summary>
            <param name="msg">PUDS message</param>
            <param name="nump">parameter number (from 0)</param>
            <param name="val">parameter value</param>
            <returns>true if ok, false if not ok</returns>
        </member>
        <member name="T:Peak.Can.Uds.uds_netaddrinfo">
            <summary>
            Represents a UDS Network Addressing Information
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_netaddrinfo.protocol">
            <summary>
            communication protocol
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_netaddrinfo.target_type">
            <summary>
            ISO-TP target type
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_netaddrinfo.source_addr">
            <summary>
            source address
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_netaddrinfo.target_addr">
            <summary>
            target address
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_netaddrinfo.extension_addr">
            <summary>
            extension address
            </summary>
        </member>
        <member name="T:Peak.Can.Uds.uds_sessioninfo">
            <summary>
            Represents the diagnostic session's information of a server
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_sessioninfo.nai">
            <summary>
            Network address information
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_sessioninfo.can_msg_type">
            <summary>
            Types and flags of the CAN/CAN-FD frames
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_sessioninfo.session_type">
            <summary>
            Activated Diagnostic Session (see PUDS_SVC_PARAM_DSC_xxx values)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_sessioninfo.timeout_p2can_server_max">
            <summary>
            Default P2Can_Server_Max timing for the activated session (resolution: 1ms)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_sessioninfo.timeout_enhanced_p2can_server_max">
            <summary>
            Enhanced P2Can_Server_Max timing for the activated session (resolution: 10ms)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_sessioninfo.s3_client_ms">
            <summary>
            Time between 2 TesterPresents
            </summary>
        </member>
        <member name="T:Peak.Can.Uds.uds_msgconfig">
            <summary>
            Represents the configuration of a PUDS message
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgconfig.type">
            <summary>
            structure specific flags
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgconfig.nai">
            <summary>
            Network Addressing Information
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgconfig.can_id">
            <summary>
            (optional) CAN ID (for configuration use either nai or m_can_id)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgconfig.can_msgtype">
            <summary>
            optional flags for the CAN layer (29 bits CAN-ID, FD, BRS)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgconfig.can_tx_dlc">
            <summary>
            Default CAN DLC value to use with segmented messages
            </summary>
        </member>
        <member name="T:Peak.Can.Uds.uds_mapping">
            <summary>
            Represents a mapping between an UDS Network Addressing Information and a CAN ID.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_mapping.uid">
            <summary>
            Mapping's unique ID
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_mapping.can_id">
            <summary>
            CAN ID mapped to the Network Address Information
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_mapping.can_id_flow_ctrl">
            <summary>
            CAN ID used for the flow control frame (formerly 'can_id_resp')
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_mapping.can_msgtype">
            <summary>
            CAN frame msgtype (only PCANTP_CAN_MSGTYPE_STANDARD or PCANTP_CAN_MSGTYPE_EXTENDED is mandatory)
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_mapping.can_tx_dlc">
            <summary>
            Default CAN DLC value to use with segmented messages
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_mapping.nai">
            <summary>
            Network Addressing Information
            </summary>
        </member>
        <member name="T:Peak.Can.Uds.uds_msgaccess">
            <summary>
            Provides accessors to the corresponding data in the cantp_msg
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgaccess.service_id">
            <summary>
            Pointer to the Service ID in message's data.
            Use it in safe mode with Marshal.ReadByte, Marshal.WriteByte or unsafe mode with IntPtr.toPointer.
            See special C# functions
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgaccess.param">
            <summary>
            Pointer to the first parameter in message's data.
            Use it in safe mode with Marshal.ReadByte, Marshal.WriteByte or unsafe mode with IntPtr.toPointer.
            See special C# functions
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msgaccess.nrc">
            <summary>
            Pointer to the Negative Response Code (see uds_nrc enumeration) in message's data (NULL on positive response).
            Use it in safe mode with Marshal.ReadByte, Marshal.WriteByte or unsafe mode with IntPtr.toPointer.
            See special C# functions
            </summary>
        </member>
        <member name="T:Peak.Can.Uds.uds_msg">
            <summary>
            Represents the content of a UDS message.
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msg.type">
            <summary>
            structure specific flags
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msg.links">
            <summary>
            quick accessors to the cantp_msg data
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_msg.msg">
            <summary>
            the PCANTP message encapsulating the UDS data
            </summary>
        </member>
        <member name="T:Peak.Can.Uds.uds_service">
            <summary>
            PUDS Service ids defined in ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_DiagnosticSessionControl">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_ECUReset">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_SecurityAccess">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_CommunicationControl">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_TesterPresent">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_AccessTimingParameter">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_SecuredDataTransmission">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_ControlDTCSetting">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_ResponseOnEvent">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_LinkControl">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_ReadDataByIdentifier">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_ReadMemoryByAddress">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_ReadScalingDataByIdentifier">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_ReadDataByPeriodicIdentifier">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_DynamicallyDefineDataIdentifier">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_WriteDataByIdentifier">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_WriteMemoryByAddress">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_ClearDiagnosticInformation">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_ReadDTCInformation">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_InputOutputControlByIdentifier">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_RoutineControl">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_RequestDownload">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_RequestUpload">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_TransferData">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_RequestTransferExit">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_RequestFileTransfer">
            <summary>
            see ISO 14229-1:2013
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_SI_Authentication">
            <summary>
            see ISO 14229-1:2020
            </summary>
        </member>
        <member name="F:Peak.Can.Uds.uds_service.PUDS_SERVICE_NR_SI">
            <summary>
            negative response
            </summary>
        </member>
        <member name="T:Peak.Can.Basic.TPCANStatus">
            <summary>
            Represents a PCAN status/error code
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_OK">
            <summary>
            No error
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_XMTFULL">
            <summary>
            Transmit buffer in CAN controller is full
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_OVERRUN">
            <summary>
            CAN controller was read too late        
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_BUSLIGHT">
            <summary>
            Bus error: an error counter reached the 'light' limit
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_BUSHEAVY">
            <summary>
            Bus error: an error counter reached the 'heavy' limit
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_BUSWARNING">
            <summary>
            Bus error: an error counter reached the 'warning' limit
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_BUSPASSIVE">
            <summary>
            Bus error: the CAN controller is error passive
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_BUSOFF">
            <summary>
            Bus error: the CAN controller is in bus-off state
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_ANYBUSERR">
            <summary>
            Mask for all bus errors
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_QRCVEMPTY">
            <summary>
            Receive queue is empty
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_QOVERRUN">
            <summary>
            Receive queue was read too late
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_QXMTFULL">
            <summary>
            Transmit queue is full
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_REGTEST">
            <summary>
            Test of the CAN controller hardware registers failed (no hardware found)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_NODRIVER">
            <summary>
            Driver not loaded
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_HWINUSE">
            <summary>
            Hardware already in use by a Net
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_NETINUSE">
            <summary>
            A Client is already connected to the Net
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_ILLHW">
            <summary>
            Hardware handle is invalid
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_ILLNET">
            <summary>
            Net handle is invalid
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_ILLCLIENT">
            <summary>
            Client handle is invalid
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_ILLHANDLE">
            <summary>
            Mask for all handle errors
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_RESOURCE">
            <summary>
            Resource (FIFO, Client, timeout) cannot be created
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_ILLPARAMTYPE">
            <summary>
            Invalid parameter
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_ILLPARAMVAL">
            <summary>
            Invalid parameter value
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_UNKNOWN">
            <summary>
            Unknown error
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_ILLDATA">
            <summary>
            Invalid data, function, or action.
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_ILLMODE">
            <summary>
            Driver object state is wrong for the attempted operation
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_CAUTION">
            <summary>
            An operation was successfully carried out, however, irregularities were registered
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_INITIALIZE">
            <summary>
            Channel is not initialized
            <remarks>Value was changed from 0x40000 to 0x4000000</remarks>
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANStatus.PCAN_ERROR_ILLOPERATION">
            <summary>
            Invalid operation
            <remarks>Value was changed from 0x80000 to 0x8000000</remarks>
            </summary>
        </member>
        <member name="T:Peak.Can.Basic.TPCANDevice">
            <summary>
            Represents a PCAN device
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANDevice.PCAN_NONE">
            <summary>
            Undefined, unknown or not selected PCAN device value
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANDevice.PCAN_PEAKCAN">
            <summary>
            PCAN Non-PnP devices. NOT USED WITHIN PCAN-Basic API
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANDevice.PCAN_ISA">
            <summary>
            PCAN-ISA, PCAN-PC/104, and PCAN-PC/104-Plus
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANDevice.PCAN_DNG">
            <summary>
            PCAN-Dongle
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANDevice.PCAN_PCI">
            <summary>
            PCAN-PCI, PCAN-cPCI, PCAN-miniPCI, and PCAN-PCI Express
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANDevice.PCAN_USB">
            <summary>
            PCAN-USB and PCAN-USB Pro
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANDevice.PCAN_PCC">
            <summary>
            PCAN-PC Card
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANDevice.PCAN_VIRTUAL">
            <summary>
            PCAN Virtual hardware. NOT USED WITHIN PCAN-Basic API
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANDevice.PCAN_LAN">
            <summary>
            PCAN Gateway devices
            </summary>
        </member>
        <member name="T:Peak.Can.Basic.TPCANParameter">
            <summary>
            Represents a PCAN parameter to be read or set
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_DEVICE_ID">
            <summary>
            Device identifier parameter
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_DEVICE_NUMBER">
            <summary>
            DEPRECATED parameter. Use PCAN_DEVICE_ID instead
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_5VOLTS_POWER">
            <summary>
            5-Volt power parameter
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_RECEIVE_EVENT">
            <summary>
            PCAN receive event handler parameter
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_MESSAGE_FILTER">
            <summary>
            PCAN message filter parameter
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_API_VERSION">
            <summary>
            PCAN-Basic API version parameter
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_CHANNEL_VERSION">
            <summary>
            PCAN device channel version parameter
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_BUSOFF_AUTORESET">
            <summary>
            PCAN Reset-On-Busoff parameter
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_LISTEN_ONLY">
            <summary>
            PCAN Listen-Only parameter
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_LOG_LOCATION">
            <summary>
            Directory path for log files
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_LOG_STATUS">
            <summary>
            Debug-Log activation status
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_LOG_CONFIGURE">
            <summary>
            Configuration of the debugged information (LOG_FUNCTION_***)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_LOG_TEXT">
            <summary>
            Custom insertion of text into the log file
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_CHANNEL_CONDITION">
            <summary>
            Availability status of a PCAN-Channel
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_HARDWARE_NAME">
            <summary>
            PCAN hardware name parameter
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_RECEIVE_STATUS">
            <summary>
            Message reception status of a PCAN-Channel
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_CONTROLLER_NUMBER">
            <summary>
            CAN-Controller number of a PCAN-Channel
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_TRACE_LOCATION">
            <summary>
            Directory path for PCAN trace files
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_TRACE_STATUS">
            <summary>
            CAN tracing activation status
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_TRACE_SIZE">
            <summary>
            Configuration of the maximum file size of a CAN trace
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_TRACE_CONFIGURE">
            <summary>
            Configuration of the trace file storing mode (TRACE_FILE_***)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_CHANNEL_IDENTIFYING">
            <summary>
            Physical identification of a USB based PCAN-Channel by blinking its associated LED
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_CHANNEL_FEATURES">
            <summary>
            Capabilities of a PCAN device (FEATURE_***)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_BITRATE_ADAPTING">
            <summary>
            Using of an existing bit rate (PCAN-View connected to a channel)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_BITRATE_INFO">
            <summary>
            Configured bit rate as Btr0Btr1 value
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_BITRATE_INFO_FD">
            <summary>
            Configured bit rate as TPCANBitrateFD string
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_BUSSPEED_NOMINAL">
            <summary>
            Configured nominal CAN Bus speed as Bits per seconds
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_BUSSPEED_DATA">
            <summary>
            Configured CAN data speed as Bits per seconds
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_IP_ADDRESS">
            <summary>
            Remote address of a LAN channel as string in IPv4 format
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_LAN_SERVICE_STATUS">
            <summary>
            Status of the Virtual PCAN-Gateway Service 
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_ALLOW_STATUS_FRAMES">
            <summary>
            Status messages reception status within a PCAN-Channel
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_ALLOW_RTR_FRAMES">
            <summary>
            RTR messages reception status within a PCAN-Channel
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_ALLOW_ERROR_FRAMES">
            <summary>
            Error messages reception status within a PCAN-Channel
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_INTERFRAME_DELAY">
            <summary>
            Delay, in microseconds, between sending frames
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_ACCEPTANCE_FILTER_11BIT">
            <summary>
            Filter over code and mask patterns for 11-Bit messages
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_ACCEPTANCE_FILTER_29BIT">
            <summary>
            Filter over code and mask patterns for 29-Bit messages
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_IO_DIGITAL_CONFIGURATION">
            <summary>
            Output mode of 32 digital I/O pin of a PCAN-USB Chip. 1: Output-Active 0 : Output Inactive
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_IO_DIGITAL_VALUE">
            <summary>
            Value assigned to a 32 digital I/O pins of a PCAN-USB Chip
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_IO_DIGITAL_SET">
            <summary>
            Value assigned to a 32 digital I/O pins of a PCAN-USB Chip - Multiple digital I/O pins to 1 = High
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_IO_DIGITAL_CLEAR">
            <summary>
            Clear multiple digital I/O pins to 0
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_IO_ANALOG_VALUE">
            <summary>
            Get value of a single analog input pin
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_FIRMWARE_VERSION">
            <summary>
            Get the version of the firmware used by the device associated with a PCAN-Channel
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_ATTACHED_CHANNELS_COUNT">
            <summary>
            Get the amount of PCAN channels attached to a system
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANParameter.PCAN_ATTACHED_CHANNELS">
            <summary>
            Get information about PCAN channels attached to a system
            </summary>
        </member>
        <member name="T:Peak.Can.Basic.TPCANMessageType">
            <summary>
            Represents the type of a PCAN message
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANMessageType.PCAN_MESSAGE_STANDARD">
            <summary>
            The PCAN message is a CAN Standard Frame (11-bit identifier)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANMessageType.PCAN_MESSAGE_RTR">
            <summary>
            The PCAN message is a CAN Remote-Transfer-Request Frame
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANMessageType.PCAN_MESSAGE_EXTENDED">
            <summary>
            The PCAN message is a CAN Extended Frame (29-bit identifier)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANMessageType.PCAN_MESSAGE_FD">
            <summary>
            The PCAN message represents a FD frame in terms of CiA Specs
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANMessageType.PCAN_MESSAGE_BRS">
            <summary>
            The PCAN message represents a FD bit rate switch (CAN data at a higher bit rate)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANMessageType.PCAN_MESSAGE_ESI">
            <summary>
            The PCAN message represents a FD error state indicator(CAN FD transmitter was error active)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANMessageType.PCAN_MESSAGE_ERRFRAME">
            <summary>
            The PCAN message represents an error frame
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANMessageType.PCAN_MESSAGE_STATUS">
            <summary>
            The PCAN message represents a PCAN status message
            </summary>
        </member>
        <member name="T:Peak.Can.Basic.TPCANMode">
            <summary>
            Represents a PCAN filter mode
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANMode.PCAN_MODE_STANDARD">
            <summary>
            Mode is Standard (11-bit identifier)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANMode.PCAN_MODE_EXTENDED">
            <summary>
            Mode is Extended (29-bit identifier)
            </summary>
        </member>
        <member name="T:Peak.Can.Basic.TPCANBaudrate">
            <summary>
            Represents a PCAN Baud rate register value
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANBaudrate.PCAN_BAUD_1M">
            <summary>
            1 MBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANBaudrate.PCAN_BAUD_800K">
            <summary>
            800 KBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANBaudrate.PCAN_BAUD_500K">
            <summary>
            500 kBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANBaudrate.PCAN_BAUD_250K">
            <summary>
            250 kBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANBaudrate.PCAN_BAUD_125K">
            <summary>
            125 kBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANBaudrate.PCAN_BAUD_100K">
            <summary>
            100 kBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANBaudrate.PCAN_BAUD_95K">
            <summary>
            95,238 KBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANBaudrate.PCAN_BAUD_83K">
            <summary>
            83,333 KBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANBaudrate.PCAN_BAUD_50K">
            <summary>
            50 kBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANBaudrate.PCAN_BAUD_47K">
            <summary>
            47,619 KBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANBaudrate.PCAN_BAUD_33K">
            <summary>
            33,333 KBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANBaudrate.PCAN_BAUD_20K">
            <summary>
            20 kBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANBaudrate.PCAN_BAUD_10K">
            <summary>
            10 kBit/s
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANBaudrate.PCAN_BAUD_5K">
            <summary>
            5 kBit/s
            </summary>
        </member>
        <member name="T:Peak.Can.Basic.TPCANType">
            <summary>
            Represents the type of PCAN (Non-PnP) hardware to be initialized
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANType.PCAN_TYPE_ISA">
            <summary>
            PCAN-ISA 82C200
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANType.PCAN_TYPE_ISA_SJA">
            <summary>
            PCAN-ISA SJA1000
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANType.PCAN_TYPE_ISA_PHYTEC">
            <summary>
            PHYTEC ISA 
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANType.PCAN_TYPE_DNG">
            <summary>
            PCAN-Dongle 82C200
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANType.PCAN_TYPE_DNG_EPP">
            <summary>
            PCAN-Dongle EPP 82C200
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANType.PCAN_TYPE_DNG_SJA">
            <summary>
            PCAN-Dongle SJA1000
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANType.PCAN_TYPE_DNG_SJA_EPP">
            <summary>
            PCAN-Dongle EPP SJA1000
            </summary>
        </member>
        <member name="T:Peak.Can.Basic.TPCANMsg">
            <summary>
            Represents a PCAN message
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANMsg.ID">
            <summary>
            11/29-bit message identifier
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANMsg.MSGTYPE">
            <summary>
            Type of the message
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANMsg.LEN">
            <summary>
            Data Length Code of the message (0..8)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANMsg.DATA">
            <summary>
            Data of the message (DATA[0]..DATA[7])
            </summary>
        </member>
        <member name="T:Peak.Can.Basic.TPCANTimestamp">
            <summary>
            Represents a timestamp of a received PCAN message.
            Total Microseconds = micros + 1000 * millis + 0x100000000 * 1000 * millis_overflow
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANTimestamp.millis">
            <summary>
            Base-value: milliseconds: 0.. 2^32-1
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANTimestamp.millis_overflow">
            <summary>
            Roll-arounds of millis
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANTimestamp.micros">
            <summary>
            Microseconds: 0..999
            </summary>
        </member>
        <member name="T:Peak.Can.Basic.TPCANMsgFD">
            <summary>
            Represents a PCAN message from a FD capable hardware
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANMsgFD.ID">
            <summary>
            11/29-bit message identifier
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANMsgFD.MSGTYPE">
            <summary>
            Type of the message
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANMsgFD.DLC">
            <summary>
            Data Length Code of the message (0..15)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANMsgFD.DATA">
            <summary>
            Data of the message (DATA[0]..DATA[63])
            </summary>
        </member>
        <member name="T:Peak.Can.Basic.TPCANChannelInformation">
            <summary>
            Describes an available PCAN channel
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANChannelInformation.channel_handle">
            <summary>
            PCAN channel handle
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANChannelInformation.device_type">
            <summary>
            Kind of PCAN device
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANChannelInformation.controller_number">
            <summary>
            CAN-Controller number
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANChannelInformation.device_features">
            <summary>
            Device capabilities flag (see FEATURE_*)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANChannelInformation.device_name">
            <summary>
            Device name
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANChannelInformation.device_id">
            <summary>
            Device number
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.TPCANChannelInformation.channel_condition">
            <summary>
            Availability status of a PCAN-Channel
            </summary>
        </member>
        <member name="T:Peak.Can.Basic.PCANBasic">
            <summary>
            PCAN-Basic API class implementation
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_NONEBUS">
            <summary>
            Undefined/default value for a PCAN bus
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_ISABUS1">
            <summary>
            PCAN-ISA interface, channel 1
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_ISABUS2">
            <summary>
            PCAN-ISA interface, channel 2
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_ISABUS3">
            <summary>
            PCAN-ISA interface, channel 3
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_ISABUS4">
            <summary>
            PCAN-ISA interface, channel 4
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_ISABUS5">
            <summary>
            PCAN-ISA interface, channel 5
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_ISABUS6">
            <summary>
            PCAN-ISA interface, channel 6
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_ISABUS7">
            <summary>
            PCAN-ISA interface, channel 7
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_ISABUS8">
            <summary>
            PCAN-ISA interface, channel 8
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_DNGBUS1">
            <summary>
            PPCAN-Dongle/LPT interface, channel 1 
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_PCIBUS1">
            <summary>
            PCAN-PCI interface, channel 1
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_PCIBUS2">
            <summary>
            PCAN-PCI interface, channel 2
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_PCIBUS3">
            <summary>
            PCAN-PCI interface, channel 3
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_PCIBUS4">
            <summary>
            PCAN-PCI interface, channel 4
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_PCIBUS5">
            <summary>
            PCAN-PCI interface, channel 5
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_PCIBUS6">
            <summary>
            PCAN-PCI interface, channel 6
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_PCIBUS7">
            <summary>
            PCAN-PCI interface, channel 7
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_PCIBUS8">
            <summary>
            PCAN-PCI interface, channel 8
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_PCIBUS9">
            <summary>
            PCAN-PCI interface, channel 9
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_PCIBUS10">
            <summary>
            PCAN-PCI interface, channel 10
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_PCIBUS11">
            <summary>
            PCAN-PCI interface, channel 11
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_PCIBUS12">
            <summary>
            PCAN-PCI interface, channel 12
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_PCIBUS13">
            <summary>
            PCAN-PCI interface, channel 13
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_PCIBUS14">
            <summary>
            PCAN-PCI interface, channel 14
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_PCIBUS15">
            <summary>
            PCAN-PCI interface, channel 15
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_PCIBUS16">
            <summary>
            PCAN-PCI interface, channel 16
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_USBBUS1">
            <summary>
            PCAN-USB interface, channel 1
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_USBBUS2">
            <summary>
            PCAN-USB interface, channel 2
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_USBBUS3">
            <summary>
            PCAN-USB interface, channel 3
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_USBBUS4">
            <summary>
            PCAN-USB interface, channel 4
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_USBBUS5">
            <summary>
            PCAN-USB interface, channel 5
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_USBBUS6">
            <summary>
            PCAN-USB interface, channel 6
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_USBBUS7">
            <summary>
            PCAN-USB interface, channel 7
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_USBBUS8">
            <summary>
            PCAN-USB interface, channel 8
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_USBBUS9">
            <summary>
            PCAN-USB interface, channel 9
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_USBBUS10">
            <summary>
            PCAN-USB interface, channel 10
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_USBBUS11">
            <summary>
            PCAN-USB interface, channel 11
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_USBBUS12">
            <summary>
            PCAN-USB interface, channel 12
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_USBBUS13">
            <summary>
            PCAN-USB interface, channel 13
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_USBBUS14">
            <summary>
            PCAN-USB interface, channel 14
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_USBBUS15">
            <summary>
            PCAN-USB interface, channel 15
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_USBBUS16">
            <summary>
            PCAN-USB interface, channel 16
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_PCCBUS1">
            <summary>
            PCAN-PC Card interface, channel 1
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_PCCBUS2">
            <summary>
            PCAN-PC Card interface, channel 2
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_LANBUS1">
            <summary>
            PCAN-LAN interface, channel 1
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_LANBUS2">
            <summary>
            PCAN-LAN interface, channel 2
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_LANBUS3">
            <summary>
            PCAN-LAN interface, channel 3
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_LANBUS4">
            <summary>
            PCAN-LAN interface, channel 4
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_LANBUS5">
            <summary>
            PCAN-LAN interface, channel 5
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_LANBUS6">
            <summary>
            PCAN-LAN interface, channel 6
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_LANBUS7">
            <summary>
            PCAN-LAN interface, channel 7
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_LANBUS8">
            <summary>
            PCAN-LAN interface, channel 8
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_LANBUS9">
            <summary>
            PCAN-LAN interface, channel 9
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_LANBUS10">
            <summary>
            PCAN-LAN interface, channel 10
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_LANBUS11">
            <summary>
            PCAN-LAN interface, channel 11
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_LANBUS12">
            <summary>
            PCAN-LAN interface, channel 12
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_LANBUS13">
            <summary>
            PCAN-LAN interface, channel 13
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_LANBUS14">
            <summary>
            PCAN-LAN interface, channel 14
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_LANBUS15">
            <summary>
            PCAN-LAN interface, channel 15
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_LANBUS16">
            <summary>
            PCAN-LAN interface, channel 16
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_BR_CLOCK">
            <summary>
            Clock frequency in Herz (80000000, 60000000, 40000000, 30000000, 24000000, 20000000)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_BR_CLOCK_MHZ">
            <summary>
            Clock frequency in Megaherz (80, 60, 40, 30, 24, 20)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_BR_NOM_BRP">
            <summary>
            Clock prescaler for nominal time quantum
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_BR_NOM_TSEG1">
            <summary>
            TSEG1 segment for nominal bit rate in time quanta
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_BR_NOM_TSEG2">
            <summary>
            TSEG2 segment for nominal bit rate in time quanta
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_BR_NOM_SJW">
            <summary>
            Synchronization Jump Width for nominal bit rate in time quanta
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_BR_NOM_SAMPLE">
            <summary>
            Sample point for nominal bit rate
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_BR_DATA_BRP">
            <summary>
            Clock prescaler for highspeed data time quantum
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_BR_DATA_TSEG1">
            <summary>
            TSEG1 segment for fast data bit rate in time quanta
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_BR_DATA_TSEG2">
            <summary>
            TSEG2 segment for fast data bit rate in time quanta
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_BR_DATA_SJW">
            <summary>
            Synchronization Jump Width for highspeed data bit rate in time quanta
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_BR_DATA_SAMPLE">
            <summary>
            Secondary sample point delay for highspeed data bit rate in cyles
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_PARAMETER_OFF">
            <summary>
            The PCAN parameter is not set (inactive)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_PARAMETER_ON">
            <summary>
            The PCAN parameter is set (active)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_FILTER_CLOSE">
            <summary>
            The PCAN filter is closed. No messages will be received
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_FILTER_OPEN">
            <summary>
            The PCAN filter is fully opened. All messages will be received
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_FILTER_CUSTOM">
            <summary>
            The PCAN filter is custom configured. Only registered 
            messages will be received
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_CHANNEL_UNAVAILABLE">
            <summary>
            The PCAN-Channel handle is illegal, or its associated hardware is not available
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_CHANNEL_AVAILABLE">
            <summary>
            The PCAN-Channel handle is available to be connected (PnP Hardware: it means furthermore that the hardware is plugged-in)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_CHANNEL_OCCUPIED">
            <summary>
            The PCAN-Channel handle is valid, and is already being used
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.PCAN_CHANNEL_PCANVIEW">
            <summary>
            The PCAN-Channel handle is already being used by a PCAN-View application, but is available to connect
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.LOG_FUNCTION_DEFAULT">
            <summary>
            Logs system exceptions / errors
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.LOG_FUNCTION_ENTRY">
            <summary>
            Logs the entries to the PCAN-Basic API functions 
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.LOG_FUNCTION_PARAMETERS">
            <summary>
            Logs the parameters passed to the PCAN-Basic API functions 
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.LOG_FUNCTION_LEAVE">
            <summary>
            Logs the exits from the PCAN-Basic API functions 
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.LOG_FUNCTION_WRITE">
            <summary>
            Logs the CAN messages passed to the CAN_Write function
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.LOG_FUNCTION_READ">
            <summary>
            Logs the CAN messages received within the CAN_Read function
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.LOG_FUNCTION_ALL">
            <summary>
            Logs all possible information within the PCAN-Basic API functions
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.TRACE_FILE_SINGLE">
            <summary>
            A single file is written until it size reaches PAN_TRACE_SIZE
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.TRACE_FILE_SEGMENTED">
            <summary>
            Traced data is distributed in several files with size PAN_TRACE_SIZE
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.TRACE_FILE_DATE">
            <summary>
            Includes the date into the name of the trace file
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.TRACE_FILE_TIME">
            <summary>
            Includes the start time into the name of the trace file
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.TRACE_FILE_OVERWRITE">
            <summary>
            Causes the overwriting of available traces (same name)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.FEATURE_FD_CAPABLE">
            <summary>
            Device supports flexible data-rate (CAN-FD)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.FEATURE_DELAY_CAPABLE">
            <summary>
            Device supports a delay between sending frames (FPGA based USB devices)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.FEATURE_IO_CAPABLE">
            <summary>
            Device supports I/O functionality for electronic circuits (USB-Chip devices)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.SERVICE_STATUS_STOPPED">
            <summary>
            The service is not running
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.SERVICE_STATUS_RUNNING">
            <summary>
            The service is running
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.LOOKUP_DEVICE_TYPE">
            <summary>
            Lookup channel by Device type (see PCAN devices e.g. PCAN_USB)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.LOOKUP_DEVICE_ID">
            <summary>
            Lookup channel by device id
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.LOOKUP_CONTROLLER_NUMBER">
            <summary>
            Lookup channel by CAN controller 0-based index
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.LOOKUP_IP_ADDRESS">
            <summary>
            Lookup channel by IP address (LAN channels only)
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.MAX_LENGTH_HARDWARE_NAME">
            <summary>
            Maximum length of the name of a device: 32 characters + terminator
            </summary>
        </member>
        <member name="F:Peak.Can.Basic.PCANBasic.MAX_LENGTH_VERSION_STRING">
            <summary>
            Maximum length of a version string: 17 characters + terminator
            </summary>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.Initialize(System.UInt16,Peak.Can.Basic.TPCANBaudrate,Peak.Can.Basic.TPCANType,System.UInt32,System.UInt16)">
            <summary>
            Initializes a PCAN Channel 
            </summary>
            <param name="Channel">The handle of a PCAN Channel</param>
            <param name="Btr0Btr1">The speed for the communication (BTR0BTR1 code)</param>
            <param name="HwType">Non-PnP: The type of hardware and operation mode</param>
            <param name="IOPort">Non-PnP: The I/O address for the parallel port</param>
            <param name="Interrupt">Non-PnP: Interrupt number of the parallel por</param>
            <returns>A TPCANStatus error code</returns>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.Initialize(System.UInt16,Peak.Can.Basic.TPCANBaudrate)">
            <summary>
            Initializes a PCAN Channel
            </summary>
            <param name="Channel">The handle of a PCAN Channel</param>
            <param name="Btr0Btr1">The speed for the communication (BTR0BTR1 code)</param>
            <returns>A TPCANStatus error code</returns>        
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.InitializeFD(System.UInt16,System.String)">
            <summary>
            Initializes a FD capable PCAN Channel 
            </summary>
            <param name="Channel">The handle of a FD capable PCAN Channel</param>
            <param name="BitrateFD">The speed for the communication (FD bit rate string)</param>
            <remarks> See PCAN_BR_* values
            Bit rate string must follow the following construction rules:
            * parameters and values must be separated by '='
            * Couples of Parameter/value must be separated by ','
            * Following Parameter must be filled out: f_clock, data_brp, data_sjw, data_tseg1, data_tseg2,
              nom_brp, nom_sjw, nom_tseg1, nom_tseg2.
            * Following Parameters are optional (not used yet): data_ssp_offset, nom_sam</remarks>
            <example>f_clock=80000000,nom_brp=10,nom_tseg1=5,nom_tseg2=2,nom_sjw=1,data_brp=4,data_tseg1=7,data_tseg2=2,data_sjw=1</example>
            <returns>A TPCANStatus error code</returns>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.Uninitialize(System.UInt16)">
            <summary>
            Uninitializes one or all PCAN Channels initialized by CAN_Initialize
            </summary>
            <remarks>Giving the TPCANHandle value "PCAN_NONEBUS", 
            uninitialize all initialized channels</remarks>
            <param name="Channel">The handle of a PCAN Channel</param>
            <returns>A TPCANStatus error code</returns>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.Reset(System.UInt16)">
            <summary>
            Resets the receive and transmit queues of the PCAN Channel
            </summary>
            <remarks>A reset of the CAN controller is not performed</remarks>
            <param name="Channel">The handle of a PCAN Channel</param>
            <returns>A TPCANStatus error code</returns>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.GetStatus(System.UInt16)">
            <summary>
            Gets the current status of a PCAN Channel
            </summary>
            <param name="Channel">The handle of a PCAN Channel</param>
            <returns>A TPCANStatus error code</returns>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.Read(System.UInt16,Peak.Can.Basic.TPCANMsg@,Peak.Can.Basic.TPCANTimestamp@)">
            <summary>
            Reads a CAN message from the receive queue of a PCAN Channel
            </summary>
            <param name="Channel">The handle of a PCAN Channel</param>
            <param name="MessageBuffer">A TPCANMsg structure buffer to store the CAN message</param>
            <param name="TimestampBuffer">A TPCANTimestamp structure buffer to get
            the reception time of the message</param>
            <returns>A TPCANStatus error code</returns>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.Read(System.UInt16,Peak.Can.Basic.TPCANMsg@)">
            <summary>
            Reads a CAN message from the receive queue of a PCAN Channel
            </summary>
            <param name="Channel">The handle of a PCAN Channel</param>
            <param name="MessageBuffer">A TPCANMsg structure buffer to store the CAN message</param>        
            <returns>A TPCANStatus error code</returns>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.ReadFD(System.UInt16,Peak.Can.Basic.TPCANMsgFD@,System.UInt64@)">
            <summary>
            Reads a CAN message from the receive queue of a FD capable PCAN Channel 
            </summary>
            <param name="Channel">The handle of a FD capable PCAN Channel</param>
            <param name="MessageBuffer">A TPCANMsgFD structure buffer to store the CAN message</param>
            <param name="TimestampBuffer">A TPCANTimestampFD buffer to get the
            reception time of the message</param>
            <returns>A TPCANStatus error code</returns>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.ReadFD(System.UInt16,Peak.Can.Basic.TPCANMsgFD@)">
            <summary>
            Reads a CAN message from the receive queue of a FD capable PCAN Channel 
            </summary>
            <param name="Channel">The handle of a FD capable PCAN Channel</param>
            <param name="MessageBuffer">A TPCANMsgFD structure buffer to store the CAN message</param>
            <returns>A TPCANStatus error code</returns>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.Write(System.UInt16,Peak.Can.Basic.TPCANMsg@)">
            <summary>
             Transmits a CAN message 
            </summary>
            <param name="Channel">The handle of a PCAN Channel</param>
            <param name="MessageBuffer">A TPCANMsg buffer with the message to be sent</param>
            <returns>A TPCANStatus error code</returns>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.WriteFD(System.UInt16,Peak.Can.Basic.TPCANMsgFD@)">
            <summary>
            Transmits a CAN message over a FD capable PCAN Channel
            </summary>
            <param name="Channel">The handle of a FD capable PCAN Channel</param>
            <param name="MessageBuffer">A TPCANMsgFD buffer with the message to be sent</param>
            <returns>A TPCANStatus error code</returns>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.FilterMessages(System.UInt16,System.UInt32,System.UInt32,Peak.Can.Basic.TPCANMode)">
            <summary>
            Configures the reception filter
            </summary>
            <remarks>The message filter will be expanded with every call to 
            this function. If it is desired to reset the filter, please use
            the 'SetValue' function</remarks>
            <param name="Channel">The handle of a PCAN Channel</param>
            <param name="FromID">The lowest CAN ID to be received</param>
            <param name="ToID">The highest CAN ID to be received</param>
            <param name="Mode">Message type, Standard (11-bit identifier) or
            Extended (29-bit identifier)</param>
            <returns>A TPCANStatus error code</returns>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.GetValue(System.UInt16,Peak.Can.Basic.TPCANParameter,System.Text.StringBuilder,System.UInt32)">
            <summary>
            Retrieves a PCAN Channel value
            </summary>
            <remarks>Parameters can be present or not according with the kind 
            of Hardware (PCAN Channel) being used. If a parameter is not available,
            a PCAN_ERROR_ILLPARAMTYPE error will be returned</remarks>
            <param name="Channel">The handle of a PCAN Channel</param>
            <param name="Parameter">The TPCANParameter parameter to get</param>
            <param name="StringBuffer">Buffer for the parameter value</param>
            <param name="BufferLength">Size in bytes of the buffer</param>
            <returns>A TPCANStatus error code</returns>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.GetValue(System.UInt16,Peak.Can.Basic.TPCANParameter,System.UInt32@,System.UInt32)">
            <summary>
            Retrieves a PCAN Channel value
            </summary>
            <remarks>Parameters can be present or not according with the kind 
            of Hardware (PCAN Channel) being used. If a parameter is not available,
            a PCAN_ERROR_ILLPARAMTYPE error will be returned</remarks>
            <param name="Channel">The handle of a PCAN Channel</param>
            <param name="Parameter">The TPCANParameter parameter to get</param>
            <param name="NumericBuffer">Buffer for the parameter value</param>
            <param name="BufferLength">Size in bytes of the buffer</param>
            <returns>A TPCANStatus error code</returns>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.GetValue(System.UInt16,Peak.Can.Basic.TPCANParameter,System.UInt64@,System.UInt32)">
            <summary>
            Retrieves a PCAN Channel value
            </summary>
            <remarks>Parameters can be present or not according with the kind 
            of Hardware (PCAN Channel) being used. If a parameter is not available,
            a PCAN_ERROR_ILLPARAMTYPE error will be returned</remarks>
            <param name="Channel">The handle of a PCAN Channel</param>
            <param name="Parameter">The TPCANParameter parameter to get</param>
            <param name="NumericBuffer">Buffer for the parameter value</param>
            <param name="BufferLength">Size in bytes of the buffer</param>
            <returns>A TPCANStatus error code</returns>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.GetValue(System.UInt16,Peak.Can.Basic.TPCANParameter,Peak.Can.Basic.TPCANChannelInformation[])">
            <summary>
            Retrieves a PCAN Channel value
            </summary>
            <remarks>Parameters can be present or not according with the kind 
            of Hardware (PCAN Channel) being used. If a parameter is not available,
            a PCAN_ERROR_ILLPARAMTYPE error will be returned</remarks>
            <param name="Channel">The handle of a PCAN Channel</param>
            <param name="Parameter">The TPCANParameter parameter to get</param>
            <param name="ChannelsBuffer">Buffer for the parameter value</param>
            <returns>A TPCANStatus error code</returns>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.SetValue(System.UInt16,Peak.Can.Basic.TPCANParameter,System.UInt32@,System.UInt32)">
            <summary>
            Configures or sets a PCAN Channel value 
            </summary>
            <remarks>Parameters can be present or not according with the kind 
            of Hardware (PCAN Channel) being used. If a parameter is not available,
            a PCAN_ERROR_ILLPARAMTYPE error will be returned</remarks>
            <param name="Channel">The handle of a PCAN Channel</param>
            <param name="Parameter">The TPCANParameter parameter to set</param>
            <param name="NumericBuffer">Buffer with the value to be set</param>
            <param name="BufferLength">Size in bytes of the buffer</param>
            <returns>A TPCANStatus error code</returns>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.SetValue(System.UInt16,Peak.Can.Basic.TPCANParameter,System.UInt64@,System.UInt32)">
            <summary>
            Configures or sets a PCAN Channel value 
            </summary>
            <remarks>Parameters can be present or not according with the kind 
            of Hardware (PCAN Channel) being used. If a parameter is not available,
            a PCAN_ERROR_ILLPARAMTYPE error will be returned</remarks>
            <param name="Channel">The handle of a PCAN Channel</param>
            <param name="Parameter">The TPCANParameter parameter to set</param>
            <param name="NumericBuffer">Buffer with the value to be set</param>
            <param name="BufferLength">Size in bytes of the buffer</param>
            <returns>A TPCANStatus error code</returns>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.SetValue(System.UInt16,Peak.Can.Basic.TPCANParameter,System.String,System.UInt32)">
            <summary>
            Configures or sets a PCAN Channel value
            </summary>
            <remarks>Parameters can be present or not according with the kind 
            of Hardware (PCAN Channel) being used. If a parameter is not available,
            a PCAN_ERROR_ILLPARAMTYPE error will be returned</remarks>
            <param name="Channel">The handle of a PCAN Channel</param>
            <param name="Parameter"></param>
            <param name="StringBuffer">Buffer with the value to be set</param>
            <param name="BufferLength">Size in bytes of the buffer</param>
            <returns>A TPCANStatus error code</returns>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.GetErrorText(Peak.Can.Basic.TPCANStatus,System.UInt16,System.Text.StringBuilder)">
            <summary>
            Returns a descriptive text of a given TPCANStatus error 
            code, in any desired language
            </summary>
            <remarks>The current languages available for translation are: 
            Neutral (0x00), German (0x07), English (0x09), Spanish (0x0A),
            Italian (0x10) and French (0x0C)</remarks>
            <param name="Error">A TPCANStatus error code</param>
            <param name="Language">Indicates a 'Primary language ID'</param>
            <param name="StringBuffer">Buffer for the text (must be at least 256 in length)</param>
            <returns>A TPCANStatus error code</returns>
        </member>
        <member name="M:Peak.Can.Basic.PCANBasic.LookUpChannel(System.String,System.UInt16@)">
            <summary>
            Finds a PCAN-Basic channel that matches with the given parameters
            </summary>
            <param name="Parameters">A comma separated string contained pairs of 
            parameter-name/value to be matched within a PCAN-Basic channel</param>
            <param name="FoundChannel">Buffer for returning the PCAN-Basic channel, 
            when found</param>
            <returns>A TPCANStatus error code</returns>
        </member>
    </members>
</doc>
